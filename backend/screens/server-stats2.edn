{:reco-preview "2006850921",
 :sql-source
 {:kke192 {:select [:*], :connection-id "system-db", :from [:kke192], :limit 111},
  :gen-viz-553
  {:cache? false,
   :limit 18,
   :group-by [3],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[:ts :desc]],
   :select
   [[[:avg :thread_count] :thread_count]
    [[:round [:avg :ws_peers] 0] :clients]
    [[:substring :ts 1 15] :ts]],
   :post-process-fn reverse},
  :new-query
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 45,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:mem_used 0})
           row
           (get rx idx {:mem_used 0})
           pre-mb
           (/ (get prev-row :mem_used) 1048576)
           mb
           (/ (get row :mem_used) 1048576)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :cpu-query1
  {:cache? false,
   :limit 180,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts1 1 16] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :new-query-1
  {:cache? false,
   :limit 50,
   :style-rules
   {[:sys_load :heatmap-7696]
    {:logic true,
     :style
     {:background-color [:heatmap ["#d0a6b5" "#251e40"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}},
    [:recent_messages_per_second :heatmap-2888]
    {:logic true,
     :style
     {:background-color [:heatmap [nil nil] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}}},
   :_last-run "15:27:24",
   :refresh-every 45,
   :from [[:jvm_stats :zz596]],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [:*]},
  :client-stats-drag-33
  {:select
   [:ack
    :client_latency
    :client_name
    :client_subs
    :last_seen
    :last_seen_seconds
    :push
    :recent_messages_per_second
    :server_subs
    :memory
    :ts],
   :cache? false,
   :refresh-every 20,
   :order-by [[:client_name :asc]],
   :from [[:client_stats :ww254]],
   :_last-run "15:27:45",
   :style-rules
   {[:* :highlight-8717]
    {:logic [:= :client_name :*client-name-str],
     :style {:border "1px solid #cac18255"}}},
   :col-widths
   {:server_subs 111,
    :push 91,
    :client_subs 111,
    :recent_messages_per_second 251,
    :memory 111,
    :ts 151,
    :client_latency 141,
    :ack 81,
    :client_name 231}},
  :jvm-stats-drag-40
  {:select
   [:sql_cache_size
    :thread_count
    [:ts :ts1]
    [[:substr :ts 0 16] :ts]
    :queries_run
    :sniffs_run
    :batches
    :messages
    :recent_batches_per_second
    :recent_messages_per_second
    :recent_queries_per_second
    :internal_queries_run
    :open_flow_channels
    :sys_load
    :used_memory_mb
    :ws_peers],
   :refresh-every 45,
   :cache? false,
   :from [[:jvm_stats :kke192]],
   :order-by [[3 :desc]],
   :_last-run "15:27:23",
   :where [:>= :recent_batches_per_second 0]},
  :gen-viz-1002
  {:cache? false,
   :limit 18,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts 1 15] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :jvm_stats
  {:select [:*], :connection-id "system-db", :from [:jvm_stats], :limit 111},
  :bigfoot-sightings-drag-35
  {:select
   [:alsonoticed
    :bfroid
    :class
    :county
    :date
    :environment
    :fixed_month
    :fixed_year
    :month
    :run_time
    :season
    :state
    :submitted
    :submitted_date
    :timeandconditions
    :title
    :url
    :year],
   :from [[:bigfoot_sightings :bb86]],
   :_last-run "09:11:13"},
  :gen-viz-1022
  {:select
   [[[[:count 1]] :rows]
    [[:substr :submitted_date 6 2] :by_month_sqlite_submitted_date]],
   :from
   [[{:select
      [:alsonoticed
       :bfroid
       :class
       :county
       :date
       :environment
       :fixed_month
       :fixed_year
       :month
       :run_time
       :season
       :state
       :submitted
       :submitted_date
       :timeandconditions
       :title
       :url
       :year],
      :from [[:bigfoot_sightings :bb86]]}
     :cc805]],
   :group-by [[:substr :submitted_date 6 2]]},
  :client_stats
  {:select [:*], :connection-id "system-db", :from [:client_stats], :limit 111},
  :bigfoot_sightings
  {:select [:*],
   :connection-id "system-db",
   :from [:bigfoot_sightings],
   :limit 111},
  :gen-viz-1002-clone-38
  {:cache? false,
   :limit 24,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [[{:group-by [:ts1],
      :from
      [{:select
        [:sql_cache_size
         :thread_count
         [:ts :ts1]
         [[:substr :ts 0 16] :ts]
         :queries_run
         :sniffs_run
         :internal_queries_run
         :used_memory_mb
         :ws_peers],
        :from [[:jvm_stats :kke192]],
        :order-by [[3 :desc]]}],
      :order-by [[:ts1 :asc]],
      :select [[[[:avg :used_memory_mb]] :used_memory_mb] :ts1]}
     :mm308]],
   :order-by [[2 :desc]],
   :select
   [[[:round [:avg :used_memory_mb]] :used_memory_mb]
    [[:raw "strftime('%d-%H', ts1)"] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
 :doom-modal? false,
 :meta
 {nil
  {:fields
   {:vec-val
    {:data-type "string",
     :distinct 2,
     :group-by? true,
     :commons {},
     :cardinality 100}},
   :rowcount 2},
  :flow-fn-sys
  {:fields
   {:name
    {:min ":*",
     :data-type "string",
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :distinct 34,
     :group-by? true,
     :median ":get-colors",
     :max ":write-file",
     :avg ":alert! (non-numeric average)",
     :cardinality 100},
    :description
    {:min "Basic HTTP call primitive",
     :data-type "string",
     :commons
     {"Basic HTTP call primitive" 2,
      "Clojure subtract function." 2,
      "Get top 50 color frequencies from an image in hex form." 1},
     :distinct 32,
     :group-by? true,
     :median "Clojure true? function.",
     :max "Write you own Clojure function! Godspeed!",
     :avg
     "Send a pop-up notification to a client (or :all clients) (non-numeric average)",
     :cardinality 94},
    :full_map
    {:min
     "{:description \"Basic HTTP call primitive\", :fn (fn [req-map] (rvbbit-backend.websockets/http-call req-map)), :icon \"zmdi-http\", :defaults {:req-map {:url \"https://owen-wilson-wow-api.onrender.com/wows/random\", :query-params {:movie \"Wedding Crashers\", :results 40}}}, :types {:req-map :map, :out :any}, :style {:color \"#7BB696\"}, :selected-style {:color \"#7BB696\"}, :inputs [:req-map], :expandable? false, :required [:req-map]}",
     :data-type "string",
     :commons
     {"{:description \"Clojure add function.\", :fn (fn [& args] (apply + args)), :inputs [:args], :icon \"zmdi-plus\", :types {:args [:integer :float], :out [:integer :float]}}"
      1,
      "{:description \"Convert a JSON string to Clojure EDN\", :fn (fn [json-string] (rvbbit-backend.util/json-to-edn json-string)), :inputs [:json-string], :icon \"zmdi-file-text\", :types {:json-string :string, :out :any}}"
      1,
      "{:description \"Clojure greater-than-or-equal function.\", :fn >, :inputs [:value1 :value2], :icon \"zmdi-chevron-right\", :types {:value1 [:integer :float], :value2 [:integer :float], :out :boolean}}"
      1},
     :distinct 34,
     :group-by? true,
     :median
     "{:description \"Clojure true? function.\", :fn true?, :inputs [:value], :icon \"zmdi-pizza\", :types {:value :boolean, :out :boolean}}",
     :max
     "{:file-path \"./flows/node-color-thief-js.edn\", :icon \"zmdi-gradient\", :description \"Take an image local path and generate a color palette map from it.\"}",
     :avg
     "{:description \"Send a pop-up notification to a client (or :all clients)\", :fn (fn [destination content w h duration] (rvbbit-backend.websockets/alert! destination content w h duration)), :inputs [:destination :content :w :h :duration], :icon \"zmdi-alert-polygon\", :style {:color \"#FDFD96\"}, :selected-style {:color \"#FDFD96\"}, :defaults {:destination :client-name, :content \"Alert!\", :w 10, :h 1, :duration 6}, :types {:destination :keyword, :content :any, :out :any, :w :integer, :h :integer, :duration :integer}} (non-numeric average)",
     :cardinality 100},
    :inputs
    {:min "",
     :data-type "string",
     :commons
     {"[:value1 :value2]" 7,
      "[:value]" 6,
      "[:destination :content :w :h :duration]" 3},
     :distinct 20,
     :group-by? true,
     :median "[:query]",
     :max "[:value]",
     :avg "[:destination :content :w :h :duration] (non-numeric average)",
     :cardinality 58},
    :icon
    {:min "fa-solid fa-terminal",
     :data-type "string",
     :commons {"zmdi-pizza" 3, "zmdi-file-text" 3, "zmdi-alert-polygon" 3},
     :distinct 20,
     :group-by? true,
     :median "zmdi-functions",
     :max "zmdi-washing-machine",
     :avg "zmdi-alert-polygon (non-numeric average)",
     :cardinality 58},
    :input_types
    {:min "[:any :any]",
     :data-type "string",
     :commons
     {"[[:integer :float] [:integer :float]]" 6, "[:string]" 6, "[:any]" 3},
     :distinct 17,
     :group-by? true,
     :median "[:string :string]",
     :max "[]",
     :avg "[:keyword :any :integer :integer :integer] (non-numeric average)",
     :cardinality 50},
    :output_types
    {:min "",
     :data-type "string",
     :commons {":any" 12, ":boolean" 11, ":string" 4},
     :distinct 8,
     :group-by? true,
     :median ":boolean",
     :max "[:integer :float]",
     :avg ":any (non-numeric average)",
     :cardinality 23},
    :category
    {:min ":clojure-base",
     :data-type "string",
     :commons {":rabbit-base" 18, ":clojure-base" 16},
     :distinct 2,
     :group-by? true,
     :median ":rabbit-base",
     :max ":rabbit-base",
     :avg ":rabbit-base (non-numeric average)",
     :cardinality 5}},
   :database-type "SQLite",
   :rowcount 34},
  :blocks-sys
  {:fields
   {:block_key
    {:min ":*theme*",
     :data-type "string",
     :commons {":block-3777" 1, ":block-2536" 1, ":block-7416" 1},
     :distinct 30,
     :group-by? true,
     :median ":block-3341",
     :max "through the rabbit hole and out the other side",
     :avg ":*theme* (non-numeric average)",
     :cardinality 100},
    :block_name
    {:min "(meta: this screen's theme)",
     :data-type "string",
     :commons
     {"drag-from-select-all-ufo_sightings" 4,
      "block-12050" 1,
      "board: sapphire ape" 1},
     :distinct 27,
     :group-by? true,
     :median "block-7215",
     :max "the palette!",
     :avg "(meta: this screen's theme) (non-numeric average)",
     :cardinality 89},
    :queries
    {:min 0,
     :data-type "integer",
     :commons {0 20, 1 9, 2 1},
     :distinct 3,
     :group-by? true,
     :median 0,
     :max 2,
     :avg 0.36666666666666664,
     :cardinality 10},
    :views
    {:min 0,
     :data-type "integer",
     :commons {1 11, 0 9, 2 9},
     :distinct 4,
     :group-by? true,
     :median 1,
     :max 29,
     :avg 1.9333333333333333,
     :cardinality 13},
    :block_data
    {:min
     "{:codemirror-theme \"rvbbit-dynamic\", :editor-param-background-color \"#000000\", :pop-2 :solver/colors-of-the-moment>colors>2, :base-block-style {:text-shadow \"4px 4px 4px #00000088\"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#04041e82\", :editor-rim-color [:str :solver/colors-of-the-moment>brightest 99], :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors :solver/colors-of-the-moment>data-colors, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color :solver/colors-of-the-moment>brightest, :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image [:str \"url(\" :solver/wallpaper-of-the-moment \")\"], :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-position \"center\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Poppins\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\", :pop-1 :solver/colors-of-the-moment>colors>1}",
     :data-type "string",
     :commons
     {"{:h 2, :w 16, :root [0 1], :tab \"through the rabbit hole and out the other side\", :selected-view :hi, :name \"block-2536\", :views {:hi [:box :attr {:id \":block-6121.:hi\"} :style {:font-size \"15px\", :padding-top \"6px\", :padding-left \"14px\", :margin-top \"-8px\", :color :theme/editor-outer-rim-color, :font-family :theme/base-font} :child [:speak-click \"Did you ever need a flow to stop and present an operator with some choices? Static or dynamic we need help to continue processing. How about this ALSO happening headlessly & seamlessly with your data UI?\"]], :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}, :queries {}}"
      1,
      "{:h 5, :w 8, :connection-id \"bigfoot-ufos\", :name \"drag-from-select-all-ufo_sightings\", :queries {:state-drag-3 {:select [:state [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :uu58]], :group-by [:state], :order-by [[:rowcnt :desc]]}}, :root [17 8], :tab \"sapphire ape\"}"
      1,
      "{:h 7, :w 32, :connection-id \"bigfoot-ufos\", :name \"select-all-ufo_sightings\", :queries {:ufo-sightings-drag-9 {:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]}}, :root [1 1], :tab \"sapphire ape\", :selected-view :ufo-sightings-drag-9}"
      1},
     :distinct 30,
     :group-by? true,
     :median
     "{:h 5, :w 8, :connection-id \"bigfoot-ufos\", :name \"drag-from-select-all-ufo_sightings\", :queries {:shape-drag-7 {:select [:shape [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :hh354]], :group-by [:shape], :order-by [[:rowcnt :desc]]}}, :root [9 8], :tab \"sapphire ape\"}",
     :max
     "{:panels {:block-414 {:mad-libs-combo-hash [\"572062609\" \"ufo_sightings_drag_9\"], :name \"basic_timeseries - \\\"date_posted, rows\\\" - 769\", :w 9, :root [5 13], :h 5, :connection-id \"bigfoot-ufos\", :queries {:gen-viz-797 {:select [[[:count 1] :rows] :date_posted], :from [{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]}], :group-by [:date_posted]}}, :tab \"sapphire ape\", :conditionals nil, :views {:oz [:vega-lite {:layer [{:encoding {:x {:field :date_posted, :type \"temporal\", :sort \"x\"}, :y {:aggregate \"sum\", :field :rows, :type \"quantitative\"}, :row {:field nil, :legend nil}, :size {:legend nil}, :shape {:legend nil}, :column {:field nil, :legend nil}, :color {:scale :theme/vega-default-color-scheme, :legend nil, :field nil, :type \"ordinal\"}}, :mark {:type \"area\", :interpolate \"monotone\", :point \"transparent\", :tooltip {:content \"encoding\"}}}], :data {:values :gen-viz-797}, :config :theme/vega-defaults, :width \"container\", :height :panel-height, :padding 4, :background \"transparent\"} {:actions false}]}}, :block-11609 {:h 5, :w 8, :connection-id \"bigfoot-ufos\", :name \"drag-from-select-all-ufo_sightings\", :queries {:city-drag-26 {:select [:city [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :ff571]], :group-by [:city], :order-by [[:rowcnt :desc]]}}, :root [1 8], :tab \"sapphire ape\"}, :block-7416 {:h 5, :w 4, :connection-id \"bigfoot-ufos\", :name \"drag-from-drag-from-select-all-ufo_sightings\", :queries {:rowcnt-drag-2 {:select [[[:sum :rowcnt] :rowcnt_sum]], :from [[{:select [:city [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :ff571]], :group-by [:city], :order-by [[:rowcnt :desc]]} :yy403]]}}, :root [1 13], :tab \"sapphire ape\"}, :block-204 {:mad-libs-combo-hash [\"-1610972762\" \"ufo_sightings_drag_9\"], :name \"compound_trend_1 - \\\"date_posted, rows\\\" - 1141\", :w 10, :root [23 13], :h 5, :connection-id \"bigfoot-ufos\", :queries {:gen-viz-828 {:select [[[[:count 1]] :agg] :date_posted], :from [{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]}], :order-by [[:date_posted :desc]], :group-by [:date_posted]}, :gen-viz-94 {:select [[[:max [:round [:raw [\"(100 * ((\" nil \".0 - \" nil \".0) / \" nil \".0))\"]] 2]] :diff]], :from [{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]}]}}, :tab \"sapphire ape\", :conditionals {:c345-up-or-down? [:reagent-gt :query-preview/agg.0 :query-preview/agg.1]}, :views {:oz [:v-box :size \"auto\" :height :half-panel-height-px :style {:padding-left \"8px\", :padding-right \"8px\"} :children [[:h-box :justify :between :children [[:box :padding \"16px\" :child [:number :query-preview/agg.0] :style {:font-size \"39px\", :color \"#ffffff\"}] [:h-box :padding \"13px\" :size \"auto\" :children [[:icon :md-icon-name [:if :condi/c345-up-or-down? \"zmdi-chevron-up\" \"zmdi-chevron-down\"] :style {:font-size \"55px\", :color [:if :condi/c345-up-or-down? \"#20f323\" \"#f36464\"], :opacity 0.5, :margin-top \"8px\"}] [:box :child [:percent :query-preview-2/diff.0] :style {:font-size \"25px\", :padding \"15px\"}]]]]] [:box :style {:margin-top \"-10px\"} :size \"auto\" :child [:vega-lite {:layer [{:encoding {:x {:field :date_posted, :type \"temporal\", :title nil, :sort \"x\"}, :y {:aggregate \"sum\", :field :agg, :title nil, :scale {:zero false}, :type \"quantitative\"}, :row {:field nil, :legend nil}, :size {:legend nil}, :shape {:legend nil}, :column {:field nil, :legend nil}, :color {:scale {:scheme \"purples\"}, :legend nil, :field 1, :type \"ordinal\"}}, :mark {:type \"line\", :interpolate \"monotone\", :line true, :point true, :tooltip {:content \"encoding\"}}}], :data {:values :gen-viz-828}, :config {:view {:stroke \"transparent\"}, :line {:strokeWidth 3}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#afafaf\", :titleFont \"Lato\", :titleColor \"#282828\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :width :panel-width, :height :half-panel-height, :padding 4, :background \"transparent\"} {:actions false}]] [:box :align :center :justify :center :style {:padding-top \"133px\", :font-size \"20px\"} :child [:string [:date_posted \" vs \" :rows]]]]]}}, :block-8805 {:h 5, :w 8, :connection-id \"bigfoot-ufos\", :name \"drag-from-select-all-ufo_sightings\", :queries {:duration-hours-drag-43 {:select [:duration_hours [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :cc350]], :group-by [:duration_hours], :order-by [[:rowcnt :desc]]}}, :root [25 8], :tab \"sapphire ape\"}, :block-94 {:mad-libs-combo-hash [\"1561519308\" \"ufo_sightings_drag_9\"], :name \"basic_v_bar - \\\"country, rows\\\" - 559\", :w 9, :root [14 13], :h 5, :connection-id \"bigfoot-ufos\", :queries {:gen-viz-84 {:select [[[:count 1] :rows] :country], :from [{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]}], :group-by [:country]}}, :tab \"sapphire ape\", :conditionals nil, :views {:oz [:vega-lite {:layer [{:encoding {:y {:field :country, :type \"ordinal\"}, :x {:aggregate \"sum\", :field :rows, :type \"quantitative\"}, :row {:field nil, :legend nil}, :size {:legend nil}, :shape {:legend nil}, :column {:field nil, :legend nil}, :color {:scale :theme/vega-default-color-scheme, :legend nil, :field 1, :type \"ordinal\"}}, :mark {:type \"bar\", :tooltip {:content \"encoding\"}}}], :data {:values :gen-viz-84}, :config :theme/vega-defaults, :width \"container\", :height :panel-height, :padding 4, :background \"transparent\"} {:actions false}]}}, :block-7319 {:h 5, :w 8, :connection-id \"bigfoot-ufos\", :name \"drag-from-select-all-ufo_sightings\", :queries {:shape-drag-7 {:select [:shape [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :hh354]], :group-by [:shape], :order-by [[:rowcnt :desc]]}}, :root [9 8], :tab \"sapphire ape\"}, :block-3777 {:h 5, :w 8, :connection-id \"bigfoot-ufos\", :name \"drag-from-select-all-ufo_sightings\", :queries {:state-drag-3 {:select [:state [[:count 1] :rowcnt]], :from [[{:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]} :uu58]], :group-by [:state], :order-by [[:rowcnt :desc]]}}, :root [17 8], :tab \"sapphire ape\"}, :block-1449 {:h 7, :w 32, :connection-id \"bigfoot-ufos\", :name \"select-all-ufo_sightings\", :queries {:ufo-sightings-drag-9 {:select [:city :country :date_posted :datetime :duration_hours :duration_seconds :duration_seconds_int :latitude :longitude :shape :state], :from [[:ufo_sightings :jj584]], :order-by [[:city :asc]]}}, :root [1 1], :tab \"sapphire ape\", :selected-view :ufo-sightings-drag-9}}, :click-param {:param {:selected-view [nil :*], :selected-view-data nil, :testme :solver/colors-of-the-moment>colors>1, :test [:string [:get-in [:solver/colors-of-the-moment [:colors 2]]]], :selected-block :block-3341}}}",
     :avg
     "{:codemirror-theme \"rvbbit-dynamic\", :editor-param-background-color \"#000000\", :pop-2 :solver/colors-of-the-moment>colors>2, :base-block-style {:text-shadow \"4px 4px 4px #00000088\"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#04041e82\", :editor-rim-color [:str :solver/colors-of-the-moment>brightest 99], :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors :solver/colors-of-the-moment>data-colors, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color :solver/colors-of-the-moment>brightest, :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image [:str \"url(\" :solver/wallpaper-of-the-moment \")\"], :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-position \"center\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Poppins\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\", :pop-1 :solver/colors-of-the-moment>colors>1} (non-numeric average)",
     :cardinality 100},
    :view_names
    {:min "",
     :data-type "string",
     :commons {":hi :stack" 9, "" 9, ":hi" 3},
     :distinct 10,
     :group-by? true,
     :median ":hi",
     :max ":view-clone",
     :avg
     ":codemirror-theme :editor-param-background-color :pop-2 :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color :pop-1 (non-numeric average)",
     :cardinality 33},
    :query_names
    {:min "",
     :data-type "string",
     :commons {"" 20, ":city-drag-26" 1, ":state-drag-3" 1},
     :distinct 11,
     :group-by? true,
     :median "",
     :max ":ufo-sightings-drag-9",
     :avg " (non-numeric average)",
     :cardinality 36}},
   :database-type "SQLite",
   :rowcount 30},
  :fields-sys {:fields {}, :database-type "SQLite", :rowcount 0},
  :kke192
  {:fields
   {:query_error
    {:min "",
     :data-type "string",
     :commons
     {nil 1,
      "{:datasource #object[com.zaxxer.hikari.HikariDataSource 0x5ce6337b \"HikariDataSource (system-db)\"]}"
      1,
      "(from database connection)" 1},
     :distinct 4,
     :group-by? true,
     :median "(from database connection)",
     :max
     "{:datasource #object[com.zaxxer.hikari.HikariDataSource 0x5ce6337b \"HikariDataSource (system-db)\"]}",
     :avg
     "[SQLITE_ERROR] SQL error or missing database (no such table: kke192) (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 4},
  :gen-viz-553
  {:fields
   {:thread_count
    {:min 190.64705882352942,
     :data-type "float",
     :commons {218.93333333333334 1, 230.66666666666666 1, 190.64705882352942 1},
     :distinct 3,
     :group-by? true,
     :median 218.93333333333334,
     :max 230.66666666666666,
     :avg 213.4156862745098,
     :cardinality 100},
    :clients
    {:min 8,
     :data-type "float",
     :commons {8 3},
     :distinct 1,
     :group-by? true,
     :median 8,
     :max 8,
     :avg 8,
     :cardinality 33},
    :ts
    {:min "2024-09-17 13:1",
     :data-type "string",
     :commons {"2024-09-17 13:3" 1, "2024-09-17 13:2" 1, "2024-09-17 13:1" 1},
     :distinct 3,
     :group-by? true,
     :median "2024-09-17 13:2",
     :max "2024-09-17 13:3",
     :avg "2024-09-17 13:1 (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 3},
  :status-drag-0
  {:fields
   {:queries_run
    {:min 8,
     :data-type "integer",
     :commons {177 2, 63 2, 73 2},
     :distinct 48,
     :group-by? true,
     :median 182,
     :max 198,
     :avg 115.36666666666666,
     :cardinality 80},
    :recent_messages_per_second
    {:min -244,
     :data-type "float",
     :commons {30.07 3, 29.6 3, 29.27 2},
     :distinct 49,
     :group-by? true,
     :median 29.835,
     :max 44.27,
     :avg 27.379000000000005,
     :cardinality 81},
    :uptime_seconds
    {:min -1,
     :data-type "integer",
     :commons {764 1, 209 1, 194 1},
     :distinct 60,
     :group-by? true,
     :median 486.5,
     :max 884,
     :avg 441.5,
     :cardinality 100},
    :queries_per_second
    {:min -8,
     :data-type "float",
     :commons {0 59, -8 1},
     :distinct 2,
     :group-by? true,
     :median 0,
     :max 0,
     :avg -0.13333333333333333,
     :cardinality 3},
    :recent_batches
    {:min 0,
     :data-type "integer",
     :commons {1938 1, 2666 1, 711 1},
     :distinct 60,
     :group-by? true,
     :median 2437,
     :max 3274,
     :avg 1643.6333333333334,
     :cardinality 100},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 60},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :ts
    {:min "2024-08-29 12:33:51",
     :data-type "string",
     :commons
     {"2024-08-29 12:35:36" 1, "2024-08-29 12:47:21" 1, "2024-08-29 12:35:21" 1},
     :distinct 60,
     :group-by? true,
     :median "2024-08-29 12:41:06",
     :max "2024-08-29 12:48:36",
     :avg "2024-08-29 12:33:51 (non-numeric average)",
     :cardinality 100},
    :subscriptions
    {:min 45,
     :data-type "integer",
     :commons {73 22, 99 13, 92 8},
     :distinct 11,
     :group-by? true,
     :median 73,
     :max 127,
     :avg 86.7,
     :cardinality 18},
    :messages_per_second
    {:min -250,
     :data-type "float",
     :commons {32.55 2, 33.15 2, 32.93 1},
     :distinct 58,
     :group-by? true,
     :median 33.44499999999999,
     :max 38.55,
     :avg 29.36633333333333,
     :cardinality 96},
    :messages
    {:min 250,
     :data-type "integer",
     :commons {6267 1, 21625 1, 4290 1},
     :distinct 60,
     :group-by? true,
     :median 23147,
     :max 28808,
     :avg 14844.166666666666,
     :cardinality 100},
    :sniffs_run
    {:min 2,
     :data-type "integer",
     :commons {18 55, 16 2, 2 2},
     :distinct 4,
     :group-by? true,
     :median 18,
     :max 18,
     :avg 17.2,
     :cardinality 6},
    :sys_load
    {:min 0.49,
     :data-type "float",
     :commons {0.62 2, 0.49 2, 1.56 2},
     :distinct 53,
     :group-by? true,
     :median 13.905000000000001,
     :max 21.91,
     :avg 9.77583333333333,
     :cardinality 88},
    :recent_batches_per_second
    {:min -16,
     :data-type "float",
     :commons {3.2 13, 3.33 9, 3.4 7},
     :distinct 20,
     :group-by? true,
     :median 3.33,
     :max 5.33,
     :avg 3.4061666666666657,
     :cardinality 33},
    :batches
    {:min 16,
     :data-type "integer",
     :commons {1938 1, 2666 1, 711 1},
     :distinct 60,
     :group-by? true,
     :median 2493,
     :max 3322,
     :avg 1699,
     :cardinality 100},
    :unix_ms
    {:min 1724949231824,
     :data-type "integer",
     :commons {1724949531819 1, 1724949321819 1, 1724949666819 1},
     :distinct 60,
     :group-by? true,
     :median 1724949674319,
     :max 1724950116819,
     :avg 1.7249496743191167E12,
     :cardinality 100},
    :used_memory_mb
    {:min 707,
     :data-type "integer",
     :commons {1074 2, 1137 2, 1535 1},
     :distinct 58,
     :group-by? true,
     :median 1651.5,
     :max 3042,
     :avg 1368.7166666666667,
     :cardinality 96},
    :recent_queries_run
    {:min 0,
     :data-type "integer",
     :commons {1 28, 8 15, 0 12},
     :distinct 7,
     :group-by? true,
     :median 1,
     :max 22,
     :avg 3.3,
     :cardinality 11},
    :thread_count
    {:min 162,
     :data-type "integer",
     :commons {238 7, 235 5, 237 4},
     :distinct 34,
     :group-by? true,
     :median 235,
     :max 254,
     :avg 221.73333333333332,
     :cardinality 56},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 60},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 60},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 1},
    :ws_peers
    {:min 2,
     :data-type "integer",
     :commons {3 59, 2 1},
     :distinct 2,
     :group-by? true,
     :median 3,
     :max 3,
     :avg 2.9833333333333334,
     :cardinality 3},
    :recent_messages
    {:min 6,
     :data-type "integer",
     :commons {8879 1, 28354 1, 5609 1},
     :distinct 60,
     :group-by? true,
     :median 23152.5,
     :max 28354,
     :avg 14368.45,
     :cardinality 100},
    :recent_queries_per_second
    {:min -8,
     :data-type "float",
     :commons {0.07 28, 0.53 14, 0 12},
     :distinct 8,
     :group-by? true,
     :median 0.07,
     :max 1.47,
     :avg 0.07866666666666668,
     :cardinality 13},
    :batches_per_second
    {:min -16,
     :data-type "float",
     :commons {3.77 3, 3.81 3, 3.88 3},
     :distinct 38,
     :group-by? true,
     :median 3.83,
     :max 4.37,
     :avg 3.5175000000000005,
     :cardinality 63},
    :seconds_since_last_update
    {:min -1,
     :data-type "integer",
     :commons {14 39, 15 20, -1 1},
     :distinct 3,
     :group-by? true,
     :median 14,
     :max 15,
     :avg 14.083333333333334,
     :cardinality 5}},
   :database-type "SQLite",
   :rowcount 60},
  :tables-sys {:fields {}, :database-type "SQLite", :rowcount 0},
  :new-query
  {:fields
   {:diff
    {:min "214 MB",
     :data-type "string",
     :commons {"214 MB" 1},
     :distinct 1,
     :group-by? true,
     :median "214 MB",
     :max "214 MB",
     :avg "214 MB (non-numeric average)",
     :cardinality 100},
    :mem_used
    {:min 224456314,
     :data-type "float",
     :commons {224456314 1},
     :distinct 1,
     :group-by? true,
     :median 224456314,
     :max 224456314,
     :avg 224456314,
     :cardinality 100},
    :ts_hour
    {:min "2024-09-17 13:3",
     :data-type "string",
     :commons {"2024-09-17 13:3" 1},
     :distinct 1,
     :group-by? true,
     :median "2024-09-17 13:3",
     :max "2024-09-17 13:3",
     :avg "2024-09-17 13:3 (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 1},
  :cpu-query1
  {:fields
   {:diff
    {:min "+1087",
     :data-type "string",
     :commons {"+835" 1, "+467" 1, "+677" 1},
     :distinct 23,
     :group-by? true,
     :median "-2267",
     :max "1034 MB",
     :avg "1034 MB (non-numeric average)",
     :cardinality 100},
    :used_memory_mb
    {:min 1034,
     :data-type "float",
     :commons {3596.67 1, 3709.75 1, 3985.75 1},
     :distinct 23,
     :group-by? true,
     :median 1920.5,
     :max 4200,
     :avg 2260.181304347826,
     :cardinality 100},
    :cpu_usage
    {:min 3.39,
     :data-type "float",
     :commons {3.42 2, 3.94 1, 8.26 1},
     :distinct 22,
     :group-by? true,
     :median 3.96,
     :max 33.11,
     :avg 6.019130434782609,
     :cardinality 95},
    :mps
    {:min 49.21,
     :data-type "float",
     :commons {60.46 1, 72.42 1, 49.21 1},
     :distinct 23,
     :group-by? true,
     :median 70.66,
     :max 252.49,
     :avg 85.23521739130436,
     :cardinality 100},
    :ts1
    {:min "2024-09-17 13:15",
     :data-type "string",
     :commons {"2024-09-17 13:24" 1, "2024-09-17 13:33" 1, "2024-09-17 13:31" 1},
     :distinct 23,
     :group-by? true,
     :median "2024-09-17 13:26",
     :max "2024-09-17 13:37",
     :avg "2024-09-17 13:15 (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 23},
  :new-query-1
  {:fields
   {:queries_run
    {:min 347,
     :data-type "integer",
     :commons {431 2, 673 2, 754 1},
     :distinct 48,
     :group-by? true,
     :median 551,
     :max 806,
     :avg 563.54,
     :cardinality 95},
    :recent_messages_per_second
    {:min 57.71,
     :data-type "float",
     :commons {101.11 1, 99.11 1, 69.11 1},
     :distinct 50,
     :group-by? true,
     :median 67.86500000000001,
     :max 156.07,
     :avg 79.3558,
     :cardinality 100},
    :uptime_seconds
    {:min 554,
     :data-type "integer",
     :commons {1259 1, 1004 1, 764 1},
     :distinct 50,
     :group-by? true,
     :median 621.5,
     :max 1304,
     :avg 936.2,
     :cardinality 100},
    :queries_per_second
    {:min 0,
     :data-type "float",
     :commons {0 50},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :recent_batches
    {:min 4525,
     :data-type "integer",
     :commons {8879 1, 7253 1, 5000 1},
     :distinct 50,
     :group-by? true,
     :median 7081,
     :max 10444,
     :avg 7543.12,
     :cardinality 100},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 50},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :styler_heatmap_2888
    {:min 1,
     :data-type "integer",
     :commons {1 50},
     :distinct 1,
     :group-by? true,
     :median 1,
     :max 1,
     :avg 1,
     :cardinality 1},
    :ts
    {:min "2024-09-17 13:24:48",
     :data-type "string",
     :commons
     {"2024-09-17 13:26:03" 1, "2024-09-17 13:25:18" 1, "2024-09-17 13:30:03" 1},
     :distinct 50,
     :group-by? true,
     :median "2024-09-17 13:31:03",
     :max "2024-09-17 13:37:18",
     :avg "2024-09-17 13:37:18 (non-numeric average)",
     :cardinality 100},
    :subscriptions
    {:min 165,
     :data-type "integer",
     :commons {166 23, 167 9, 204 7},
     :distinct 9,
     :group-by? true,
     :median 167,
     :max 204,
     :avg 174.94,
     :cardinality 18},
    :messages_per_second
    {:min 88.13,
     :data-type "float",
     :commons {91.91 2, 92.44 2, 90.14 1},
     :distinct 48,
     :group-by? true,
     :median 92.32,
     :max 98.6,
     :avg 92.33600000000004,
     :cardinality 95},
    :messages
    {:min 54723,
     :data-type "integer",
     :commons {112829 1, 59509 1, 80474 1},
     :distinct 50,
     :group-by? true,
     :median 69336,
     :max 115007,
     :avg 86043.26,
     :cardinality 100},
    :sniffs_run
    {:min 43,
     :data-type "integer",
     :commons {43 41, 53 8, 49 1},
     :distinct 3,
     :group-by? true,
     :median 43,
     :max 53,
     :avg 44.72,
     :cardinality 5},
    :sys_load
    {:min 3.11,
     :data-type "float",
     :commons {3.28 3, 3.39 3, 5.04 2},
     :distinct 42,
     :group-by? true,
     :median 3.55,
     :max 5.68,
     :avg 3.8552000000000004,
     :cardinality 83},
    :recent_batches_per_second
    {:min 6.74,
     :data-type "float",
     :commons {7.87 5, 7.67 5, 8.07 5},
     :distinct 27,
     :group-by? true,
     :median 7.865,
     :max 9,
     :avg 7.8926,
     :cardinality 54},
    :batches
    {:min 4643,
     :data-type "integer",
     :commons {8879 1, 7253 1, 5000 1},
     :distinct 50,
     :group-by? true,
     :median 7081,
     :max 10563,
     :avg 7661.5,
     :cardinality 100},
    :unix_ms
    {:min 1726593888166,
     :data-type "integer",
     :commons {1726593948166 1, 1726594533158 1, 1726594218158 1},
     :distinct 50,
     :group-by? true,
     :median 1.7265942706635E12,
     :max 1726594638159,
     :avg 1.72659427036104E12,
     :cardinality 100},
    :used_memory_mb
    {:min 740,
     :data-type "integer",
     :commons {1033 2, 3758 2, 3143 1},
     :distinct 48,
     :group-by? true,
     :median 3392,
     :max 4806,
     :avg 2616.82,
     :cardinality 95},
    :styler_heatmap_7696
    {:min 1,
     :data-type "integer",
     :commons {1 50},
     :distinct 1,
     :group-by? true,
     :median 1,
     :max 1,
     :avg 1,
     :cardinality 1},
    :recent_queries_run
    {:min 0,
     :data-type "integer",
     :commons {2 12, 16 6, 9 6},
     :distinct 14,
     :group-by? true,
     :median 2,
     :max 30,
     :avg 9.34,
     :cardinality 28},
    :thread_count
    {:min 196,
     :data-type "integer",
     :commons {212 4, 203 3, 201 3},
     :distinct 35,
     :group-by? true,
     :median 211.5,
     :max 291,
     :avg 216.62,
     :cardinality 69},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 50},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 50},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 1},
    :ws_peers
    {:min 8,
     :data-type "integer",
     :commons {8 50},
     :distinct 1,
     :group-by? true,
     :median 8,
     :max 8,
     :avg 8,
     :cardinality 1},
    :recent_messages
    {:min 53770,
     :data-type "integer",
     :commons {85981 1, 57641 1, 108562 1},
     :distinct 50,
     :group-by? true,
     :median 69346,
     :max 113887,
     :avg 84854.14,
     :cardinality 100},
    :recent_queries_per_second
    {:min 0,
     :data-type "float",
     :commons {0.13 12, 1.07 6, 0.6 6},
     :distinct 14,
     :group-by? true,
     :median 0.6,
     :max 2,
     :avg 0.6224000000000001,
     :cardinality 28},
    :batches_per_second
    {:min 8.09,
     :data-type "float",
     :commons {8.09 6, 8.32 5, 8.13 4},
     :distinct 24,
     :group-by? true,
     :median 8.18,
     :max 8.37,
     :avg 8.195599999999999,
     :cardinality 47},
    :seconds_since_last_update
    {:min 14,
     :data-type "integer",
     :commons {14 26, 15 24},
     :distinct 2,
     :group-by? true,
     :median 14,
     :max 15,
     :avg 14.48,
     :cardinality 3}},
   :database-type "SQLite",
   :rowcount 50},
  :tests {:fields {}, :database-type "SQLite", :rowcount 0},
  :client-stats-drag-33
  {:fields
   {:server_subs
    {:min 3,
     :data-type "integer",
     :commons {7 2, 29 2, 17 1},
     :distinct 8,
     :group-by? true,
     :median 29,
     :max 31,
     :avg 18.3,
     :cardinality 80},
    :push
    {:min 17,
     :data-type "integer",
     :commons {704 1, 18347 1, 17 1},
     :distinct 10,
     :group-by? true,
     :median 2847,
     :max 18347,
     :avg 5643.4,
     :cardinality 100},
    :client_subs
    {:min 3,
     :data-type "integer",
     :commons {7 2, 29 2, 17 1},
     :distinct 8,
     :group-by? true,
     :median 29,
     :max 32,
     :avg 18.4,
     :cardinality 80},
    :recent_messages_per_second
    {:min 0.07,
     :data-type "float",
     :commons {0.53 2, 2.27 1, 6.87 1},
     :distinct 9,
     :group-by? true,
     :median 2.4000000000000004,
     :max 8.27,
     :avg 3.4400000000000004,
     :cardinality 89},
    :last_seen_seconds
    {:min 7,
     :data-type "integer",
     :commons {10 5, 9 2, 175 1},
     :distinct 5,
     :group-by? true,
     :median 84.5,
     :max 175,
     :avg 40.9,
     :cardinality 50},
    :memory
    {:min "126.501",
     :data-type "string",
     :commons {"70.8522" 1, "481.1279" 1, "78.7414" 1},
     :distinct 10,
     :group-by? true,
     :median "481.1279",
     :max "78.7414",
     :avg "165.4412 (non-numeric average)",
     :cardinality 100},
    :ts
    {:min "2024-09-17 13:37:18",
     :data-type "string",
     :commons {"2024-09-17 13:37:18" 10},
     :distinct 1,
     :group-by? true,
     :median "2024-09-17 13:37:18",
     :max "2024-09-17 13:37:18",
     :avg "2024-09-17 13:37:18 (non-numeric average)",
     :cardinality 10},
    :styler_highlight_8717
    {:min 0,
     :data-type "integer",
     :commons {0 9, 1 1},
     :distinct 2,
     :group-by? true,
     :median 0,
     :max 1,
     :avg 0.1,
     :cardinality 20},
    :client_latency
    {:min 126,
     :data-type "integer",
     :commons {318 1, 126 1, 1373 1},
     :distinct 10,
     :group-by? true,
     :median 244,
     :max 1373,
     :avg 441.3,
     :cardinality 100},
    :ack
    {:min 1,
     :data-type "integer",
     :commons {87 4, 88 3, 10 1},
     :distinct 5,
     :group-by? true,
     :median 87,
     :max 88,
     :avg 70,
     :cardinality 50},
    :client_name
    {:min ":charming-oval-bat-17",
     :data-type "string",
     :commons
     {":meritorious-teal-louse-0" 1,
      ":independent-pyramidal-human-2" 1,
      ":courageous-blue-raccoon-14" 1},
     :distinct 10,
     :group-by? true,
     :median ":luminous-octohedral-frog-4",
     :max ":surprising-wide-turkey-1",
     :avg ":charming-oval-bat-17 (non-numeric average)",
     :cardinality 100},
    :last_seen
    {:min "10 seconds",
     :data-type "string",
     :commons {"10 seconds" 5, "9 seconds" 2, "2 minutes, 55 seconds" 1},
     :distinct 5,
     :group-by? true,
     :median "10 seconds",
     :max "9 seconds",
     :avg "9 seconds (non-numeric average)",
     :cardinality 50}},
   :database-type "SQLite",
   :rowcount 10},
  :query-4704 {:fields {}, :database-type "SQLite", :rowcount 0},
  :jvm-stats-drag-40
  {:fields
   {:ts1
    {:min "2024-09-17 13:15:48",
     :data-type "string",
     :commons
     {"2024-09-17 13:17:33" 1, "2024-09-17 13:19:03" 1, "2024-09-17 13:23:03" 1},
     :distinct 86,
     :group-by? true,
     :median "2024-09-17 13:26:33",
     :max "2024-09-17 13:37:18",
     :avg "2024-09-17 13:37:18 (non-numeric average)",
     :cardinality 100},
    :queries_run
    {:min 24,
     :data-type "integer",
     :commons {431 2, 673 2, 190 1},
     :distinct 84,
     :group-by? true,
     :median 463.5,
     :max 806,
     :avg 402.9651162790698,
     :cardinality 97},
    :recent_messages_per_second
    {:min 49.21,
     :data-type "float",
     :commons {101.11 1, 99.11 1, 69.11 1},
     :distinct 86,
     :group-by? true,
     :median 63.535,
     :max 495.99,
     :avg 87.08988372093027,
     :cardinality 100},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 86},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :ts
    {:min "2024-09-17 13:1",
     :data-type "string",
     :commons {"2024-09-17 13:2" 39, "2024-09-17 13:3" 30, "2024-09-17 13:1" 17},
     :distinct 3,
     :group-by? true,
     :median "2024-09-17 13:2",
     :max "2024-09-17 13:3",
     :avg "2024-09-17 13:3 (non-numeric average)",
     :cardinality 3},
    :messages
    {:min 1126,
     :data-type "integer",
     :commons {50972 1, 112829 1, 59509 1},
     :distinct 86,
     :group-by? true,
     :median 52411,
     :max 115007,
     :avg 59879.37209302326,
     :cardinality 100},
    :sniffs_run
    {:min 6,
     :data-type "integer",
     :commons {43 60, 24 12, 53 8},
     :distinct 8,
     :group-by? true,
     :median 43,
     :max 53,
     :avg 39.95348837209303,
     :cardinality 9},
    :sys_load
    {:min 3.11,
     :data-type "float",
     :commons {3.28 3, 3.39 3, 5.04 2},
     :distinct 72,
     :group-by? true,
     :median 3.7,
     :max 49.69,
     :avg 6.010116279069766,
     :cardinality 83},
    :recent_batches_per_second
    {:min 5.8,
     :data-type "float",
     :commons {8.4 6, 7.87 5, 7.67 5},
     :distinct 46,
     :group-by? true,
     :median 7.93,
     :max 10.33,
     :avg 8.069069767441862,
     :cardinality 53},
    :batches
    {:min 122,
     :data-type "integer",
     :commons {8879 1, 7253 1, 5000 1},
     :distinct 86,
     :group-by? true,
     :median 5423,
     :max 10563,
     :avg 5423.546511627907,
     :cardinality 100},
    :used_memory_mb
    {:min 494,
     :data-type "integer",
     :commons {1033 2, 3758 2, 1609 1},
     :distinct 84,
     :group-by? true,
     :median 3026,
     :max 5041,
     :avg 2295.313953488372,
     :cardinality 97},
    :thread_count
    {:min 184,
     :data-type "integer",
     :commons {203 5, 212 4, 200 4},
     :distinct 50,
     :group-by? true,
     :median 207.5,
     :max 433,
     :avg 218.6627906976744,
     :cardinality 58},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 86},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 86},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 1},
    :ws_peers
    {:min 8,
     :data-type "integer",
     :commons {8 86},
     :distinct 1,
     :group-by? true,
     :median 8,
     :max 8,
     :avg 8,
     :cardinality 1},
    :recent_queries_per_second
    {:min 0,
     :data-type "float",
     :commons {0.13 19, 0.6 14, 1.07 11},
     :distinct 17,
     :group-by? true,
     :median 0.6,
     :max 2.13,
     :avg 0.6053488372093029,
     :cardinality 19}},
   :database-type "SQLite",
   :rowcount 86},
  :flows-sys
  {:fields
   {:flow_id
    {:min "a-random-wow",
     :data-type "string",
     :commons
     {"simple-python-exec" 1, "node-color-thief-js-webp" 1, "counting-loop" 1},
     :distinct 6,
     :group-by? true,
     :median "game-of-life-test1",
     :max "simple-python-exec",
     :avg "game-of-life-test1 (non-numeric average)",
     :cardinality 100},
    :file_path
    {:min "./flows/a-random-wow.edn",
     :data-type "string",
     :commons
     {"./flows/simple-python-exec.edn" 1,
      "./flows/node-color-thief-js-webp.edn" 1,
      "./flows/counting-loop.edn" 1},
     :distinct 6,
     :group-by? true,
     :median "./flows/game-of-life-test1.edn",
     :max "./flows/simple-python-exec.edn",
     :avg "./flows/game-of-life-test1.edn (non-numeric average)",
     :cardinality 100},
    :last_modified
    {:min "2024-08-31 19:10:15",
     :data-type "string",
     :commons
     {"2024-08-31 19:10:15" 4, "2024-09-02 05:18:05" 1, "2024-09-02 08:25:12" 1},
     :distinct 3,
     :group-by? true,
     :median "2024-08-31 19:10:15",
     :max "2024-09-02 08:25:12",
     :avg "2024-09-02 08:25:12 (non-numeric average)",
     :cardinality 50}},
   :database-type "SQLite",
   :rowcount 6},
  :files-sys
  {:fields
   {:file_path
    {:min "./screens/basic-client-stats.edn",
     :data-type "string",
     :commons
     {"./screens/hue-board.edn" 1,
      "./screens/dynamic-theme-example1.edn" 1,
      "/home/ryanr/rvbbit/backend/./screens/server-stats2.edn" 1},
     :distinct 16,
     :group-by? true,
     :median "./screens/light-theme.edn",
     :max "/home/ryanr/rvbbit/backend/./screens/server-stats2.edn",
     :avg "./screens/basic-client-stats.edn (non-numeric average)",
     :cardinality 100},
    :screen_name
    {:min "basic-client-stats",
     :data-type "string",
     :commons {"server-stats2" 2, "random-collection" 1, "light-theme" 1},
     :distinct 15,
     :group-by? true,
     :median "light-theme",
     :max "winter-theme",
     :avg "basic-client-stats (non-numeric average)",
     :cardinality 93},
    :blocks
    {:min 5,
     :data-type "integer",
     :commons {6 2, 48 2, 15 2},
     :distinct 13,
     :group-by? true,
     :median 30.5,
     :max 48,
     :avg 18.5625,
     :cardinality 81},
    :queries
    {:min 1,
     :data-type "integer",
     :commons {2 4, 17 3, 1 3},
     :distinct 9,
     :group-by? true,
     :median 2,
     :max 17,
     :avg 6.125,
     :cardinality 56},
    :ts
    {:min "2024-09-17 13:15:20",
     :data-type "string",
     :commons
     {"2024-09-17 13:15:20" 14, "2024-09-17 13:37:16" 1, "2024-09-17 13:15:21" 1},
     :distinct 3,
     :group-by? true,
     :median "2024-09-17 13:15:20",
     :max "2024-09-17 13:37:16",
     :avg "2024-09-17 13:15:20 (non-numeric average)",
     :cardinality 18}},
   :database-type "SQLite",
   :rowcount 16},
  :gen-viz-1002
  {:fields
   {:diff
    {:min "+2007",
     :data-type "string",
     :commons {"-1333" 1, "+2007" 1, "1150 MB" 1},
     :distinct 3,
     :group-by? true,
     :median "-1333",
     :max "1150 MB",
     :avg "1150 MB (non-numeric average)",
     :cardinality 100},
    :used_memory_mb
    {:min 1150.29,
     :data-type "float",
     :commons {1824.07 1, 3156.92 1, 1150.29 1},
     :distinct 3,
     :group-by? true,
     :median 1824.07,
     :max 3156.92,
     :avg 2043.76,
     :cardinality 100},
    :cpu_usage
    {:min 3.86,
     :data-type "float",
     :commons {3.86 1, 8.48 1, 4.14 1},
     :distinct 3,
     :group-by? true,
     :median 4.14,
     :max 8.48,
     :avg 5.493333333333333,
     :cardinality 100},
    :mps
    {:min 60.46,
     :data-type "float",
     :commons {80.04 1, 104.12 1, 60.46 1},
     :distinct 3,
     :group-by? true,
     :median 60.46,
     :max 104.12,
     :avg 81.54,
     :cardinality 100},
    :ts1
    {:min "2024-09-17 13:1",
     :data-type "string",
     :commons {"2024-09-17 13:3" 1, "2024-09-17 13:2" 1, "2024-09-17 13:1" 1},
     :distinct 3,
     :group-by? true,
     :median "2024-09-17 13:2",
     :max "2024-09-17 13:3",
     :avg "2024-09-17 13:1 (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 3},
  :jvm_stats
  {:fields
   {:queries_run
    {:min 16,
     :data-type "integer",
     :commons {431 2, 673 2, 190 1},
     :distinct 85,
     :group-by? true,
     :median 459,
     :max 806,
     :avg 398.51724137931035,
     :cardinality 97},
    :recent_messages_per_second
    {:min -372,
     :data-type "float",
     :commons {101.11 1, 99.11 1, 69.11 1},
     :distinct 87,
     :group-by? true,
     :median 63.53,
     :max 495.99,
     :avg 81.81298850574716,
     :cardinality 100},
    :uptime_seconds
    {:min -1,
     :data-type "integer",
     :commons {1259 1, 1004 1, 764 1},
     :distinct 87,
     :group-by? true,
     :median 389,
     :max 1304,
     :avg 652.471264367816,
     :cardinality 100},
    :queries_per_second
    {:min -16,
     :data-type "float",
     :commons {0 85, 1 1, -16 1},
     :distinct 3,
     :group-by? true,
     :median 0,
     :max 1,
     :avg -0.1724137931034483,
     :cardinality 3},
    :recent_batches
    {:min 0,
     :data-type "integer",
     :commons {8879 1, 7253 1, 5000 1},
     :distinct 87,
     :group-by? true,
     :median 5361,
     :max 10444,
     :avg 5241.563218390805,
     :cardinality 100},
    :sql_cache_size
    {:min 0,
     :data-type "integer",
     :commons {0 87},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :ts
    {:min "2024-09-17 13:15:33",
     :data-type "string",
     :commons
     {"2024-09-17 13:17:33" 1, "2024-09-17 13:19:03" 1, "2024-09-17 13:23:03" 1},
     :distinct 87,
     :group-by? true,
     :median "2024-09-17 13:26:33",
     :max "2024-09-17 13:37:18",
     :avg "2024-09-17 13:15:33 (non-numeric average)",
     :cardinality 100},
    :subscriptions
    {:min 89,
     :data-type "integer",
     :commons {166 37, 167 9, 204 7},
     :distinct 19,
     :group-by? true,
     :median 166,
     :max 204,
     :avg 169.8505747126437,
     :cardinality 21},
    :messages_per_second
    {:min -372,
     :data-type "float",
     :commons {91.91 2, 92.44 2, 61.53 2},
     :distinct 84,
     :group-by? true,
     :median 89.59,
     :max 108.48,
     :avg 80.39402298850574,
     :cardinality 96},
    :messages
    {:min 372,
     :data-type "integer",
     :commons {50972 1, 112829 1, 59509 1},
     :distinct 87,
     :group-by? true,
     :median 51939,
     :max 115007,
     :avg 59195.379310344826,
     :cardinality 100},
    :sniffs_run
    {:min 3,
     :data-type "integer",
     :commons {43 60, 24 12, 53 8},
     :distinct 9,
     :group-by? true,
     :median 43,
     :max 53,
     :avg 39.52873563218391,
     :cardinality 10},
    :sys_load
    {:min 3.11,
     :data-type "float",
     :commons {3.28 3, 3.39 3, 5.04 2},
     :distinct 73,
     :group-by? true,
     :median 3.7,
     :max 49.69,
     :avg 6.088850574712643,
     :cardinality 83},
    :recent_batches_per_second
    {:min -35,
     :data-type "float",
     :commons {8.4 6, 7.87 5, 7.67 5},
     :distinct 47,
     :group-by? true,
     :median 7.93,
     :max 10.33,
     :avg 7.57402298850575,
     :cardinality 54},
    :batches
    {:min 35,
     :data-type "integer",
     :commons {8879 1, 7253 1, 5000 1},
     :distinct 87,
     :group-by? true,
     :median 5361,
     :max 10563,
     :avg 5361.609195402299,
     :cardinality 100},
    :unix_ms
    {:min 1726593333162,
     :data-type "integer",
     :commons {1726593453158 1, 1726593948166 1, 1726593438159 1},
     :distinct 87,
     :group-by? true,
     :median 1726593993158,
     :max 1726594638159,
     :avg 1.7265939866123794E12,
     :cardinality 100},
    :used_memory_mb
    {:min 445,
     :data-type "integer",
     :commons {1033 2, 3758 2, 1609 1},
     :distinct 85,
     :group-by? true,
     :median 3029,
     :max 5041,
     :avg 2274.0459770114944,
     :cardinality 97},
    :recent_queries_run
    {:min 0,
     :data-type "integer",
     :commons {2 20, 9 14, 16 12},
     :distinct 16,
     :group-by? true,
     :median 2,
     :max 32,
     :avg 9.160919540229886,
     :cardinality 18},
    :thread_count
    {:min 184,
     :data-type "integer",
     :commons {203 5, 186 5, 212 4},
     :distinct 50,
     :group-by? true,
     :median 207,
     :max 433,
     :avg 218.28735632183907,
     :cardinality 57},
    :internal_queries_run
    {:min 0,
     :data-type "integer",
     :commons {0 87},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 1},
    :open_flow_channels
    {:min -1,
     :data-type "integer",
     :commons {-1 87},
     :distinct 1,
     :group-by? true,
     :median -1,
     :max -1,
     :avg -1,
     :cardinality 1},
    :ws_peers
    {:min 8,
     :data-type "integer",
     :commons {8 87},
     :distinct 1,
     :group-by? true,
     :median 8,
     :max 8,
     :avg 8,
     :cardinality 1},
    :recent_messages
    {:min 0,
     :data-type "integer",
     :commons {12017 1, 8202 1, 21585 1},
     :distinct 87,
     :group-by? true,
     :median 51943,
     :max 113887,
     :avg 57900.34482758621,
     :cardinality 100},
    :recent_queries_per_second
    {:min -16,
     :data-type "float",
     :commons {0.13 19, 0.6 14, 1.07 11},
     :distinct 18,
     :group-by? true,
     :median 0.6,
     :max 2.13,
     :avg 0.4144827586206898,
     :cardinality 20},
    :batches_per_second
    {:min -35,
     :data-type "float",
     :commons {8.09 7, 8.32 5, 8.31 5},
     :distinct 50,
     :group-by? true,
     :median 8.19,
     :max 8.6,
     :avg 7.691839080459772,
     :cardinality 57},
    :seconds_since_last_update
    {:min -1,
     :data-type "integer",
     :commons {15 43, 14 43, -1 1},
     :distinct 3,
     :group-by? true,
     :median 14,
     :max 15,
     :avg 14.32183908045977,
     :cardinality 3}},
   :database-type "SQLite",
   :rowcount 87},
  :status-drag-28
  {:fields
   {:server_subs
    {:min 10,
     :data-type "integer",
     :commons {15 1, 10 1, 27 1},
     :distinct 3,
     :group-by? true,
     :median 15,
     :max 27,
     :avg 17.333333333333332,
     :cardinality 100},
    :queue_size
    {:min "",
     :data-type "unknown",
     :commons {nil 3},
     :distinct 1,
     :group-by? true,
     :median "",
     :max "",
     :avg " (non-numeric average)",
     :cardinality 33},
    :push
    {:min 1575,
     :data-type "integer",
     :commons {3343 1, 1575 1, 7798 1},
     :distinct 3,
     :group-by? true,
     :median 3343,
     :max 7798,
     :avg 4238.666666666667,
     :cardinality 100},
    :client_subs
    {:min 10,
     :data-type "integer",
     :commons {72 1, 10 1, 27 1},
     :distinct 3,
     :group-by? true,
     :median 27,
     :max 72,
     :avg 36.333333333333336,
     :cardinality 100},
    :recent_messages_per_second
    {:min 1.87,
     :data-type "float",
     :commons {6.13 1, 1.87 1, 8.67 1},
     :distinct 3,
     :group-by? true,
     :median 6.13,
     :max 8.67,
     :avg 5.556666666666666,
     :cardinality 100},
    :uptime_seconds
    {:min 870.541,
     :data-type "float",
     :commons {870.541 1, 899.95 1, 900.853 1},
     :distinct 3,
     :group-by? true,
     :median 899.95,
     :max 900.853,
     :avg 890.448,
     :cardinality 100},
    :uptime
    {:min "14 minutes, 15 seconds",
     :data-type "string",
     :commons
     {"14 minutes, 15 seconds" 1,
      "14 minutes, 44 seconds" 1,
      "14 minutes, 45 seconds" 1},
     :distinct 3,
     :group-by? true,
     :median "14 minutes, 44 seconds",
     :max "14 minutes, 45 seconds",
     :avg "14 minutes, 45 seconds (non-numeric average)",
     :cardinality 100},
    :last_seen_seconds
    {:min 14,
     :data-type "integer",
     :commons {14 3},
     :distinct 1,
     :group-by? true,
     :median 14,
     :max 14,
     :avg 14,
     :cardinality 33},
    :memory
    {:min "103.5294",
     :data-type "string",
     :commons {"103.5294" 1, "372.4951" 1, "128.2534" 1},
     :distinct 3,
     :group-by? true,
     :median "128.2534",
     :max "372.4951",
     :avg "128.2534 (non-numeric average)",
     :cardinality 100},
    :queue_distro
    {:min "nil",
     :data-type "string",
     :commons {"nil" 3},
     :distinct 1,
     :group-by? true,
     :median "nil",
     :max "nil",
     :avg "nil (non-numeric average)",
     :cardinality 33},
    :ts
    {:min "2024-08-29 12:48:36",
     :data-type "string",
     :commons {"2024-08-29 12:48:36" 3},
     :distinct 1,
     :group-by? true,
     :median "2024-08-29 12:48:36",
     :max "2024-08-29 12:48:36",
     :avg "2024-08-29 12:48:36 (non-numeric average)",
     :cardinality 33},
    :messages_per_second
    {:min 1.75,
     :data-type "float",
     :commons {3.82 1, 1.75 1, 8.67 1},
     :distinct 3,
     :group-by? true,
     :median 3.82,
     :max 8.67,
     :avg 4.746666666666667,
     :cardinality 100},
    :client_latency
    {:min 147,
     :data-type "integer",
     :commons {147 1, 229 1, 196 1},
     :distinct 3,
     :group-by? true,
     :median 196,
     :max 229,
     :avg 190.66666666666666,
     :cardinality 100},
    :ack
    {:min 58,
     :data-type "integer",
     :commons {58 1, 59 1, 60 1},
     :distinct 3,
     :group-by? true,
     :median 59,
     :max 60,
     :avg 59,
     :cardinality 100},
    :booted_ts
    {:min 1724949215965,
     :data-type "integer",
     :commons {1724949246277 1, 1724949216868 1, 1724949215965 1},
     :distinct 3,
     :group-by? true,
     :median 1724949216868,
     :max 1724949246277,
     :avg 1724949226370,
     :cardinality 100},
    :client_name
    {:min ":divine-cylindrical-prairie-dog-44",
     :data-type "string",
     :commons
     {":resounding-champagne-bat-34" 1,
      ":nurturing-spherical-dolphin-12" 1,
      ":divine-cylindrical-prairie-dog-44" 1},
     :distinct 3,
     :group-by? true,
     :median ":nurturing-spherical-dolphin-12",
     :max ":resounding-champagne-bat-34",
     :avg ":divine-cylindrical-prairie-dog-44 (non-numeric average)",
     :cardinality 100},
    :last_seen
    {:min "14 seconds",
     :data-type "string",
     :commons {"14 seconds" 3},
     :distinct 1,
     :group-by? true,
     :median "14 seconds",
     :max "14 seconds",
     :avg "14 seconds (non-numeric average)",
     :cardinality 33}},
   :database-type "SQLite",
   :rowcount 3},
  :tests-drag-12 {:fields {}, :database-type "SQLite", :rowcount 0},
  :client_stats
  {:fields
   {:server_subs
    {:min 3,
     :data-type "integer",
     :commons {29 2, 7 2, 17 1},
     :distinct 8,
     :group-by? true,
     :median 29,
     :max 31,
     :avg 18.3,
     :cardinality 80},
    :queue_size
    {:min "",
     :data-type "unknown",
     :commons {nil 10},
     :distinct 1,
     :group-by? true,
     :median "",
     :max "",
     :avg " (non-numeric average)",
     :cardinality 10},
    :push
    {:min 17,
     :data-type "integer",
     :commons {704 1, 18347 1, 17 1},
     :distinct 10,
     :group-by? true,
     :median 2847,
     :max 18347,
     :avg 5643.4,
     :cardinality 100},
    :client_subs
    {:min 3,
     :data-type "integer",
     :commons {29 2, 7 2, 17 1},
     :distinct 8,
     :group-by? true,
     :median 29,
     :max 32,
     :avg 18.4,
     :cardinality 80},
    :recent_messages_per_second
    {:min 0.07,
     :data-type "float",
     :commons {0.53 2, 2.27 1, 6.87 1},
     :distinct 9,
     :group-by? true,
     :median 2.4000000000000004,
     :max 8.27,
     :avg 3.44,
     :cardinality 89},
    :uptime_seconds
    {:min 147.831,
     :data-type "float",
     :commons {1316.246 1, 1313.502 1, 1316.48 1},
     :distinct 10,
     :group-by? true,
     :median 1316.2710000000002,
     :max 1316.48,
     :avg 1083.8795000000002,
     :cardinality 100},
    :uptime
    {:min "2 minutes, 12 seconds",
     :data-type "string",
     :commons
     {"21 minutes, 41 seconds" 4,
      "21 minutes, 40 seconds" 3,
      "2 minutes, 12 seconds" 1},
     :distinct 5,
     :group-by? true,
     :median "21 minutes, 40 seconds",
     :max "21 minutes, 41 seconds",
     :avg "21 minutes, 41 seconds (non-numeric average)",
     :cardinality 50},
    :last_seen_seconds
    {:min 7,
     :data-type "integer",
     :commons {10 5, 9 2, 7 1},
     :distinct 5,
     :group-by? true,
     :median 84.5,
     :max 175,
     :avg 40.9,
     :cardinality 50},
    :memory
    {:min "126.501",
     :data-type "string",
     :commons {"70.8522" 1, "481.1279" 1, "78.7414" 1},
     :distinct 10,
     :group-by? true,
     :median "481.1279",
     :max "78.7414",
     :avg "55.1636 (non-numeric average)",
     :cardinality 100},
    :queue_distro
    {:min "nil",
     :data-type "string",
     :commons {"nil" 10},
     :distinct 1,
     :group-by? true,
     :median "nil",
     :max "nil",
     :avg "nil (non-numeric average)",
     :cardinality 10},
    :ts
    {:min "2024-09-17 13:37:18",
     :data-type "string",
     :commons {"2024-09-17 13:37:18" 10},
     :distinct 1,
     :group-by? true,
     :median "2024-09-17 13:37:18",
     :max "2024-09-17 13:37:18",
     :avg "2024-09-17 13:37:18 (non-numeric average)",
     :cardinality 10},
    :messages_per_second
    {:min 0.11,
     :data-type "float",
     :commons {0.53 2, 0.11 1, 8.01 1},
     :distinct 9,
     :group-by? true,
     :median 2.16,
     :max 14.06,
     :avg 4.526,
     :cardinality 89},
    :client_latency
    {:min 126,
     :data-type "integer",
     :commons {318 1, 126 1, 1373 1},
     :distinct 10,
     :group-by? true,
     :median 244,
     :max 1373,
     :avg 441.3,
     :cardinality 100},
    :ack
    {:min 1,
     :data-type "integer",
     :commons {87 4, 88 3, 10 1},
     :distinct 5,
     :group-by? true,
     :median 87,
     :max 88,
     :avg 70,
     :cardinality 50},
    :booted_ts
    {:min 1726593321677,
     :data-type "integer",
     :commons {1726593322756 1, 1726593321758 1, 1726594490326 1},
     :distinct 10,
     :group-by? true,
     :median 1726593322733,
     :max 1726594490326,
     :avg 1.7265935542775E12,
     :cardinality 100},
    :client_name
    {:min ":charming-oval-bat-17",
     :data-type "string",
     :commons
     {":meritorious-teal-louse-0" 1,
      ":independent-pyramidal-human-2" 1,
      ":courageous-blue-raccoon-14" 1},
     :distinct 10,
     :group-by? true,
     :median ":luminous-octohedral-frog-4",
     :max ":surprising-wide-turkey-1",
     :avg ":secure-long-otter-43 (non-numeric average)",
     :cardinality 100},
    :last_seen
    {:min "10 seconds",
     :data-type "string",
     :commons {"10 seconds" 5, "9 seconds" 2, "7 seconds" 1},
     :distinct 5,
     :group-by? true,
     :median "10 seconds",
     :max "9 seconds",
     :avg "10 seconds (non-numeric average)",
     :cardinality 50}},
   :database-type "SQLite",
   :rowcount 10},
  :viz-shapes
  {:fields
   {:axes_logic
    {:min "{:county [:fips-county-code?], :color [:dimension?]}",
     :data-type "string",
     :commons
     {"{:x [:and :dimension? [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]], :y [:measure?]}"
      4,
      "{:x [:and :dimension? [:or :looks-like-date? :looks-like-datetime? :is-date? :is-datetime?]], :y [:measure?]}"
      3,
      "{:x [:and :dimension? [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?] [:or :is-string? :is-year? :is-month?] [:and [:not :is-date?] [:not :is-datetime?]]], :color [:and :dimension? [:or :low-cardinality? :very-low-cardinality?] [:or :is-string? :is-year? :is-month?] [:and [:not :is-date?] [:not :is-datetime?]]], :y [:measure?]}"
      3},
     :distinct 27,
     :group-by? true,
     :median
     "{:x [:and :dimension? [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?] [:or :is-string? :is-year? :is-month?] [:and [:not :is-date?] [:not :is-datetime?]]], :color [:and :dimension? [:or :low-cardinality? :very-low-cardinality?] [:or :is-string? :is-year? :is-month?] [:and [:not :is-date?] [:not :is-datetime?]]], :y [:measure?]}",
     :max
     "{:x1 [:and :dimension? [:or :low-cardinality? :very-low-cardinality?] [:or :is-string? :is-year? :is-month?] [:and [:not :is-date?] [:not :is-datetime?]]], :x2 [:and :dimension? [:or :low-cardinality? :very-low-cardinality?] [:or :is-string? :is-year? :is-month?] [:and [:not :is-date?] [:not :is-datetime?]]], :y [:measure?]}",
     :avg
     "{:dim [:and :dimension? :is-string? [:or :low-cardinality? :very-low-cardinality?]]} (non-numeric average)",
     :cardinality 69},
    :base_score
    {:min 1,
     :data-type "integer",
     :commons {1 39},
     :distinct 1,
     :group-by? true,
     :median 1,
     :max 1,
     :avg 1,
     :cardinality 2},
    :connection_id
    {:min "system-db",
     :data-type "string",
     :commons {"system-db" 39},
     :distinct 1,
     :group-by? true,
     :median "system-db",
     :max "system-db",
     :avg "system-db (non-numeric average)",
     :cardinality 2},
    :library_shapes
    {:min
     "[:box :child [:vega-lite {:width \"container\", :height :panel-height+50, :autosize \"none\", :padding {:top 0, :bottom 0, :left 0, :right 0}, :params [{:name \"tx\", :expr \"width/2\"} {:name \"ty\", :expr \"height/2\"} {:name \"zoom_precise\", :value 4, :bind {:input \"range\", :min 2, :max 30, :step 0.05}} {:name \"centerY\", :value 38.76, :bind {:input \"range\", :min -60, :max 60, :step 0.01}} {:name \"centerX\", :value -97.17, :bind {:input \"range\", :min -180, :max 180, :step 0.01}} {:name \"baseTileSize\", :value 256} {:name \"tileUrl\", :value \"https://a.tile.openstreetmap.org/\"} {:name \"zoom\", :expr \"ceil(zoom_precise)\"} {:name \"tilesCount\", :expr \"pow(2,zoom)\"} {:name \"tileSize\", :expr \"baseTileSize*pow(2,zoom_precise-zoom)\"} {:name \"maxTiles\", :expr \"ceil(max(height,width)/tileSize +1)\"} {:name \"basePoint\", :expr \"invert('projection',[0,0])\"} {:name \"dii\", :expr \"((basePoint[0]+180)/360*tilesCount)\"} {:name \"di\", :expr \"floor(dii)\"} {:name \"dx\", :expr \"round((floor(dii)-dii)*tileSize)\"} {:name \"djj\", :expr \"((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)\"} {:name \"dj\", :expr \"floor(djj)\"} {:name \"dy\", :expr \"round((floor(djj)-djj)*tileSize)\"} {:name \"scale\", :expr \"baseTileSize * pow(2,zoom_precise) / (2 * PI)\"}], :layer [[:if :condi/geo-background? {:data {:name \"tile_list\", :sequence {:start 0, :stop {:signal \"maxTiles\"}, :as \"a\"}}, :transform [{:calculate \"sequence(0,maxTiles)\", :as \"b\"} {:flatten [\"b\"]} {:calculate \"tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'\", :as \"url\"} {:calculate \"(datum.a * tileSize + dx)+(tileSize/2)\", :as \"x\"} {:calculate \"(datum.b * tileSize + dy)+(tileSize/2)\", :as \"y\"}], :mark {:type \"image\", :opacity 0.5, :background \"#000000\", :fill \"#000000\", :width {:signal \"tileSize\"}, :height {:signal \"tileSize\"}}, :encoding {:x {:field \"x\", :type \"quantitative\", :scale nil}, :y {:field \"y\", :type \"quantitative\", :scale nil}, :url {:field \"url\", :type \"nominal\"}}} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}] [:if :condi/us-counties? {:data {:name \"us-counties\", :url \"assets/vega/us-10m.json\", :format {:type \"topojson\", :feature \"counties\"}}, :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}, :mark \"geoshape\", :encoding {:fill {:value \"#a500ff22\"}, :fillOpacity {:value 0.1}, :stroke {:value \"#FFA50022\"}, :strokeWidth {:value 2}}, :background \"transparent\"} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}] [:if :condi/us-states? {:data {:name \"us-states\", :url \"assets/vega/us-10m.json\", :format {:type \"topojson\", :feature \"states\"}}, :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}, :mark \"geoshape\", :transform [{:lookup :id, :from {:data {:values :query-preview}, :key :state-field, :fields [:state-field :color-field]}}], :encoding {:color {:field :color-field, :type \"nominal\", :scale {:scheme \"spectral\"}}, :stroke {:value \"#FFA50077\"}, :strokeWidth {:value 2}}, :background \"transparent\"} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}] [:if :condi/country-lines? {:data {:name \"world\", :url \"assets/vega/world-110m.json\", :format {:type \"topojson\", :feature \"countries\"}}, :mark \"geoshape\", :encoding {:fill {:value \"#FFA500\"}, :fillOpacity {:value 0.1}, :stroke {:value \"#FFA500\"}, :strokeWidth {:value 2}}, :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}]], :background \"transparent\", :config {:view {:stroke \"transparent\"}}} {:actions false}]]",
     :data-type "string",
     :commons
     {"[:box :child [:vega-lite {:width \"container\", :height :panel-height+50, :autosize \"none\", :padding {:top 0, :bottom 0, :left 0, :right 0}, :params [{:name \"tx\", :expr \"width/2\"} {:name \"ty\", :expr \"height/2\"} {:name \"zoom_precise\", :value 4, :bind {:input \"range\", :min 2, :max 30, :step 0.05}} {:name \"centerY\", :value 38.76, :bind {:input \"range\", :min -60, :max 60, :step 0.01}} {:name \"centerX\", :value -97.17, :bind {:input \"range\", :min -180, :max 180, :step 0.01}} {:name \"baseTileSize\", :value 256} {:name \"tileUrl\", :value \"https://a.tile.openstreetmap.org/\"} {:name \"zoom\", :expr \"ceil(zoom_precise)\"} {:name \"tilesCount\", :expr \"pow(2,zoom)\"} {:name \"tileSize\", :expr \"baseTileSize*pow(2,zoom_precise-zoom)\"} {:name \"maxTiles\", :expr \"ceil(max(height,width)/tileSize +1)\"} {:name \"basePoint\", :expr \"invert('projection',[0,0])\"} {:name \"dii\", :expr \"((basePoint[0]+180)/360*tilesCount)\"} {:name \"di\", :expr \"floor(dii)\"} {:name \"dx\", :expr \"round((floor(dii)-dii)*tileSize)\"} {:name \"djj\", :expr \"((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)\"} {:name \"dj\", :expr \"floor(djj)\"} {:name \"dy\", :expr \"round((floor(djj)-djj)*tileSize)\"} {:name \"scale\", :expr \"baseTileSize * pow(2,zoom_precise) / (2 * PI)\"}], :layer [[:if :condi/geo-background? {:data {:name \"tile_list\", :sequence {:start 0, :stop {:signal \"maxTiles\"}, :as \"a\"}}, :transform [{:calculate \"sequence(0,maxTiles)\", :as \"b\"} {:flatten [\"b\"]} {:calculate \"tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'\", :as \"url\"} {:calculate \"(datum.a * tileSize + dx)+(tileSize/2)\", :as \"x\"} {:calculate \"(datum.b * tileSize + dy)+(tileSize/2)\", :as \"y\"}], :mark {:type \"image\", :opacity 0.5, :background \"#000000\", :fill \"#000000\", :width {:signal \"tileSize\"}, :height {:signal \"tileSize\"}}, :encoding {:x {:field \"x\", :type \"quantitative\", :scale nil}, :y {:field \"y\", :type \"quantitative\", :scale nil}, :url {:field \"url\", :type \"nominal\"}}} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}] [:if :condi/us-counties? {:data {:name \"us-counties\", :url \"assets/vega/us-10m.json\", :format {:type \"topojson\", :feature \"counties\"}}, :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}, :mark \"geoshape\", :transform [{:lookup :id, :from {:data {:values :query-preview}, :key :county-field, :fields [:county-field :color-field]}}], :encoding {:color {:field :color-field, :type \"nominal\", :scale {:scheme \"spectral\"}}, :stroke {:value \"#FFA50077\"}, :strokeWidth {:value 2}}, :background \"transparent\"} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}] [:if :condi/us-states? {:data {:name \"us-states\", :url \"assets/vega/us-10m.json\", :format {:type \"topojson\", :feature \"states\"}}, :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}, :mark \"geoshape\", :encoding {:stroke {:value \"#FFA50077\"}, :strokeWidth {:value 2}}, :background \"transparent\"} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}] [:if :condi/country-lines? {:data {:name \"world\", :url \"assets/vega/world-110m.json\", :format {:type \"topojson\", :feature \"countries\"}}, :mark \"geoshape\", :encoding {:fill {:value \"#FFA500\"}, :fillOpacity {:value 0.1}, :stroke {:value \"#FFA500\"}, :strokeWidth {:value 2}}, :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}} {:mark \"geoshape\", :projection {:type \"mercator\", :scale {:expr \"scale\"}, :center [{:signal \"centerX\"} {:signal \"centerY\"}], :translate [{:signal \"tx\"} {:signal \"ty\"}]}}]], :background \"transparent\", :config {:view {:stroke \"transparent\"}}} {:actions false}]]"
      2,
      "[:nivo-treemap {:orientLabel false, :labelTextColor \"#000000\", :tile \"squarify\", :identity :name, :labelSkipSize 12, :borderColor \"#000000\", :value :y-field, :enableLabel true, :width :panel-width+70, :parentLabelPosition \"top\", :colors {:scheme \"nivo\"}, :transformation-map {:transform-select [[[:sum :y-field] :y-field] [:x2-field :name]], :from [:data], :nest-by [:x1-field :x2-field]}, :theme :theme/nivo-defaults, :leavesOnly false, :click {:c :x1-field, :x :x2-field, :y :y-field}, :label :name, :parentLabelSize 22, :parentLabelTextColor \"#ffffff\", :enableParentLabel true, :parentLabel \"id\", :height :panel-height+50, :margin {:top 15, :right 5, :bottom 15, :left 15}, :data :query-preview}]"
      1,
      "[:h-box :size \"auto\" :align :center :justify :center :width :panel-width+80-px :gap \"10px\" :children :query-preview-2]"
      1},
     :distinct 38,
     :group-by? true,
     :median
     "[:v-box :size \"auto\" :height :half-panel-height-px :style {:padding-left \"8px\", :padding-right \"8px\"} :children [[:h-box :justify :between :children [[:box :padding \"16px\" :child [:number :query-preview/agg.0] :style {:font-size \"39px\", :color \"#ffffff\"}] [:h-box :padding \"13px\" :size \"auto\" :children [[:icon :md-icon-name [:if :condi/up-or-down? \"zmdi-chevron-up\" \"zmdi-chevron-down\"] :style {:font-size \"55px\", :color [:if :condi/up-or-down? \"#20f323\" \"#f36464\"], :opacity 0.5, :margin-top \"8px\"}] [:box :child [:percent :query-preview-2/diff.0] :style {:font-size \"25px\", :padding \"15px\"}]]]]] [:box :style {:margin-top \"-10px\"} :size \"auto\" :child [:vega-lite {:layer [{:encoding {:x {:field :x-field, :type \"temporal\", :title nil, :sort \"x\"}, :y {:aggregate \"sum\", :field :agg, :title nil, :scale {:zero false}, :type \"quantitative\"}, :row {:field nil, :legend nil}, :size {:legend nil}, :shape {:legend nil}, :column {:field nil, :legend nil}, :color {:scale {:scheme \"purples\"}, :legend nil, :field 1, :type \"ordinal\"}}, :mark {:type \"line\", :interpolate \"monotone\", :line true, :point true, :tooltip {:content \"encoding\"}}}], :data {:values :query-preview}, :config {:view {:stroke \"transparent\"}, :line {:strokeWidth 3}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#afafaf\", :titleFont \"Lato\", :titleColor \"#282828\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :width :panel-width, :height :half-panel-height, :padding 4, :background \"transparent\"} {:actions false}]] [:box :align :center :justify :center :style {:padding-top \"133px\", :font-size \"20px\"} :child [:string [:x-field \" vs \" :y-field]]]]]",
     :max
     "{:reech [:> :ResponsiveContainer {:width \"100%\", :height :panel-height+50} [:> :PieChart {:margin {:top 20, :right 20, :bottom 20, :left 20}} [:> :Pie {:nameKey :name, :fill \"#8884d8\", :on-click [:set-recharts-param>], :outerRadius 80, :dataKey :value, :cx \"50%\", :label true, :cy \"50%\", :data :query-preview}] [:> :Tooltip]]]}",
     :avg
     "[:h-box :size \"auto\" :align :center :justify :center :width :panel-width+80-px :gap \"10px\" :children :query-preview-2] (non-numeric average)",
     :cardinality 97},
    :selected_view
    {:min "",
     :data-type "string",
     :commons {"" 34, ":reech" 4, ":grid" 1},
     :distinct 3,
     :group-by? true,
     :median "",
     :max ":reech",
     :avg " (non-numeric average)",
     :cardinality 7},
    :run_id
    {:min 0,
     :data-type "integer",
     :commons {0 39},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 2},
    :shape_name
    {:min "basic_h_bar",
     :data-type "string",
     :commons
     {"scatterplot_nivo_color" 1, "point_map_freq" 1, "basic_h_bar_avg_color" 1},
     :distinct 39,
     :group-by? true,
     :median "pie_nivo",
     :max "v_param_buttons",
     :avg "h_param_buttons (non-numeric average)",
     :cardinality 100},
    :sql_maps
    {:min
     "[{:select [:county-field :color-field], :from [:table], :group-by [:county-field]}]",
     :data-type "string",
     :commons
     {"[{:select [[[[:sum :y-field]] :y-field] :x-field], :from [:table], :group-by [:x-field]}]"
      8,
      "[{:select [[[[:sum :y-field]] :y-field] :x-field :color-field], :from [:table], :group-by [:x-field :color-field]}]"
      4,
      "[{:select [[[[:sum :y-field]] :agg] :x-field], :from [:table], :order-by [[:x-field :desc]], :group-by [:x-field]} {:select [[[:max [:round [:raw [\"(100 * ((\" :query-preview/agg.0 \".0 - \" :query-preview/agg.1 \".0) / \" :query-preview/agg.0 \".0))\"]] 2]] :diff]]}]"
      2},
     :distinct 26,
     :group-by? true,
     :median
     "[{:select [[[[:avg :y-field]] :y-field] :x-field :color-field], :from [:table], :group-by [:x-field :color-field]}]",
     :max
     "[{:select-distinct [:lat-field :long-field], :from [:table]} {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long] [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat] [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long] [[:round [:raw [\"(\" [:max :long-field] \" - \" [:min :long-field] \") * 55\"]] 2] :long_diff] [[:round [:raw [\"(\" [:max :lat-field] \" - \" [:min :lat-field] \") * 55\"]] 2] :lat_diff]], :from [:table], :where [:and [:<> :lat-field -1] [:<> :lat-field nil] [:<> :long-field -1] [:<> :long-field nil]]}]",
     :avg
     "[{:select [:dim-field], :from [:table], :group-by [:dim-field], :order-by [:dim-field]} {:vselect [:box :size \"auto\" :height :panel-height+50-px :align :center :justify :center :attr {:on-click [:set-vsql-parameter :dim-field :dim-field]} :style {:border [:if [:= :dim-field :panel-key/dim-field] \"4px solid orange\" \"4px solid #ffffff04\"], :color [:if [:= :dim-field :panel-key/dim-field] \"#ffffff\" \"inherit\"], :cursor \"pointer\", :font-size \"33px\"} :child [:string :dim-field]], :from :query-preview}] (non-numeric average)",
     :cardinality 66}},
   :database-type "SQLite",
   :rowcount 39},
  :query-11325 {:fields {}, :database-type "SQLite", :rowcount 0},
  :flow-fn-categories-sys
  {:fields
   {:category
    {:min ":clojure-base",
     :data-type "string",
     :commons {":rabbit-base" 1, ":clojure-base" 1},
     :distinct 2,
     :group-by? true,
     :median ":clojure-base",
     :max ":rabbit-base",
     :avg ":clojure-base (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 2},
  :query-291
  {:fields
   {:rowcnt
    {:min 0,
     :data-type "integer",
     :commons {0 1},
     :distinct 1,
     :group-by? false,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 1},
  :connections-sys
  {:fields
   {:database_name
    {:min "*cache-db*",
     :data-type "string",
     :commons {"*cache-db*" 4, "SQLite" 3},
     :distinct 2,
     :group-by? true,
     :median "*cache-db*",
     :max "SQLite",
     :avg "*cache-db* (non-numeric average)",
     :cardinality 28},
    :connection_id
    {:min "bigfoot-ufos",
     :data-type "string",
     :commons {"cache.db" 1, "bigfoot-ufos" 1, "met-on-tour" 1},
     :distinct 7,
     :group-by? true,
     :median "flows-db",
     :max "system-db",
     :avg "system-db (non-numeric average)",
     :cardinality 100},
    :styler_highlight_8717ssa
    {:min 0,
     :data-type "integer",
     :commons {0 7},
     :distinct 1,
     :group-by? true,
     :median 0,
     :max 0,
     :avg 0,
     :cardinality 14}},
   :database-type "SQLite",
   :rowcount 7},
  :query-6018 {:fields {}, :database-type "SQLite", :rowcount 0},
  :gen-viz-1002-clone-38
  {:fields
   {:diff
    {:min "2274 MB",
     :data-type "string",
     :commons {"2274 MB" 1},
     :distinct 1,
     :group-by? true,
     :median "2274 MB",
     :max "2274 MB",
     :avg "2274 MB (non-numeric average)",
     :cardinality 100},
    :used_memory_mb
    {:min 2274,
     :data-type "float",
     :commons {2274 1},
     :distinct 1,
     :group-by? true,
     :median 2274,
     :max 2274,
     :avg 2274,
     :cardinality 100},
    :ts1
    {:min "17-13",
     :data-type "string",
     :commons {"17-13" 1},
     :distinct 1,
     :group-by? true,
     :median "17-13",
     :max "17-13",
     :avg "17-13 (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 1},
  :reco-counts {:fields {}, :rowcount 0},
  :flow-fn-all-sys
  {:fields
   {:name
    {:min ":*",
     :data-type "string",
     :commons {":=" 1, ":>=" 1, ":write-file" 1},
     :distinct 34,
     :group-by? true,
     :median ":get-colors",
     :max ":write-file",
     :avg ":* (non-numeric average)",
     :cardinality 100}},
   :database-type "SQLite",
   :rowcount 34}},
 :default-col-widths
 {:block-494 {:jvm-stats-drag-40 100},
  :block-8179 {:client-stats-drag-33 141},
  :block-3438 {:new-query-1 100},
  :system-connections-list* {:connections-sys 126},
  :system-fields-list* {:fields-sys ##Inf},
  :files-list* {:files-sys 170},
  :blocks-list* {:blocks-sys 127},
  :system-tables-list* {:tables-sys ##Inf},
  :block-8590 {:bigfoot-sightings-drag-35 100}},
 :runstream-drops nil,
 :tabs
 ["welcome to the party pal"
  "reassuring sand dollar"
  "byzantium rabbit"
  "orange hornet"
  "victorious lion"
  "excellent wolf"
  "color test"
  "sys atom sizes"],
 :selected-cols nil,
 :runstreams nil,
 :editor? false,
 :buffy? false,
 :valid-kits
 {[:clojure :export-to-csv]
  [[nil :queries nil]
   [nil :queries :flows-sys]
   [:block-494 :queries :jvm-stats-drag-40]
   [:block-1956 :queries :cpu-query1]
   [:block-10778 :queries :gen-viz-1002]
   [:block-8179 :queries :client-stats-drag-33]
   [:block-7876 :queries :new-query]
   [:block-8356 :queries :query-291]
   [:block-9727 :queries :gen-viz-553]
   [:block-11587 :queries :status-drag-28]
   [:block-2784 :queries :status-drag-0]
   [:block-3438 :queries :new-query-1]
   [:block-901 :queries :gen-viz-1002-clone-38]
   [:block-2388 :queries :query-6018]
   [:block-2762 :queries :query-11325]
   [:block-6431 :queries :query-4704]
   [:block-7837 :queries :tests-drag-12]],
  [:clojure :count-map-keys] [],
  [:clojure :new-lundberg] [[:* :* :*]],
  [:clojure :view-lundberg]
  [[:block-2676 :views :hi]
   [:block-1956 :views :hare-vw]
   [:block-4808 :views :hi]
   [:block-10778 :views :reech]
   [:block-10778 :views :new-view]
   [:block-1242 :views :hi]
   [:block-12071 :views :hi]
   [:block-397 :views :hi]
   [:block-7876 :views :every-10-min-avg]
   [:block-8356 :views :hi]
   [:block-8356 :views :stack]
   [:block-9727 :views :reech]
   [:block-6697 :views :param-val]
   [:block-9547 :views :hi]
   [:block-6590 :views :hare-vw-3]
   [:block-981 :views :param-val]
   [:block-3438 :views :hi]
   [:block-10180 :views :view-clone]
   [:block-3719 :views :cell-drop-11937]
   [:block-901 :views :reech-copy-16]
   [:block-901 :views :hi]
   [:block-12161 :views :hi]
   [:block-3218 :views :hi]
   [:block-7665 :views :hi]
   [:block-7259 :views :hare-vw-1]
   [:block-2388 :views :hi]
   [:block-2388 :views :stack]
   [:block-9347 :views :hi]
   [:block-8619 :views :hi]
   [:block-8619 :views :stack]
   [:block-11070 :views :hi]
   [:block-11070 :views :stack]
   [:block-4109 :views :cell-drop-7398]
   [:block-11754 :views :hi]
   [:block-2762 :views :hi]
   [:block-2762 :views :stack]
   [:block-9142 :views :hi]
   [:block-10067 :views :hi]
   [:block-10067 :views :stack]
   [:block-6431 :views :hi]
   [:block-6431 :views :stack]
   [:block-8394 :views :param-val]
   [:block-1650 :views :hare-vw-2]
   [:block-4603 :views :hi]
   [:block-4603 :views :stack]],
  [:clojure :gen-ev] [],
  [:outliers :get-outliers]
  [[nil :queries nil]
   [nil :queries :flows-sys]
   [:block-494 :queries :jvm-stats-drag-40]
   [:block-1956 :queries :cpu-query1]
   [:block-10778 :queries :gen-viz-1002]
   [:block-8179 :queries :client-stats-drag-33]
   [:block-7876 :queries :new-query]
   [:block-8356 :queries :query-291]
   [:block-9727 :queries :gen-viz-553]
   [:block-11587 :queries :status-drag-28]
   [:block-2784 :queries :status-drag-0]
   [:block-3438 :queries :new-query-1]
   [:block-901 :queries :gen-viz-1002-clone-38]
   [:block-2388 :queries :query-6018]
   [:block-2762 :queries :query-11325]
   [:block-6431 :queries :query-4704]
   [:block-7837 :queries :tests-drag-12]]},
 :memory [357725094 340928618 4294705152],
 :sched
 {:jvm-stats-drag-40 197,
  :cpu-query1 197,
  :gen-viz-1002 197,
  :client-stats-drag-33 172,
  :new-query 197,
  :gen-viz-553 197,
  :new-query-1 197,
  :gen-viz-1002-clone-38 197},
 :client-name :meritorious-teal-louse-0,
 :flow-editor? true,
 :window {:w 2345, :h 1533},
 :quake-console? false,
 :implicit-rowsets {:solver [nil]},
 :post-meta
 {:connections-sys
  {:* {:rowcount 7},
   :database_name {:distinct 2},
   :connection_id {:distinct 7},
   :styler_highlight_8717ssa {:distinct 1}},
  :files-sys
  {:* {:rowcount 16},
   :file_path {:distinct 16},
   :screen_name {:distinct 15},
   :blocks {:distinct 13},
   :queries {:distinct 9},
   :ts {:distinct 3}},
  :blocks-sys
  {:* {:rowcount 30},
   :block_key {:distinct 30},
   :block_name {:distinct 27},
   :queries {:distinct 3},
   :views {:distinct 4},
   :block_data {:distinct 30},
   :view_names {:distinct 10},
   :query_names {:distinct 11}}},
 :flow-estimates
 {:blocks-sys {:times 0.002, :run-id :blocks-sys},
  :fields-sys {:times 0.001, :run-id :fields-sys},
  :gen-viz-553 {:times 0.014, :run-id :gen-viz-553},
  :tables-sys {:times 0.018, :run-id :tables-sys},
  :new-query {:times 0.019, :run-id :new-query},
  :cpu-query1 {:times 0.002, :run-id :cpu-query1},
  :new-query-1 {:times 0.012, :run-id :new-query-1},
  :client-stats-drag-33 {:times 0.006, :run-id :client-stats-drag-33},
  :jvm-stats-drag-40 {:times 0.003, :run-id :jvm-stats-drag-40},
  :files-sys {:times 0.002, :run-id :files-sys},
  :gen-viz-1002 {:times 0.011, :run-id :gen-viz-1002},
  :jvm_stats {:times 0.007, :run-id :jvm_stats},
  :bigfoot-sightings-drag-35 {:times 0.022, :run-id :bigfoot-sightings-drag-35},
  :block-1430-new-clojure-1 {:times 0.009, :run-id :block-1430-new-clojure-1},
  :virtual-panel-virtual-view {:times 0.011, :run-id :virtual-panel-virtual-view},
  :gen-viz-1022 {:times 0.011, :run-id :gen-viz-1022},
  :block-6590-new-clojure-4 {:times 0.086, :run-id :block-6590-new-clojure-4},
  :client_stats {:times 0.002, :run-id :client_stats},
  :connections-sys {:times 0.001, :run-id :connections-sys},
  :gen-viz-1002-clone-38 {:times 0.007, :run-id :gen-viz-1002-clone-38}},
 :screen-name "server-stats2",
 :panel-hashes
 {nil 1047337512,
  :block-494 1632207667,
  :block-2676 -1649969815,
  :block-1956 606016031,
  :block-4808 -1606463538,
  :block-10778 -1516989845,
  :block-1242 -1023168918,
  :block-8179 106865518,
  :block-12071 -1187219746,
  :block-397 -823059942,
  :block-7876 290702543,
  :block-8356 25238973,
  :block-9727 1849177739,
  :block-11587 1532259212,
  :block-6697 -1522891165,
  :block-9547 -1966759962,
  :block-6590 -151173673,
  :block-7598 -935131558,
  :block-3628 -221386650,
  :block-2784 1624970985,
  :block-981 -1020607748,
  :block-5568 976110977,
  :block-3438 217342080,
  :block-10180 -679799823,
  :block-3719 -1190566009,
  :block-1430 1968213366,
  :block-901 1463994288,
  :block-12161 40667626,
  :block-3218 -1351091716,
  :block-7665 -1514652861,
  :block-7259 1277130997,
  :block-10151 -557746862,
  :block-2388 953561215,
  :block-9347 1966697699,
  :block-8619 20409506,
  :block-11070 1438689134,
  :block-4109 -2037862850,
  :block-11754 2024700044,
  :block-8083 -354974320,
  :block-2762 1056811750,
  :block-9142 899803603,
  :block-10067 -333329444,
  :block-6431 109350511,
  :block-8394 -1296322521,
  :block-1650 1821330306,
  :block-7837 -1422099644,
  :block-4603 -388167532},
 :recos-page2 0,
 :selected-tab "welcome to the party pal",
 :col-names nil,
 :snapshots nil,
 :recos-page 0,
 :rs-overrides-hashmap {},
 :base-sniff-queries
 {:bigfoot_sightings 302026766,
  :jvm_stats 1498154063,
  :kke192 -995149087,
  :client_stats -175748261},
 :user-params-hash 999326557,
 :grid-recos? true,
 :session-hash 961253213,
 :resolved-queries
 {nil {:_last-run "13:46:21"},
  :gen-viz-553
  {:cache? false,
   :limit 18,
   :group-by [3],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[:ts :desc]],
   :select
   [[[:avg :thread_count] :thread_count]
    [[:round [:avg :ws_peers] 0] :clients]
    [[:substring :ts 1 15] :ts]],
   :post-process-fn reverse},
  :status-drag-0 {:select [:*], :from [[:jvm_stats :zz596]], :_last-run "23:25:13"},
  :new-query
  {:cache? false,
   :where [:= :client_name :*client-name-str],
   :limit 45,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:client_name
      :recent_messages_per_second
      :messages_per_second
      :mem_used
      :batches
      :packets
      :ts],
     :where [:= :client_name :*client-name-str],
     :from [[:client_memory :ee183]],
     :order-by [[:mem_time :desc]]}],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:mem_used 0})
           row
           (get rx idx {:mem_used 0})
           pre-mb
           (/ (get prev-row :mem_used) 1048576)
           mb
           (/ (get row :mem_used) 1048576)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :cpu-query1
  {:cache? false,
   :limit 180,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts1 1 16] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :new-query-1
  {:cache? false,
   :limit 50,
   :style-rules
   {[:sys_load :heatmap-7696]
    {:logic true,
     :style
     {:background-color [:heatmap ["#dba2e2" "#21112b"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}},
    [:recent_messages_per_second :heatmap-2888]
    {:logic true,
     :style
     {:background-color [:heatmap ["#ab2f64" "#d1aaa0"] 20 :desc],
      :border "1px solid #00000000",
      :color "#ffffff"}}},
   :_last-run "15:27:24",
   :refresh-every 45,
   :from [[:jvm_stats :zz596]],
   :order-by [[:ts :desc]],
   :connection-id "system-db",
   :select [:*]},
  :client-stats-drag-33
  {:select
   [:ack
    :client_latency
    :client_name
    :client_subs
    :last_seen
    :last_seen_seconds
    :push
    :recent_messages_per_second
    :server_subs
    :memory
    :ts],
   :cache? false,
   :refresh-every 20,
   :order-by [[:client_name :asc]],
   :from [[:client_stats :ww254]],
   :_last-run "15:27:45",
   :style-rules
   {[:* :highlight-8717]
    {:logic [:= :client_name :*client-name-str],
     :style {:border "1px solid #cac18255"}}},
   :col-widths
   {:server_subs 111,
    :push 91,
    :client_subs 111,
    :recent_messages_per_second 251,
    :memory 111,
    :ts 151,
    :client_latency 141,
    :ack 81,
    :client_name 231}},
  :query-4704
  {:select [:test_name [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:connection_id
       :context_hash
       :data_type
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :field_type
       :is_sample
       :key_hash
       :run_id
       :table_name
       :table_type
       :test_name
       :test_raw_val
       :test_sql
       :test_val_float
       :test_val_integer
       :test_val_string
       :updated],
      :from [[:tests :aa558]]}
     :mm899]],
   :group-by [:test_name],
   :order-by [[:test_name :asc]],
   :_last-run "17:58:40"},
  :jvm-stats-drag-40
  {:select
   [:sql_cache_size
    :thread_count
    [:ts :ts1]
    [[:substr :ts 0 16] :ts]
    :queries_run
    :sniffs_run
    :batches
    :messages
    :recent_batches_per_second
    :recent_messages_per_second
    :recent_queries_per_second
    :internal_queries_run
    :open_flow_channels
    :sys_load
    :used_memory_mb
    :ws_peers],
   :refresh-every 45,
   :cache? false,
   :from [[:jvm_stats :kke192]],
   :order-by [[3 :desc]],
   :_last-run "15:27:23",
   :where [:>= :recent_batches_per_second 0]},
  :flows-sys {:_last-run "12:47:44"},
  :gen-viz-1002
  {:cache? false,
   :limit 18,
   :group-by [4],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [{:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :where [:>= :recent_batches_per_second 0]}],
   :order-by [[4 :desc]],
   :select
   [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
    [[:round [:avg :sys_load] 2] :cpu_usage]
    [[:round [:avg :recent_messages_per_second] 2] :mps]
    [[:substring :ts 1 15] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))},
  :status-drag-28 {:select [:*], :from [[:client_stats :aa377]]},
  :tests-drag-12
  {:select
   [:connection_id
    :context_hash
    :data_type
    :db_catalog
    :db_schema
    :db_type
    :derived_calc
    :derived_name
    :field_name
    :field_type
    :is_sample
    :key_hash
    :run_id
    :table_name
    :table_type
    :test_name
    :test_raw_val
    :test_sql
    :test_val_float
    :test_val_integer
    :test_val_string
    :updated],
   :from [[:tests :aa558]],
   :where
   [:*when
    {:test_name "total_rows", :rowcnt 77}
    [:*all= {:test_name "total_rows", :rowcnt 77} [:test_name]]],
   :_last-run "17:58:37"},
  :query-11325
  {:select [:table_name [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:attribute_name
       :attribute_value
       :connection_id
       :context_hash
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :key_hash
       :run_id
       :table_name
       :table_type
       :updated],
      :from [[:attributes :mm879]],
      :where
      [:*when
       {:attribute_name "is_sqlite?", :rowcnt 1618}
       [:*all= {:attribute_name "is_sqlite?", :rowcnt 1618} [:attribute_name]]],
      :order-by [[:table_name :asc]]}
     :mm340]],
   :group-by [:table_name],
   :order-by [[:table_name :asc]],
   :col-widths {:rowcnt 100, :table_name 240},
   :_last-run "17:58:42"},
  :query-291
  {:select [[[:count 1] :rowcnt]],
   :cache? false,
   :refresh-every 19,
   :from
   [[{:select
      [:connection_id
       :context_hash
       :data_type
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :field_type
       :is_sample
       :key_hash
       :run_id
       :table_name
       :table_type
       :test_name
       :test_raw_val
       :test_sql
       :test_val_float
       :test_val_integer
       :test_val_string
       :updated],
      :from [[:tests :aa558]],
      :where
      [:*when
       {:test_name "total_rows", :rowcnt 77}
       [:*all= {:test_name "total_rows", :rowcnt 77} [:test_name]]]}
     :ee553]],
   :_last-run "22:50:26"},
  :query-6018
  {:select [:attribute_name [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:attribute_name
       :attribute_value
       :connection_id
       :context_hash
       :db_catalog
       :db_schema
       :db_type
       :derived_calc
       :derived_name
       :field_name
       :key_hash
       :run_id
       :table_name
       :table_type
       :updated],
      :from [[:attributes :mm879]]}
     :bb504]],
   :group-by [:attribute_name],
   :order-by [[:attribute_name :asc]],
   :_last-run "17:58:41"},
  :gen-viz-1002-clone-38
  {:cache? false,
   :limit 24,
   :group-by [2],
   :_last-run "15:27:24",
   :refresh-every 45,
   :from
   [[{:group-by [:ts1],
      :from
      [{:select
        [:sql_cache_size
         :thread_count
         [:ts :ts1]
         [[:substr :ts 0 16] :ts]
         :queries_run
         :sniffs_run
         :internal_queries_run
         :used_memory_mb
         :ws_peers],
        :from [[:jvm_stats :kke192]],
        :order-by [[3 :desc]]}],
      :order-by [[:ts1 :asc]],
      :select [[[[:avg :used_memory_mb]] :used_memory_mb] :ts1]}
     :mm308]],
   :order-by [[2 :desc]],
   :select
   [[[:round [:avg :used_memory_mb]] :used_memory_mb]
    [[:raw "strftime('%d-%H', ts1)"] :ts1]],
   :post-process-fn
   (fn [x]
     (vec
       (for
         [idx
          (range (count x))
          :let
          [rx
           (vec (reverse x))
           prev-row
           (get rx (- idx 1) {:used_memory_mb 0})
           row
           (get rx idx {:used_memory_mb 0})
           pre-mb
           (get prev-row :used_memory_mb)
           mb
           (get row :used_memory_mb)
           diff
           (Math/round (- mb pre-mb))
           pos
           (cond (> diff 0) "+" (< diff 0) "" :else "")]]
         (merge
           row
           {:diff (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
 :panels
 {nil {:queries {nil {:_last-run "13:46:21"}, :flows-sys {:_last-run "12:47:44"}}},
  :block-494
  {:name "select-all-jvm_stats",
   :w 18,
   :block-key ":block-4658",
   :selected-view :jvm-stats-drag-40,
   :root [30 4],
   :h 11,
   :file-path "./screens/refresh-test.edn",
   :connection-id "system",
   :queries
   {:jvm-stats-drag-40
    {:select
     [:sql_cache_size
      :thread_count
      [:ts :ts1]
      [[:substr :ts 0 16] :ts]
      :queries_run
      :sniffs_run
      :batches
      :messages
      :recent_batches_per_second
      :recent_messages_per_second
      :recent_queries_per_second
      :internal_queries_run
      :open_flow_channels
      :sys_load
      :used_memory_mb
      :ws_peers],
     :refresh-every :param/refresh-timer,
     :cache? false,
     :from [[:jvm_stats :kke192]],
     :order-by [[3 :desc]],
     :_last-run "15:27:23",
     :where [:>= :recent_batches_per_second 0]}},
   :tab "welcome to the party pal",
   :minimized? false},
  :block-2676
  {:h 4,
   :w 5,
   :root [5 5],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-2676",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2676.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-1956
  {:name "block-1956",
   :w 23,
   :selected-view :hare-vw,
   :root [36 26],
   :h 6,
   :connection-id "system",
   :queries
   {:cpu-query1
    {:cache? false,
     :limit 180,
     :group-by [4],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [:query/jvm-stats-drag-40],
     :order-by [[4 :desc]],
     :select
     [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
      [[:round [:avg :sys_load] 2] :cpu_usage]
      [[:round [:avg :recent_messages_per_second] 2] :mps]
      [[:substring :ts1 1 16] :ts1]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:used_memory_mb 0})
             row
             (get rx idx {:used_memory_mb 0})
             pre-mb
             (get prev-row :used_memory_mb)
             mb
             (get row :used_memory_mb)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:hare-vw
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :cpu-query1,
       :style {:font-family :theme/base-font},
       :margin {:top 5, :bottom 20, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts,
        :label
        {:value "10 min avgs: cpu %",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25},
        :style {:font-size "11px"}}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "cpu usage",
         :angle -90,
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain [0 "auto"]}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :cpu_usage,
        :type "monotone",
        :strokeDasharray "5 5",
        :yAxisId "left",
        :stroke-width 4,
        :stroke :param/theme-color4,
        :activeDot {:r 8}}]]]}},
  :block-4808
  {:name "client latency callout",
   :w 4,
   :block-key ":block-2505",
   :selected-view :hi,
   :root [32 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :ghosted? false,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>client-latency]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "client latency (ms)"]]]}},
  :block-10778
  {:mad-libs-combo-hash ["-221538232" "jvm_stats_drag_40"],
   :clojure {:new-clojure (vec (for [e (range :time/second)] (str (+ e 12) "!")))},
   :name " - ts, used_memory_mb - 650",
   :w 15,
   :selected-mode {:new-clojure2 :text},
   :block-key ":block-942",
   :selected-view :reech,
   :root [0 4],
   :h 5,
   :file-path "./screens/refresh-test.edn",
   :clojure2
   {:new-clojure2
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (println "fefefef")
        (str
          "🐇🥕 Hey there! This is Clojure version "
          clojure-version
          " on JVM  "
          jvm-version
          " 🥕🐇 "
          :time/now-seconds)))},
   :connection-id "system",
   :display {:new-clojure2 :value},
   :queries
   {:gen-viz-1002
    {:cache? false,
     :limit 18,
     :group-by [4],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [:query/jvm-stats-drag-40],
     :order-by [[4 :desc]],
     :select
     [[[:round [:avg :used_memory_mb] 2] :used_memory_mb]
      [[:round [:avg :sys_load] 2] :cpu_usage]
      [[:round [:avg :recent_messages_per_second] 2] :mps]
      [[:substring :ts 1 15] :ts1]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:used_memory_mb 0})
             row
             (get rx idx {:used_memory_mb 0})
             pre-mb
             (get prev-row :used_memory_mb)
             mb
             (get row :used_memory_mb)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:reech
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :gen-viz-1002,
       :style {:font-family :theme/base-font},
       :margin {:top 6, :bottom 20, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts,
        :label
        {:value
         "10 min avgs: memory used/messages per second averages (last 3 hours)",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25},
        :style {:font-size "11px"}}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "mps / cpu usage",
         :angle -90,
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain ["auto" "auto"]}]
      [:>
       :YAxis
       {:yAxisId "right",
        :label
        {:value "memory used",
         :angle 90,
         :fill :param/theme-color2,
         :style {:font-weight 700, :font-size "15px"},
         :position "middle",
         :dx 20},
        :domain ["auto" "auto"],
        :orientation "right"}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :mps,
        :type "monotone",
        :yAxisId "left",
        :stroke-width 2,
        :stroke :param/theme-color1,
        :activeDot {:r 8}}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :cpu_usage,
        :type "monotone",
        :strokeDasharray "5 5",
        :yAxisId "left",
        :stroke-width 4,
        :stroke :param/theme-color4,
        :activeDot {:r 8}}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :used_memory_mb,
        :yAxisId "right",
        :fill "#00000000",
        :stroke-width 2,
        :stroke :param/theme-color2}]]],
    :new-view
    [:box
     :child
     [:str :new-clojure]
     :align
     :center
     :justify
     :center
     :size
     "auto"
     :style
     {:font-size "22px"}]}},
  :block-1242
  {:h 4,
   :w 5,
   :root [17 2],
   :tab "color test",
   :selected-view :hi,
   :name "block-1242",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-1242.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     :param/theme-tetrads>0]},
   :queries {}},
  :block-8179
  {:h 9,
   :w 32,
   :connection-id "system-db",
   :name "select-all-client_stats",
   :queries
   {:client-stats-drag-33
    {:select
     [:ack
      :client_latency
      :client_name
      :client_subs
      :last_seen
      :last_seen_seconds
      :push
      :recent_messages_per_second
      :server_subs
      :memory
      :ts],
     :cache? false,
     :refresh-every 20,
     :order-by [[:client_name :asc]],
     :from [[:client_stats :ww254]],
     :_last-run "15:27:45",
     :style-rules
     {[:* :highlight-8717]
      {:logic [:= :client_name :*client-name-str],
       :style {:border "1px solid #cac18255"}}},
     :col-widths
     {:server_subs 111,
      :push 91,
      :client_subs 111,
      :recent_messages_per_second 251,
      :memory 111,
      :ts 151,
      :client_latency 141,
      :ack 81,
      :client_name 231}}},
   :root [0 17],
   :tab "welcome to the party pal",
   :z 3},
  :block-12071
  {:h 3,
   :w 5,
   :root [20 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-12071",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/recent_batches_per_second.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "recent batches-per-sec"]]]},
   :queries {}},
  :block-397
  {:h 5,
   :w 8,
   :root [5 13],
   :tab "color test",
   :selected-view :hi,
   :name "block-397",
   :views {:hi [:data-viewer [:tetrads :solver/colors-of-the-moment-8k>darkest]]},
   :queries {}},
  :block-7876
  {:name "block-2178",
   :w 27,
   :block-key ":block-2178",
   :selected-view :every-10-min-avg,
   :root [32 20],
   :h 6,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries
   {:new-query
    {:cache? false,
     :where [:= :client_name :*client-name-str],
     :limit 45,
     :group-by [2],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from
     [{:select
       [:client_name
        :recent_messages_per_second
        :messages_per_second
        :mem_used
        :batches
        :packets
        :ts],
       :where [:= :client_name :*client-name-str],
       :from [[:client_memory :ee183]],
       :order-by [[:mem_time :desc]]}],
     :order-by [[:ts :desc]],
     :connection-id "system-db",
     :select [[[[:avg :mem_used]] :mem_used] [[:substring :ts 1 15] :ts_hour]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:mem_used 0})
             row
             (get rx idx {:mem_used 0})
             pre-mb
             (/ (get prev-row :mem_used) 1048576)
             mb
             (/ (get row :mem_used) 1048576)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:every-10-min-avg
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :new-query,
       :style {:font-family :theme/base-font},
       :margin {:top 25, :right 30, :left 20, :bottom 5}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:> :XAxis {:dataKey :ts_hour}]
      [:> :YAxis {:domain ["auto" "auto"]}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :mem_used,
        :stroke :param/theme-color1,
        :stroke-width 3,
        :fill "#8884d801"}
       [:>
        :LabelList
        {:dataKey :diff,
         :fill :param/theme-color1,
         :style {:font-size "18px", :font-weight 700},
         :position "top"}]]]]}},
  :block-8356
  {:name "block-8356",
   :w 7,
   :selected-view :query-291,
   :root [37 2],
   :h 5,
   :connection-id "system-db",
   :queries
   {:query-291
    {:select [[[:count 1] :rowcnt]],
     :cache? false,
     :refresh-every 19,
     :from [[:query/tests-drag-12 :ee553]],
     :_last-run "22:50:26"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-8356.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-9727
  {:mad-libs-combo-hash ["-832307070" "jvm_stats_drag_40"],
   :name "recharts_area - thread_count, ts - 249",
   :w 15,
   :block-key ":block-539",
   :selected-view :reech,
   :root [15 4],
   :h 5,
   :file-path "./screens/refresh-test.edn",
   :connection-id "system",
   :queries
   {:gen-viz-553
    {:cache? false,
     :limit 18,
     :group-by [3],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [:query/jvm-stats-drag-40],
     :order-by [[:ts :desc]],
     :select
     [[[:avg :thread_count] :thread_count]
      [[:round [:avg :ws_peers] 0] :clients]
      [[:substring :ts 1 15] :ts]],
     :post-process-fn reverse}},
   :tab "welcome to the party pal",
   :conditionals nil,
   :views
   {:reech
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data :gen-viz-553,
       :style {:font-family :theme/base-font},
       :margin {:top 5, :bottom 20, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "0 0", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts,
        :label
        {:value "10 min avgs: threads/clients (last 3 hours)",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25},
        :style {:font-size "11px"}}]
      [:>
       :YAxis
       {:yAxisId "left",
        :label
        {:value "clients",
         :angle -90,
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dx -25},
        :domain ["auto" "auto"]}]
      [:>
       :YAxis
       {:yAxisId "right",
        :label
        {:value "threads",
         :angle 90,
         :fill :param/theme-color2,
         :style {:font-weight 700, :font-size "15px"},
         :position "middle",
         :dx 20},
        :domain ["auto" "auto"],
        :orientation "right"}]
      [:>
       :Line
       {:isAnimationActive false,
        :dataKey :clients,
        :type "monotone",
        :yAxisId "left",
        :stroke-width 2,
        :stroke :param/theme-color1,
        :activeDot {:r 8}}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :thread_count,
        :yAxisId "right",
        :fill "#00000000",
        :stroke-width 2,
        :stroke :param/theme-color2}]]]}},
  :block-11587
  {:h 7,
   :w 32,
   :connection-id "system-db",
   :name "select-all-status",
   :queries {:status-drag-28 {:select [:*], :from [[:client_stats :aa377]]}},
   :root [0 10],
   :tab "reassuring sand dollar"},
  :block-6697
  {:h 9,
   :w 6,
   :tab "color test",
   :root [14 7],
   :name ":param/theme-split-complement",
   :views {:param-val [:data-viewer :param/theme-split-complement]},
   :queries {}},
  :block-9547
  {:h 4,
   :w 5,
   :root [0 5],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-9547",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9547.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-6590
  {:clojure
   {:new-clojure-4
    (do
      (ns rvbbit-backend.websockets)
      (let [timer :time/minute
            top (mapv
                  first
                  (take
                    20
                    (sort-by
                      second
                      >
                      (for
                        [[k v] (deref atom-metrics)]
                        [k (get (last v) :size-mb)]))))]
        (fig-render "< rvbbit sys atoms sizes >" :bright-cyan)
        (println
          "(only if enabled in config.edn, very expensive - only for debugging)")
        (draw-client-stats
          top
          [45]
          nil
          true
          (+ 30 :col-width)
          {:metrics-atom atom-metrics})))},
   :name "block-6590",
   :w 29,
   :selected-mode {:new-clojure-4 :terminal},
   :selected-view :new-clojure-4,
   :root [3 2],
   :h 26,
   :display {:new-clojure-4 :output},
   :queries {},
   :tab "sys atom sizes",
   :views
   {:hare-vw-3
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "If you don't know where you are going any road can take you there."]}},
  :block-7598 {:root [13 18]},
  :block-3628 {:root [20 21]},
  :block-2784
  {:h 7,
   :w 43,
   :connection-id "system-db",
   :name "select-all-status",
   :queries
   {:status-drag-0
    {:select [:*], :from [[:jvm_stats :zz596]], :_last-run "23:25:13"}},
   :root [0 17],
   :tab "reassuring sand dollar"},
  :block-981
  {:h 3,
   :w 6,
   :tab "color test",
   :root [15 17],
   :name ":param/theme-color3",
   :views
   {:param-val
    [:box
     :align
     :center
     :justify
     :center
     :padding
     "13px"
     :style
     {:font-size "45px"}
     :child
     [:string :param/theme-color3]]},
   :queries {}},
  :block-5568 {:root [27 21]},
  :block-3438
  {:h 6,
   :w 36,
   :root [0 26],
   :tab "welcome to the party pal",
   :selected-view :new-query-1,
   :name "block-3438",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-3438.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries
   {:new-query-1
    {:cache? false,
     :limit 50,
     :style-rules
     {[:sys_load :heatmap-7696]
      {:logic true,
       :style
       {:background-color
        [:heatmap
         [:solver/colors-of-the-moment>brightest
          :solver/colors-of-the-moment>darkest]
         20
         :desc],
        :border "1px solid #00000000",
        :color "#ffffff"}},
      [:recent_messages_per_second :heatmap-2888]
      {:logic true,
       :style
       {:background-color
        [:heatmap
         [:solver/colors-of-the-moment>most-contrasting-dark
          :solver/colors-of-the-moment-8k>most-contrasting-light]
         20
         :desc],
        :border "1px solid #00000000",
        :color "#ffffff"}}},
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from [[:jvm_stats :zz596]],
     :order-by [[:ts :desc]],
     :connection-id "system-db",
     :select [:*]}}},
  :block-10180
  {:h 3,
   :w 5,
   :views
   {:view-clone
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/_theme-color4,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:str :jvm-stats-drag-40/sys_load.0 "%"]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "curr cpu usage"]]]},
   :name "clone-hi8",
   :root [25 1],
   :tab "welcome to the party pal"},
  :block-3719
  {:name "callout client msgs",
   :w 4,
   :block-key ":block-9994",
   :selected-view :cell-drop-11937,
   :root [44 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:cell-drop-11937
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string :client/*client-name*>stats>recent-messages-per-second]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "messages/sec"]]]}},
  :block-1430
  {:clojure
   {:new-clojure-1
    (do
      [:box
       :align
       :center
       :justify
       :center
       :attr
       {:id ":block-45s86.:hi"}
       :style
       {:font-size "22px", :font-weight 500}
       :child
       [:pre
        {:style
         {:color :param/theme-color1,
          :background-color "#00000000",
          :border "none",
          :text-shadow "4px 4px 4px #00000088",
          :font-size "17px",
          :font-family :theme/monospaced-font}}
        (let [process (.exec (Runtime/getRuntime) "vmstat 1 1")
              reader (java.io.BufferedReader.
                       (java.io.InputStreamReader. (.getInputStream process)))
              output (StringBuilder.)]
          (loop [line (.readLine reader)]
            (when line
              (.append output line)
              (.append output "\n")
              (recur (.readLine reader))))
          (str
            output
            "------------------------[ "
            :time/now-seconds
            " ]------------------------"))]])},
   :name "block-1430",
   :w 18,
   :selected-mode {:new-clojure-2 :clover, :new-clojure-1 :clover},
   :selected-view :new-clojure-1,
   :root [30 1],
   :h 3,
   :queries {},
   :tab "welcome to the party pal",
   :views {}},
  :block-901
  {:name "clone-gen-viz-100238",
   :w 30,
   :selected-view :hi,
   :root [0 9],
   :h 8,
   :connection-id "system",
   :queries
   {:gen-viz-1002-clone-38
    {:cache? false,
     :limit 24,
     :group-by [2],
     :_last-run "15:27:24",
     :refresh-every :param/refresh-timer,
     :from
     [[{:group-by [:ts1],
        :from
        [{:select
          [:sql_cache_size
           :thread_count
           [:ts :ts1]
           [[:substr :ts 0 16] :ts]
           :queries_run
           :sniffs_run
           :internal_queries_run
           :used_memory_mb
           :ws_peers],
          :from [[:jvm_stats :kke192]],
          :order-by [[3 :desc]]}],
        :order-by [[:ts1 :asc]],
        :select [[[[:avg :used_memory_mb]] :used_memory_mb] :ts1]}
       :mm308]],
     :order-by [[2 :desc]],
     :select
     [[[:round [:avg :used_memory_mb]] :used_memory_mb]
      [[:raw "strftime('%d-%H', ts1)"] :ts1]],
     :post-process-fn
     (fn [x]
       (vec
         (for
           [idx
            (range (count x))
            :let
            [rx
             (vec (reverse x))
             prev-row
             (get rx (- idx 1) {:used_memory_mb 0})
             row
             (get rx idx {:used_memory_mb 0})
             pre-mb
             (get prev-row :used_memory_mb)
             mb
             (get row :used_memory_mb)
             diff
             (Math/round (- mb pre-mb))
             pos
             (cond (> diff 0) "+" (< diff 0) "" :else "")]]
           (merge
             row
             {:diff
              (if (= idx 0) (str (Math/round mb) " MB") (str pos diff))}))))}},
   :tab "welcome to the party pal",
   :views
   {:reech-copy-16
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :gen-viz-1002-clone-38,
       :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:> :Tooltip]
      [:> :XAxis {:dataKey :ts}]
      [:>
       :Bar
       {:type "monotone",
        :dataKey :used_memory_mb,
        :stroke :param/theme-color1,
        :activeDot {:r 8}}]
      [:>
       :LabelList
       {:dataKey :diff,
        :fill :param/theme-color1,
        :style {:font-size "13px", :font-weight 700},
        :position "top"}]]],
    :hi
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :BarChart
      {:data :gen-viz-1002-clone-38,
       :style {:font-family :theme/base-font},
       :margin {:top 25, :right 30, :left 20, :bottom 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0}]
      [:>
       :Tooltip
       {:content-style
        {:background-color "#00000099",
         :font-weight 700,
         :border "1px solid transparent",
         :border-radius "4px"}}]
      [:>
       :XAxis
       {:dataKey :ts1,
        :label
        {:value "hourly memory averages",
         :fill :param/theme-color1,
         :style {:font-size "15px", :font-weight 700},
         :position "middle",
         :dy 25}}]
      [:> :YAxis {:domain ["auto" "auto"]}]
      [:>
       :Bar
       {:isAnimationActive false,
        :dataKey :used_memory_mb,
        :stroke :param/theme-color1,
        :stroke-width 3,
        :fill "#8884d801"}
       [:>
        :LabelList
        {:dataKey :diff,
         :fill :param/theme-color1,
         :style {:font-size "18px", :font-weight 700},
         :position "top"}]]]]}},
  :block-12161
  {:name "recent q per sec",
   :w 5,
   :selected-view :hi,
   :root [20 1],
   :h 3,
   :queries {},
   :tab "welcome to the party pal",
   :minimized? true,
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/recent_queries_per_second.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "recent q-per-sec"]]]}},
  :block-3218
  {:h 2,
   :w 18,
   :root [30 15],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-3218",
   :views
   {:hi
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "30px",
      :color :param/theme-color2,
      :font-weight 700,
      :margin-top "7px",
      :transition "all 0.6s ease-in-out"}
     :child
     [:str "uptime: " :server/uptime]]},
   :queries {}},
  :block-7665
  {:h 5,
   :w 8,
   :root [5 7],
   :tab "color test",
   :selected-view :hi,
   :name "block-7665",
   :views {:hi [:data-viewer [:tetrads :solver/colors-of-the-moment>brightest]]},
   :queries {}},
  :block-7259
  {:clojure
   {:new-clojure-3
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (doseq [e (range 5)] (Thread/sleep 5000) (println "ITS A SHITSHOW! " e "!"))
        (str
          "🐇🥕 YO! Internal RVBBIT nREPL. Clojure "
          clojure-version
          " on "
          jvm-version
          " JVM tech"
          " 🥕🐇")))},
   :name "block-7259",
   :w 5,
   :selected-view :new-clojure-3,
   :root [60 1],
   :h 4,
   :display {:new-clojure-3 :value},
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:hare-vw-1
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "It's no use going back to yesterday, because I was a different person then."]}},
  :block-10151 {:root [13 21]},
  :block-2388
  {:name "block-2388",
   :w 7,
   :selected-view :query-6018,
   :root [32 10],
   :h 7,
   :connection-id "system-db",
   :queries
   {:query-6018
    {:select [:attribute_name [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:attribute_name
         :attribute_value
         :connection_id
         :context_hash
         :db_catalog
         :db_schema
         :db_type
         :derived_calc
         :derived_name
         :field_name
         :key_hash
         :run_id
         :table_name
         :table_type
         :updated],
        :from [[:attributes :mm879]]}
       :bb504]],
     :group-by [:attribute_name],
     :order-by [[:attribute_name :asc]],
     :_last-run "17:58:41"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2388.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-9347
  {:h 20,
   :w 10,
   :root [28 3],
   :tab "color test",
   :selected-view :hi,
   :name "block-9347",
   :views {:hi [:data-viewer :solver/colors-of-the-moment]},
   :queries {}},
  :block-8619
  {:h 3,
   :w 6,
   :root [5 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-8619",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/used_memory_mb.0]]
      [:box :style {:font-size "18px", :margin-top "-10px"} :child "server mb"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-11070
  {:h 3,
   :w 5,
   :root [0 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-11070",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/thread_count.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "server threads"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-4109
  {:name "callout client mb",
   :w 4,
   :block-key ":block-285",
   :selected-view :cell-drop-7398,
   :root [40 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:cell-drop-7398
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "60px",
      :color :param/theme-color1,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :client/*client-name*>stats>memory]]
      [:box
       :style
       {:font-size "18px", :margin-top "-15px"}
       :child
       "client js used (mb)"]]]}},
  :block-11754
  {:name "callout client msgps",
   :w 4,
   :block-key ":block-5659",
   :selected-view :hi,
   :root [36 17],
   :h 3,
   :file-path "./screens/blackberries3-narrow2.edn",
   :queries {},
   :tab "welcome to the party pal",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color2,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:string :client/*client-name*>stats>messages-per-second]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "messages/sec (all)"]]]}},
  :block-8083
  {:clojure
   {:new-clojure-2
    (do
      (ns rvbbit-backend.websockets)
      (let [tt :time/minute
            cs (client-statuses)
            fs (flow-statuses)
            aw (deref rvbbit-backend.db/atoms-and-watchers)
            watchers (apply
                       concat
                       (vals
                         (into
                           {}
                           (for
                             [[k v] aw]
                             {k (vec (for [[k v] v] (get v :watch-key)))}))))]
        {:client-statuses-keys (count (keys cs)),
         :atoms-and-watchers-keys (count (keys aw)),
         :cs-keys (vec (keys cs)),
         :aw-keys (vec (keys aw)),
         :distinct-watchers (count watchers),
         :running-flows (vec (keys (filter (fn [x] (get (val x) :*running?)) fs))),
         :minute-run tt}))},
   :name "block-8083",
   :w 11,
   :selected-mode {:new-clojure-2 :data},
   :selected-view :new-clojure-2,
   :root [48 1],
   :h 19,
   :queries {},
   :tab "welcome to the party pal",
   :views {}},
  :block-2762
  {:name "block-2762",
   :w 8,
   :selected-view :query-11325,
   :root [39 10],
   :h 7,
   :connection-id "system-db",
   :queries
   {:query-11325
    {:select [:table_name [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:attribute_name
         :attribute_value
         :connection_id
         :context_hash
         :db_catalog
         :db_schema
         :db_type
         :derived_calc
         :derived_name
         :field_name
         :key_hash
         :run_id
         :table_name
         :table_type
         :updated],
        :from [[:attributes :mm879]],
        :where
        [:*when
         {:attribute_name "is_sqlite?", :rowcnt 1618}
         [:*all= {:attribute_name "is_sqlite?", :rowcnt 1618} [:attribute_name]]],
        :order-by [[:table_name :asc]]}
       :mm340]],
     :group-by [:table_name],
     :order-by [[:table_name :asc]],
     :col-widths {:rowcnt 100, :table_name 240},
     :_last-run "17:58:42"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-2762.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-9142
  {:h 4,
   :w 5,
   :root [0 1],
   :tab "orange hornet",
   :selected-view :hi,
   :name "block-9142",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-9142.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"]},
   :queries {}},
  :block-10067
  {:h 3,
   :w 5,
   :root [15 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-10067",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color1,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/recent_messages_per_second.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "recent msg-per-sec"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}},
  :block-6431
  {:name "block-6431",
   :w 7,
   :selected-view :query-4704,
   :root [30 2],
   :h 8,
   :connection-id "system-db",
   :queries
   {:query-4704
    {:select [:test_name [[:count 1] :rowcnt]],
     :from
     [[{:select
        [:connection_id
         :context_hash
         :data_type
         :db_catalog
         :db_schema
         :db_type
         :derived_calc
         :derived_name
         :field_name
         :field_type
         :is_sample
         :key_hash
         :run_id
         :table_name
         :table_type
         :test_name
         :test_raw_val
         :test_sql
         :test_val_float
         :test_val_integer
         :test_val_string
         :updated],
        :from [[:tests :aa558]]}
       :mm899]],
     :group-by [:test_name],
     :order-by [[:test_name :asc]],
     :_last-run "17:58:40"}},
   :tab "reassuring sand dollar",
   :views
   {:hi
    [:box
     :align
     :center
     :justify
     :center
     :attr
     {:id ":block-6431.:hi"}
     :style
     {:font-size "106px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     "hi!"],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]}},
  :block-8394
  {:h 9,
   :w 6,
   :tab "color test",
   :root [21 7],
   :name ":param/theme-tetrads",
   :views {:param-val [:data-viewer :param/theme-tetrads]},
   :queries {}},
  :block-1650
  {:h 2,
   :w 15,
   :root [1 4],
   :tab "color test",
   :selected-view :hare-vw-2,
   :name "block-1650",
   :views
   {:hare-vw-2
    [:box
     :align
     :center
     :justify
     :center
     :style
     {:font-size "21px",
      :font-weight 700,
      :padding-top "6px",
      :padding-left "14px",
      :margin-top "-8px",
      :color :theme/editor-outer-rim-color,
      :font-family :theme/base-font}
     :child
     [:str :solver/wallpaper-of-the-moment]]},
   :queries {}},
  :block-7837
  {:h 8,
   :w 30,
   :connection-id "system-db",
   :name "select-all-tests",
   :queries
   {:tests-drag-12
    {:select
     [:connection_id
      :context_hash
      :data_type
      :db_catalog
      :db_schema
      :db_type
      :derived_calc
      :derived_name
      :field_name
      :field_type
      :is_sample
      :key_hash
      :run_id
      :table_name
      :table_type
      :test_name
      :test_raw_val
      :test_sql
      :test_val_float
      :test_val_integer
      :test_val_string
      :updated],
     :from [[:tests :aa558]],
     :where
     [:*when :query-4704/*.clicked [:*all= :query-4704/*.clicked [:test_name]]],
     :_last-run "17:58:37"}},
   :root [0 2],
   :tab "reassuring sand dollar"},
  :block-4603
  {:h 3,
   :w 4,
   :root [11 1],
   :tab "welcome to the party pal",
   :selected-view :hi,
   :name "block-4603",
   :views
   {:hi
    [:v-box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "56px",
      :color :param/theme-color1,
      :font-weight 700,
      :transition "all 0.6s ease-in-out"}
     :children
     [[:box :child [:number :jvm-stats-drag-40/ws_peers.0]]
      [:box
       :style
       {:font-size "18px", :margin-top "-10px"}
       :child
       "live clients"]]],
    :stack [:layout {:panels {:hello-there {:h 0.99, :w 0.99, :root [0 0]}}}]},
   :queries {}}},
 :materialized-theme
 {:codemirror-theme "rvbbit-dynamic",
  :editor-param-background-color "#000000",
  :pop-2 "#3b539c",
  :base-block-style
  {:text-shadow "4px 4px 4px #00000088",
   :border-radius "12px 12px 12px 12px",
   :filter "brightness(120%)",
   :backdrop-filter "brightness(35%)"},
  :vega-defaults
  {:view {:stroke "transparent"},
   :axis
   {:domainColor "#ffffff22",
    :grid true,
    :font "Lato",
    :labelColor "#ffffff88",
    :titleFont "Lato",
    :titleColor "#ffffff99",
    :labelFont "Lato",
    :domain false,
    :gridColor "#ffffff22",
    :tickColor "#ffffff22",
    :axisFont "Lato"},
   :legend
   {:labelFont "Lato",
    :legendFont "Lato",
    :labelColor "#ffffff99",
    :titleColor "#ffffff99",
    :stroke "#ffffff99",
    :titleFont "Lato"},
   :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
   :mark {:font "Lato"},
   :title
   {:font "Lato",
    :subtitleFont "Lato",
    :labelFont "Lato",
    :titleFont "Lato",
    :titleColor "#ffffff99"}},
  :grid-selected-column-css
  {:background-color "#00000088", :filter "brightness(200%)"},
  :base-block-color-selected "#00030a",
  :block-title-font-color "#ffffff",
  :base-block-color "#21112b82",
  :editor-rim-color "#2baaba99",
  :base-block-filter-selected
  "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
  :vega-default-color-scheme {:scheme "pastel2"},
  :data-colors
  {"float" "#93dc82",
   "boolean" "#45e46c",
   "map" "#db406d",
   "list" "#970e78",
   "string" "#fdfafd",
   "any" "#133ba4",
   "vector" "#4dcac1",
   "keyword" "#d3e2a2",
   "rabbit-code" "#4fba2b",
   "datetime" "#7f1c34",
   "integer" "#7eb8dd",
   "unknown" "#6e243b",
   "date" "#123b25"},
  :editor-grid-selected-font-color "#000000",
  :monospaced-font "JetBrains Mono",
  :editor-grid-selected-background-color "#dc9cb0",
  :nivo-defaults
  {:font-family "Instagram Sans",
   :labels
   {:text
    {:fill "#ffffff",
     :font-size "16px",
     :font-family "Instagram Sans",
     :font-weight 700}},
   :tooltip
   {:container
    {:background "#000",
     :color "#ffffff",
     :text {:fill "#eeeeee"},
     :fontSize "18px",
     :borderRadius "4px",
     :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
     :padding "5px 9px"},
    :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
    :tableCell {:padding "3px 5px"}},
   :axis
   {:legend
    {:text
     {:fill "#ffffff",
      :font-size "14px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :ticks
    {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
   :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
  :editor-outer-rim-color "#2baaba",
  :grid-selected-font-color "#000000",
  :block-title-selected-font-color "#ffffff",
  :grid-selected-background-color "#a3d3ff",
  :grid-font-color "#ffffff",
  :canvas-background-css
  {:background-image
   "url(assets/openai-images/b64-image3-98099-27060-4k.webp-q10.jpg)",
   :transition "all 0.8s ease-in-out",
   :background-size "cover",
   :background-blend-mode "hard-light",
   :background-position "center",
   :background-color "#424f5700"},
  :editor-font-color "#ffffff",
  :base-font "Poppins",
  :block-tab-selected-font-color "#c9d1ff",
  :editor-background-color "#000006",
  :editor-grid-font-color "#ffffff",
  :pop-1 "#c14bae"},
 :selected-block "none!",
 :theme-colors-hashmap
 {"float" "#93dc82",
  "boolean" "#45e46c",
  "map" "#db406d",
  "list" "#970e78",
  "string" "#fdfafd",
  "any" "#133ba4",
  "vector" "#4dcac1",
  "keyword" "#d3e2a2",
  "rabbit-code" "#4fba2b",
  "datetime" "#7f1c34",
  "integer" "#7eb8dd",
  "unknown" "#6e243b",
  "date" "#123b25"},
 :solver-fn nil,
 :click-param
 {:blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 29,
   :block_data
   "{:codemirror-theme \"rvbbit-dynamic\", :editor-param-background-color \"#000000\", :pop-2 :solver/colors-of-the-moment>colors>2, :base-block-style {:text-shadow \"4px 4px 4px #00000088\"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color \"#04041e82\", :editor-rim-color [:str :solver/colors-of-the-moment>brightest 99], :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors :solver/colors-of-the-moment>data-colors, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color :solver/colors-of-the-moment>brightest, :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image [:str \"url(\" :solver/wallpaper-of-the-moment \")\"], :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-position \"center\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Poppins\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\", :pop-1 :solver/colors-of-the-moment>colors>1}",
   :view_names
   ":codemirror-theme :editor-param-background-color :pop-2 :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color :pop-1",
   :query_names ""},
  :db-conn-drag-13.* {:db_conn [":honey-format"]},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "system-db",
   :schema_cat nil,
   :table_name "attributes",
   :fields 16},
  :new-query-1
  {:queries_run 75638,
   :recent_messages_per_second 31.59,
   :uptime_seconds 3750,
   :queries_per_second 23,
   :sql_cache_size 19,
   :ts "2024-05-21 20:18:36",
   :subscriptions 167,
   :messages_per_second 710.32,
   :messages 2663696,
   :sniffs_run 7593,
   :sys_load 9.41,
   :unix_ms 1716337116868,
   :used_memory_mb 6283,
   :styler_heatmap_7696 1,
   :recent_queries_run 26,
   :thread_count 231,
   :internal_queries_run 10856,
   :open_flow_channels 11,
   :ws_peers 11,
   :recent_messages 2663222,
   :recent_queries_per_second 1.73,
   :seconds_since_last_update 15},
  :error-str-drag-13.* {},
  :query-4704 {:test_name "total_rows", :rowcnt 77},
  :jvm-stats-drag-40
  {:ts1 "2024-07-09 23:59:14",
   :queries_run 9,
   :recent_messages_per_second -707,
   :sql_cache_size 0,
   :ts "2024-07-09 23:5",
   :messages 715,
   :sniffs_run 1,
   :sys_load 2.68,
   :recent_batches_per_second -47,
   :batches 47,
   :used_memory_mb 2109,
   :thread_count 351,
   :internal_queries_run 0,
   :open_flow_channels 11,
   :ws_peers 10,
   :recent_queries_per_second -9},
  :flows-sys
  {:flow_id "node-color-thief-js-webp",
   :file_path "./flows/node-color-thief-js-webp.edn",
   :last_modified "2024-08-29 10:19:50"},
  :files-sys
  {:file_path "./screens/alarm-clock2.edn",
   :screen_name "alarm-clock2",
   :blocks 29,
   :queries 11,
   :ts "2024-06-06 10:18:48"},
  :fields-drag-16.* {:table_name ["db_conn_drag_13" "error_str_drag_13"]},
  :param
  {:_theme-color1 :solver/colors-of-the-moment>brightest,
   :theme-color3 :param/theme-tetrads>2,
   :theme-color1 :param/theme-tetrads>0,
   :refresh-timer 45,
   :_theme-color2 :solver/colors-of-the-moment>colors>0,
   :theme-color2 :param/theme-tetrads>1,
   :theme-dark :solver/colors-of-the-moment>darkest,
   :theme-split-complement
   [:split-complements :solver/colors-of-the-moment>dominant],
   :selected-view-data
   (do
     (ns rvbbit-backend.websockets)
     (let [top (mapv
                 first
                 (take
                   10
                   (sort-by
                     second
                     >
                     (for
                       [[k v] (deref atom-metrics)]
                       [k (get (last v) :size-mb)]))))]
       (fig-render "< rvbbit sys atoms sizes >")
       (println
         "(only if enabled in config.edn, very expensive - only for debugging)")
       (draw-client-stats
         top
         [30]
         nil
         true
         (+ 30 :col-width)
         {:metrics-atom atom-metrics}))),
   :tt :solver/colors-of-the-moment>data-colors,
   :selected-view [:clojure :new-clojure-4],
   :theme-color4 :param/theme-tetrads>3,
   :_theme-color4 :solver/colors-of-the-moment>colors>1,
   :theme-tetrads [:tetrads :solver/colors-of-the-moment>brightest],
   :_theme-color3 :solver/colors-of-the-moment>dominant,
   :selected-block :block-6590},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :pop-2 :solver/colors-of-the-moment>colors>2,
   :base-block-style
   {:text-shadow "4px 4px 4px #00000088",
    :border-radius [:sticky-border-radius "12px"],
    :filter "brightness(120%)",
    :backdrop-filter "brightness(35%)"},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :base-block-color [:str :param/theme-dark 82],
   :editor-rim-color [:str :solver/colors-of-the-moment>second-brightest 99],
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors :solver/colors-of-the-moment>data-colors,
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "JetBrains Mono",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color :solver/colors-of-the-moment>second-brightest,
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image [:str "url(" :solver/wallpaper-of-the-moment ")"],
    :transition "all 0.8s ease-in-out",
    :background-size "cover",
    :background-blend-mode "hard-light",
    :background-position "center",
    :background-color "#424f5700"},
   :editor-font-color "#ffffff",
   :base-font "Poppins",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff",
   :pop-1 :solver/colors-of-the-moment>colors>1},
  :query-11325 {:table_name "nypd_arrest_data_drag_16", :rowcnt 20},
  :flow-runner nil,
  :connections-sys {:database_name "*csv-import-db*", :connection_id "imported"},
  :query-6018 {:attribute_name "is_sqlite?", :rowcnt 1618},
  :sys {:selected-tab "welcome to the party pal", :selected-tab-idx 0},
  :tracker nil},
 :selected-flow "my-new-flow6772"}