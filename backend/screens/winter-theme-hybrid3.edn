{:reco-preview nil,
 :annotate? false,
 :leaf-preview
 {[:sql :count-distinct]
  {[[:block-3871 :queries :all-ufo-sightings-1 :field :shape]
    [:canvas :canvas :canvas]]
   {:h 4,
    :w 6,
    :connection-id "bigfoot-ufos",
    :selected-view :countd-all-ufo-sightings-1,
    :queries
    {:countd-all-ufo-sightings-1
     {:select [[[:count [:distinct :shape]] :shape]],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :ssb66]],
      :limit 20}},
    :leaf-drop [:sql :count-distinct]}},
  [:filter :new-drop-down]
  {[[:block-3871 :queries :all-ufo-sightings-1 :field :shape]
    [:canvas :canvas :canvas]]
   {:h 2,
    :w 6,
    :selected-view :dropdown1,
    :connection-id "bigfoot-ufos",
    :drop-mutate
    {[:panels :block-3871 :queries :all-ufo-sightings-1 :where]
     [:*when :*this-block*/shape [:= :*this-block*/shape :shape]]},
    :views
    {:dropdown1
     [:dropdown
      {:choices :query1,
       :width :panel-width+80-px,
       :style {:padding-top "8px", :font-size "19px"},
       :ref
       {:select
        [:shape
         :city
         :id
         :state
         :date_posted
         :duration_seconds_int
         :duration_hours
         :comments
         :datetime
         :country
         :longitude
         :duration_seconds
         :latitude],
        :from [[:ufo_sightings :ssb99]]},
       :model :*this-block*/shape,
       :field :shape}]},
    :queries
    {:query1
     {:select [[:shape :label] [:shape :id]],
      :from [[:ufo_sightings :ddr66]],
      :group-by [:shape],
      :order-by [[:shape :asc]],
      :limit 20}},
    :leaf-drop [:filter :new-drop-down]}},
  [:cell :new-pivot-table]
  {[[:block-3871 :queries :all-ufo-sightings-1 :field :shape]
    [:canvas :canvas :canvas]]
   {:h 5,
    :w 6,
    :selected-view :pivot1,
    :connection-id "bigfoot-ufos",
    :pivot
    {:pivot1
     {:rowset-keypath [:all-ufo-sightings-1],
      :rowset-query
      [{:select
        [:shape
         :city
         :id
         :state
         :date_posted
         :duration_seconds_int
         :duration_hours
         :comments
         :datetime
         :country
         :longitude
         :duration_seconds
         :latitude],
        :from [[:ufo_sightings :ssb99]]}],
      :row-keys [:shape],
      :column-keys ["all"],
      :agg-specs []}},
    :leaf-drop [:cell :new-pivot-table]}},
  [:sql :new-group-by]
  {[[:block-3871 :queries :all-ufo-sightings-1 :field :shape]
    [:canvas :canvas :canvas]]
   {:h 4,
    :w 6,
    :connection-id "bigfoot-ufos",
    :selected-view :grouped-all-ufo-sightings-1,
    :queries
    {:grouped-all-ufo-sightings-1
     {:select [:shape [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :ssb72]],
      :order-by [[:rowcnt :desc]],
      :group-by [:shape],
      :limit 20}},
    :leaf-drop [:sql :new-group-by]}},
  [:filter :click-table]
  {[[:block-3871 :queries :all-ufo-sightings-1 :field :shape]
    [:canvas :canvas :canvas]]
   {:h 6,
    :w 6,
    :selected-view :query1,
    :connection-id "bigfoot-ufos",
    :drop-mutate
    {[:panels :block-3871 :queries :all-ufo-sightings-1 :where]
     [:*if :query1/*.clicked [:*all= :query1/*.clicked [:shape]] [:= 1 1]]},
    :queries
    {:query1
     {:select [:shape [[:count 1] :rowcnt]],
      :from [[:ufo_sightings :ctr1]],
      :group-by [:shape],
      :order-by [[:rowcnt :desc]],
      :limit 20}},
    :leaf-drop [:filter :click-table]}}},
 :default-col-widths
 {:virtual-panel {:kick-frag--396704624 100},
  :block-3871 {:all-ufo-sightings-1 100},
  :block-316 {:gen-viz-123 255},
  :block-7831 {:query1 130},
  :system-connections-list* {:connections-sys 126},
  :system-fields-list* {:fields-sys 127},
  :block-8193 {:agg-grouped-all-superstore-1 261},
  :block-6676 {:grouped-all-superstore-1 155},
  :block-10955 {:agg-all-superstore 361},
  :block-10081 {:grouped-all-superstore 130},
  :block-1400 {:query1-1 130},
  :block-7349 {:cnt-all-superstore 261},
  :block-7312 {:agg-grouped-all-superstore 261},
  :system-tables-list* {:tables-sys 100},
  :block-703 {:all-superstore 100}},
 :runstream-drops nil,
 :tabs ["winter-wonder-lands" "commendable snake" "stupendous deer"],
 :selected-cols nil,
 :server nil,
 :runstreams {"a-random-wow" {:open? true, :open-outputs? true}},
 :editor? false,
 :buffy? false,
 :memory [850950650 759656874 4294705152],
 :client-name :certain-elliptic-grasshopper-13,
 :server-panels
 [:block-695
  :block-684
  :block-3871
  :block-5136
  :block-263
  :block-889
  :block-8880
  :block-316
  :block-7831
  :block-488
  :block-4928
  :block-10207
  :block-689
  :block-11913
  :block-8193
  :block-5189
  :block-6676
  :block-173
  :block-10955
  :block-10081
  :block-172
  :block-1400
  :block-609
  :block-801
  :block-653
  :block-350
  :block-7349
  :block-411
  :block-7312
  :block-703],
 :flow-editor? true,
 :window {:w 2016, :h 1266},
 :ai-worker? false,
 :quake-console? false,
 :implicit-rowsets {:solver [nil]},
 :post-meta
 {:tables-sys
  {:* {:rowcount 9},
   :db_schema {:distinct 1},
   :db_catalog {:distinct 0},
   :fields {:distinct 9},
   :rrows {:distinct nil},
   :rows {:distinct 7},
   :schema_cat {:distinct 0},
   :table_name {:distinct 9},
   :connection_id {:distinct 1}},
  :rabbit-search-like
  {:QUERY {:distinct 135},
   :* {:rowcount 135},
   :data_type {:distinct 7},
   :total_rows {:distinct 7},
   :distinct_count {:distinct 65},
   :table_fields {:distinct 9},
   :rrows {:distinct nil}},
  :all-ufo-sightings-1
  {:* {:rowcount 80332},
   :duration_seconds_int {:distinct 536},
   :comments {:distinct 79997},
   :city {:distinct 19898},
   :date_posted {:distinct 317},
   :rrows {:distinct nil},
   :longitude {:distinct 19455},
   :state {:distinct 67},
   :duration_seconds {:distinct 537},
   :duration_hours {:distinct 8349},
   :id {:distinct 80332},
   :shape {:distinct 29},
   :datetime {:distinct 69434},
   :latitude {:distinct 18445},
   :country {:distinct 5}},
  :gen-viz-959-1
  {:profit {:distinct 3},
   :* {:rowcount 3},
   :category {:distinct 3},
   :rrows {:distinct nil}},
  :grouped-all-superstore
  {:category {:distinct 3},
   :* {:rowcount 3},
   :rowcnt {:distinct 3},
   :rrows {:distinct nil}},
  :agg-grouped-all-superstore
  {:rowcnt {:distinct 1}, :* {:rowcount 1}, :rrows {:distinct nil}},
  :ufo_sightings
  {:* {:rowcount 111},
   :duration_seconds_int {:distinct 26},
   :comments {:distinct 111},
   :city {:distinct 102},
   :date_posted {:distinct 69},
   :rrows {:distinct nil},
   :longitude {:distinct 103},
   :state {:distinct 37},
   :duration_seconds {:distinct 26},
   :duration_hours {:distinct 76},
   :id {:distinct 111},
   :shape {:distinct 18},
   :datetime {:distinct 103},
   :latitude {:distinct 103},
   :country {:distinct 4}},
  :all-superstore
  {:category {:distinct 3},
   :sales {:distinct 4592},
   :* {:rowcount 7146},
   :ship_date {:distinct 1249},
   :product_id {:distinct 1809},
   :city {:distinct 448},
   :profit {:distinct 5518},
   :rrows {:distinct nil},
   :state {:distinct 35},
   :zipcode {:distinct 511},
   :row_id {:distinct 7146},
   :region {:distinct 3},
   :ship_mode {:distinct 4},
   :order_id {:distinct 3608},
   :segment {:distinct 3},
   :sub_category {:distinct 17},
   :order_date {:distinct 1156},
   :quantity {:distinct 14},
   :discount {:distinct 1},
   :country {:distinct 1},
   :customer_name {:distinct 784},
   :product_name {:distinct 1796},
   :customer_id {:distinct 784}},
  :gen-viz-994
  {:sales {:distinct 3},
   :* {:rowcount 3},
   :category {:distinct 3},
   :rrows {:distinct nil}},
  :gen-viz-123 {:rrows {:distinct nil}, :* {:rowcount 6}, :country {:distinct 5}},
  :gen-viz-824 {:rrows {:distinct nil}, :* {:rowcount 6}, :country {:distinct 5}}},
 :flow-estimates
 {:fields-sys {:times 0.001, :run-id :fields-sys},
  :gen-viz-1048 {:times 0.003, :run-id :gen-viz-1048},
  :agg-all-superstore {:times 0.002, :run-id :agg-all-superstore},
  :gen-viz-549 {:times 0.002, :run-id :gen-viz-549},
  :superstore {:times 0.007, :run-id :superstore},
  :tables-sys {:times 0.001, :run-id :tables-sys},
  :rabbit-search-like {:times 0.001, :run-id :rabbit-search-like},
  :query1-1 {:times 0.038, :run-id :query1-1},
  :grouped-all-superstore-1 {:times 0.004, :run-id :grouped-all-superstore-1},
  :gen-viz-756-1 {:times 0.003, :run-id :gen-viz-756-1},
  :gen-viz-949 {:times 0.003, :run-id :gen-viz-949},
  :all-ufo-sightings-1 {:times 0.018, :run-id :all-ufo-sightings-1},
  :kick-frag--396704624 {:times 0.001, :run-id :kick-frag--396704624},
  :gen-viz-959-1 {:times 0.003, :run-id :gen-viz-959-1},
  :grouped-all-superstore {:times 0.004, :run-id :grouped-all-superstore},
  :gen-viz-756 {:times 0.003, :run-id :gen-viz-756},
  :agg-grouped-all-superstore-1
  {:times 0.004, :run-id :agg-grouped-all-superstore-1},
  :agg-grouped-all-superstore {:times 0.003, :run-id :agg-grouped-all-superstore},
  :gen-viz-959 {:times 0.003, :run-id :gen-viz-959},
  :ufo_sightings {:times 0.007, :run-id :ufo_sightings},
  :connections-sys {:times 0.001, :run-id :connections-sys},
  :all-superstore {:times 0.022, :run-id :all-superstore},
  :gen-viz-994 {:times 0.003, :run-id :gen-viz-994},
  :cnt-all-superstore {:times 0.002, :run-id :cnt-all-superstore},
  :query1 {:times 0.027, :run-id :query1},
  :block-5136-new-clojure {:times 0.024, :run-id :block-5136-new-clojure}},
 :screen-name "winter-theme-hybrid3",
 :panel-hashes
 {:reco-preview639382424 -636108316,
  :block-695 1666872905,
  :block-684 1833239107,
  :reco-preview-1948432620 -1442453909,
  :block-5136 -939428243,
  :block-263 1373674838,
  :block-8880 -767281295,
  :block-7831 -1733966931,
  :block-488 -760269408,
  :block-4928 1688538454,
  :block-10207 1099655619,
  :block-689 1838638432,
  :block-11913 -945310181,
  :block-8193 1562989175,
  :block-5189 735662132,
  :block-6676 -871888662,
  :block-173 -1067978404,
  :block-10955 -1205664266,
  :block-10081 -1346281765,
  :block-172 809806661,
  :block-1400 1129270867,
  :block-609 -1522476013,
  :block-801 -1973236451,
  :block-653 -506031765,
  :block-350 -430783371,
  :block-7349 1203596686,
  :block-411 -962085880,
  :block-7312 1510009302,
  :reco-preview-1551409558 1257289448,
  :block-703 -320845073,
  :reco-preview410961049 965164500},
 :recos-page2 0,
 :selected-tab "stupendous deer",
 :col-names nil,
 :snapshots {:params {}},
 :recos-page 0,
 :rs-overrides-hashmap {"a-random-wow" nil},
 :user-params-hash -782244636,
 :grid-recos? true,
 :preview-keys2 [],
 :session-hash 1628098247,
 :resolved-queries
 {nil {:_last-run "16:43:31"},
  :gen-viz-1048
  {:select [[[[:sum :quantity]] :quantity] :ship_mode],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:ship_mode]},
  :agg-all-superstore
  {:select [[[:sum :quantity] :quantity]],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :ssb56]]},
  :gen-viz-549
  {:select [[[[:sum :quantity]] :quantity] :category],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:category]},
  :query1-1
  {:select [:region [[:count 1] :rowcnt]],
   :from [[:superstore :ctr7]],
   :group-by [:region],
   :order-by [[:rowcnt :desc]]},
  :grouped-all-superstore-1
  {:select [:segment [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :ssb50]],
   :order-by [[:rowcnt :desc]],
   :group-by [:segment]},
  :gen-viz-756-1
  {:select [[[[:sum :sales]] :sales] :segment],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:segment]},
  :gen-viz-1042
  {:select [[[:count 1] :rrows] :country],
   :from
   [[{:select
      [:city
       :comments
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :id
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :ssb47]],
      :where
      [:*if
       {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
       [:*all=
        {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
        [:state]]
       [:= 1 1]]}
     :subq1]],
   :group-by [:country]},
  :query1-2
  {:select [:state [[:count 1] :rowcnt]],
   :from [[:ufo_sightings :ctr5]],
   :group-by [:state],
   :order-by [[:rowcnt :desc]]},
  :query-preview639382424
  {:select [:rrows :duration_seconds_int :duration_seconds_int :shape],
   :from
   [[{:select
      [:shape
       :city
       :id
       :state
       :date_posted
       :duration_seconds_int
       :duration_hours
       :comments
       :datetime
       :country
       :longitude
       :duration_seconds
       :latitude],
      :from [[:ufo_sightings :ssb99]]}
     :subq1]]},
  :gen-viz-949
  {:select [[[[:sum :sales]] :sales] :sub_category],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:sub_category]},
  :new-api-call-sqlized
  {:select
   [:total_wows_in_movie
    :release_date
    :director
    :full_line
    :movie
    :year
    :video_480p
    :poster
    :video_1080p
    :video_720p
    :audio
    :current_wow_in_movie
    :video_360p
    :timestamp
    :movie_duration
    :character],
   :connection-id "cache.db",
   :_sqlized-at "2024-11-12 19:39:09",
   :_sqlized-by [:block-10207 :api-call :new-api-call],
   :_sqlized-hash nil,
   :from [[:block_10207_new_api_call__block_10207_api_call_new_api_call_ :zz745]]},
  :countd-all-ufo-sightings-1
  {:select [[[:count [:distinct :duration_hours]] :duration_hours]],
   :from
   [[{:select
      [:city
       :comments
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :id
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :ssb47]],
      :where
      [:*if
       {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
       [:*all=
        {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
        [:state]]
       [:= 1 1]]}
     :ssb45]]},
  :agg-new-api-call-sqlized
  {:select [[[:sum :total_wows_in_movie] :total_wows_in_movie]],
   :from
   [[{:select
      [:total_wows_in_movie
       :release_date
       :director
       :full_line
       :movie
       :year
       :video_480p
       :poster
       :video_1080p
       :video_720p
       :audio
       :current_wow_in_movie
       :video_360p
       :timestamp
       :movie_duration
       :character],
      :_sqlized-at "2024-11-12 19:39:09",
      :_sqlized-by [:block-10207 :api-call :new-api-call],
      :_sqlized-hash nil,
      :from
      [[:block_10207_new_api_call__block_10207_api_call_new_api_call_ :zz745]]}
     :ssb53]]},
  :gen-viz-959-1
  {:select [[[[:sum :profit]] :profit] :category],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:category]},
  :countd-all-ufo-sightings
  {:select [[[:count [:distinct :state]] :state]],
   :from
   [[{:select
      [:city
       :comments
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :id
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :ssb47]],
      :where
      [:*if
       {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
       [:*all=
        {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
        [:state]]
       [:= 1 1]]}
     :ssb10]]},
  :all-ufo-sightings
  {:select
   [:city
    :comments
    :country
    :date_posted
    :datetime
    :duration_hours
    :duration_seconds
    :duration_seconds_int
    :id
    :latitude
    :longitude
    :shape
    :state],
   :from [[:ufo_sightings :ssb47]],
   :where
   [:*if
    {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
    [:*all= {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]} [:state]]
    [:= 1 1]]},
  :grouped-all-superstore
  {:select [:category [[:count 1] :rowcnt]],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :ssb70]],
   :group-by [:category]},
  :gen-viz-756
  {:select [[[:count 1] :rrows] :ship_mode],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:ship_mode]},
  :agg-grouped-all-superstore-1
  {:select [[[:sum :rowcnt] :rowcnt]],
   :from
   [[{:select [:category [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:category
          :city
          :country
          :customer_id
          :customer_name
          :discount
          :order_date
          :order_id
          :product_id
          :product_name
          :profit
          :quantity
          :region
          :row_id
          :sales
          :segment
          :ship_date
          :ship_mode
          :state
          :sub_category
          :zipcode],
         :from [[:superstore :ssb41]],
         :where
         [:and
          [:and
           [:*if
            {:region ["West" "Central" "South"]}
            [:*all= {:region ["West" "Central" "South"]} [:category]]
            [:= 1 1]]
           [:*if
            {:region ["West" "Central" "South"]}
            [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
            [:= 1 1]]]
          [:*if
           {:region ["West" "Central" "South"]}
           [:*all= {:region ["West" "Central" "South"]} [:region]]
           [:= 1 1]]]}
        :ssb70]],
      :group-by [:category]}
     :ssb63]]},
  :agg-grouped-all-superstore
  {:select [[[:sum :rowcnt] :rowcnt]],
   :from
   [[{:select [:category [[:count 1] :rowcnt]],
      :from
      [[{:select
         [:category
          :city
          :country
          :customer_id
          :customer_name
          :discount
          :order_date
          :order_id
          :product_id
          :product_name
          :profit
          :quantity
          :region
          :row_id
          :sales
          :segment
          :ship_date
          :ship_mode
          :state
          :sub_category
          :zipcode],
         :from [[:superstore :ssb41]],
         :where
         [:and
          [:and
           [:*if
            {:region ["West" "Central" "South"]}
            [:*all= {:region ["West" "Central" "South"]} [:category]]
            [:= 1 1]]
           [:*if
            {:region ["West" "Central" "South"]}
            [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
            [:= 1 1]]]
          [:*if
           {:region ["West" "Central" "South"]}
           [:*all= {:region ["West" "Central" "South"]} [:region]]
           [:= 1 1]]]}
        :ssb70]],
      :group-by [:category]}
     :ssb91]]},
  :gen-viz-959
  {:select [[[:count 1] :rrows] :sub_category],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:sub_category]},
  :query-preview410961049
  {:select [[[:count 1] :rrows] :shape :country],
   :from
   [[{:select
      [:shape
       :city
       :id
       :state
       :date_posted
       :duration_seconds_int
       :duration_hours
       :comments
       :datetime
       :country
       :longitude
       :duration_seconds
       :latitude],
      :from [[:ufo_sightings :ssb99]]}
     :subq1]],
   :group-by [:shape :country]},
  :gen-viz-828
  {:select [[[:count 1] :rrows] :shape],
   :from
   [[{:select
      [:city
       :comments
       :country
       :date_posted
       :datetime
       :duration_hours
       :duration_seconds
       :duration_seconds_int
       :id
       :latitude
       :longitude
       :shape
       :state],
      :from [[:ufo_sightings :ssb47]],
      :where
      [:*if
       {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
       [:*all=
        {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]}
        [:state]]
       [:= 1 1]]}
     :subq1]],
   :group-by [:shape]},
  :all-superstore
  {:select
   [:category
    :city
    :country
    :customer_id
    :customer_name
    :discount
    :order_date
    :order_id
    :product_id
    :product_name
    :profit
    :quantity
    :region
    :row_id
    :sales
    :segment
    :ship_date
    :ship_mode
    :state
    :sub_category
    :zipcode],
   :from [[:superstore :ssb41]],
   :where
   [:and
    [:and
     [:*if
      {:region ["West" "Central" "South"]}
      [:*all= {:region ["West" "Central" "South"]} [:category]]
      [:= 1 1]]
     [:*if
      {:region ["West" "Central" "South"]}
      [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
      [:= 1 1]]]
    [:*if
     {:region ["West" "Central" "South"]}
     [:*all= {:region ["West" "Central" "South"]} [:region]]
     [:= 1 1]]]},
  :query-preview-1948432620
  {:select [[[:count 1] :rrows] :country],
   :from
   [[{:select
      [:shape
       :city
       :id
       :state
       :date_posted
       :duration_seconds_int
       :duration_hours
       :comments
       :datetime
       :country
       :longitude
       :duration_seconds
       :latitude],
      :from [[:ufo_sightings :ssb99]]}
     :subq1]],
   :group-by [:country]},
  :query-preview-1551409558
  {:select [[[:count 1] :rrows] :country],
   :from
   [[{:select
      [:shape
       :city
       :id
       :state
       :date_posted
       :duration_seconds_int
       :duration_hours
       :comments
       :datetime
       :country
       :longitude
       :duration_seconds
       :latitude],
      :from [[:ufo_sightings :ssb99]]}
     :subq1]],
   :group-by [:country]},
  :gen-viz-994
  {:select [[[[:sum :sales]] :sales] :category],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :subq1]],
   :group-by [:category],
   :order-by [[:category :asc]]},
  :cnt-all-superstore
  {:select [[[:count 1] :rowcnt]],
   :from
   [[{:select
      [:category
       :city
       :country
       :customer_id
       :customer_name
       :discount
       :order_date
       :order_id
       :product_id
       :product_name
       :profit
       :quantity
       :region
       :row_id
       :sales
       :segment
       :ship_date
       :ship_mode
       :state
       :sub_category
       :zipcode],
      :from [[:superstore :ssb41]],
      :where
      [:and
       [:and
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:category]]
         [:= 1 1]]
        [:*if
         {:region ["West" "Central" "South"]}
         [:*all= {:region ["West" "Central" "South"]} [:customer_name]]
         [:= 1 1]]]
       [:*if
        {:region ["West" "Central" "South"]}
        [:*all= {:region ["West" "Central" "South"]} [:region]]
        [:= 1 1]]]}
     :ssb73]]},
  :query1
  {:select [:category [[:count 1] :rowcnt]],
   :from [[:superstore :ctr15]],
   :group-by [:category]}},
 :panels
 {nil {:queries {nil {:_last-run "16:43:31"}}},
  :block-695
  {:leaf-drop [:sql :count-distinct],
   :name "block-695",
   :w 6,
   :selected-view :countd-all-ufo-sightings,
   :root [28 7],
   :h 4,
   :connection-id "bigfoot-ufos",
   :queries
   {:countd-all-ufo-sightings
    {:select [[[:count [:distinct :state]] :state]],
     :from [[:query/all-ufo-sightings :ssb10]]}},
   :tab "commendable snake"},
  :block-684
  {:shape-rotator
   {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings"],
    :shape-name :recharts-h-bar,
    :axes {:y "rrows", :x "country"},
    :items [[:views :reech-2-2] [:queries :gen-viz-1042]],
    :source-panel :block-11913},
   :name "rrows, country",
   :w 8,
   :selected-view :reech-2-2,
   :root [33 1],
   :h 6,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-1042
    {:select [[[:count 1] :rrows] :country],
     :from [[:query/all-ufo-sightings :subq1]],
     :group-by [:country]}},
   :tab "commendable snake",
   :views
   {:reech-2-2
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :country, :allowDuplicatedCategory false}]
      [:>
       :Bar
       {:dataKey :rrows,
        :isAnimationActive false,
        :data :gen-viz-1042,
        :stroke :theme/editor-outer-rim-color,
        :fill [:str :theme/editor-outer-rim-color "33"],
        :on-click [:set-recharts-param>]}]]]},
   :bid :block-684},
  :block-5136
  {:clojure
   {:new-clojure
    (do
      (let [clojure-version (clojure-version)
            jvm-version (System/getProperty "java.version")]
        (str
          "🐇🥕 huge. Clojure "
          clojure-version
          " on "
          jvm-version
          " JVM tech"
          " 🥕🐇")))},
   :leaf-drop [:fresh :fresh-repl],
   :name "block-5136",
   :w 7,
   :selected-mode {:* :text},
   :selected-view :new-clojure,
   :root [34 7],
   :h 4,
   :tab "winter-wonder-lands"},
  :block-263
  {:leaf-drop [:filter :click-table],
   :name "block-263",
   :w 6,
   :selected-view :query1-2,
   :root [1 12],
   :h 11,
   :drop-mutate
   {[:panels :block-11913 :queries :all-ufo-sightings :where]
    [:*if :query1-2/*.clicked [:*all= :query1-2/*.clicked [:state]] [:= 1 1]]},
   :connection-id "bigfoot-ufos",
   :queries
   {:query1-2
    {:select [:state [[:count 1] :rowcnt]],
     :from [[:ufo_sightings :ctr5]],
     :group-by [:state],
     :order-by [[:rowcnt :desc]]}},
   :tab "commendable snake"},
  :block-8880
  {:leaf-drop [:sql :new-agg.sum],
   :name "block-8880",
   :w 6,
   :selected-view :agg-new-api-call-sqlized,
   :root [30 16],
   :h 4,
   :connection-id "cache.db",
   :queries
   {:agg-new-api-call-sqlized
    {:select [[[:sum :total_wows_in_movie] :total_wows_in_movie]],
     :from [[:query/new-api-call-sqlized :ssb53]]}},
   :tab "commendable snake"},
  :block-7831
  {:leaf-drop [:filter :click-table],
   :name "block-7831",
   :w 6,
   :selected-view :query1,
   :root [2 16],
   :h 6,
   :drop-mutate
   {[:panels :block-703 :queries :all-superstore :where]
    [:*if :query1/*.clicked [:*all= :query1/*.clicked [:category]] [:= 1 1]]},
   :connection-id "superstore",
   :queries
   {:query1
    {:select [:category [[:count 1] :rowcnt]],
     :from [[:superstore :ctr15]],
     :group-by [:category]}},
   :tab "winter-wonder-lands"},
  :block-488
  {:shape-rotator
   {:context ["superstore" nil "none" "all-superstore"],
    :shape-name :recharts-h-bar,
    :axes {:y "profit", :x "category"},
    :items [[:views :reech-1-4] [:queries :gen-viz-959-1]],
    :source-panel :block-703},
   :name "profit, category",
   :w 7,
   :selected-view :reech-1-4,
   :root [34 11],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-959-1
    {:select [[[[:sum :profit]] :profit] :category],
     :from [[:query/all-superstore :subq1]],
     :group-by [:category]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-1-4
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :category, :allowDuplicatedCategory false}]
      [:>
       :Bar
       {:dataKey :profit,
        :isAnimationActive false,
        :data :gen-viz-959-1,
        :stroke :theme/editor-outer-rim-color,
        :fill [:str :theme/editor-outer-rim-color "33"],
        :on-click [:set-recharts-param>]}]]]},
   :bid :block-488},
  :block-4928
  {:w 7,
   :h 4,
   :selected-view :vv1,
   :views
   {:vv1
    [:box
     :size
     "auto"
     :align
     :center
     :justify
     :center
     :style
     {:font-size "181px"}
     :child
     "hi"]},
   :leaf-drop [:fresh :fresh-clover],
   :tab "commendable snake",
   :root [9 13],
   :name "block-4928"},
  :block-10207
  {:api-call
   {:new-api-call
    {:endpoint "https://owen-wilson-wow-api.onrender.com/wows/random",
     :method :get,
     :params {:results 22},
     :flatten? true}},
   :leaf-drop [:fresh :fresh-api-call],
   :name "block-10207",
   :w 9,
   :selected-mode {:* :text},
   :selected-view :new-api-call-sqlized,
   :root [19 14],
   :h 8,
   :queries
   {:new-api-call-sqlized
    {:select
     [:total_wows_in_movie
      :release_date
      :director
      :full_line
      :movie
      :year
      :video_480p
      :poster
      :video_1080p
      :video_720p
      :audio
      :current_wow_in_movie
      :video_360p
      :timestamp
      :movie_duration
      :character],
     :connection-id "cache.db",
     :_sqlized-at "2024-11-12 19:39:09",
     :_sqlized-by [:block-10207 :api-call :new-api-call],
     :_sqlized-hash
     :solver-meta/block-10207-new-api-call>output>evald-result>value-hash,
     :from
     [[:block_10207_new_api_call__block_10207_api_call_new_api_call_ :zz745]]}},
   :tab "commendable snake"},
  :block-689
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-line,
    :axes {:y "rrows", :x "sub_category"},
    :items [[:views :reech-1-1] [:queries :gen-viz-959]],
    :source-panel :block-703},
   :name "rrows, sub_category",
   :w 9,
   :selected-view :reech-1-1,
   :root [8 8],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-959
    {:select [[[:count 1] :rrows] :sub_category],
     :from [[:query/all-superstore :subq1]],
     :group-by [:sub_category]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-1-1
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :sub_category, :allowDuplicatedCategory false}]
      [:>
       :Line
       {:type "monotone",
        :isAnimationActive false,
        :data :gen-viz-959,
        :dataKey :rrows,
        :stroke :theme/editor-outer-rim-color,
        :activeDot {:r 8}}]
      [:>
       :Scatter
       {:data :gen-viz-959,
        :dataKey :rrows,
        :isAnimationActive false,
        :fill :theme/editor-outer-rim-color,
        :onClick [:set-recharts-param>]}]]]},
   :bid :block-689},
  :block-11913
  {:leaf-drop [:sql :new-select.all],
   :name "block-11913",
   :w 32,
   :selected-view :all-ufo-sightings,
   :root [1 1],
   :h 6,
   :connection-id "bigfoot-ufos",
   :queries
   {:all-ufo-sightings
    {:select
     [:city
      :comments
      :country
      :date_posted
      :datetime
      :duration_hours
      :duration_seconds
      :duration_seconds_int
      :id
      :latitude
      :longitude
      :shape
      :state],
     :from [[:ufo_sightings :ssb47]],
     :where
     [:*if :query1-2/*.clicked [:*all= :query1-2/*.clicked [:state]] [:= 1 1]]}},
   :tab "commendable snake"},
  :block-8193
  {:leaf-drop [:sql :new-agg.sum],
   :name "block-8193",
   :w 6,
   :selected-view :agg-grouped-all-superstore-1,
   :root [34 22],
   :h 4,
   :connection-id "superstore",
   :queries
   {:agg-grouped-all-superstore-1
    {:select [[[:sum :rowcnt] :rowcnt]],
     :from [[:query/grouped-all-superstore :ssb63]]}},
   :tab "winter-wonder-lands"},
  :block-5189
  {:leaf-drop [:sql :count-distinct],
   :name "block-5189",
   :w 6,
   :selected-view :countd-all-ufo-sightings-1,
   :root [28 11],
   :h 4,
   :connection-id "bigfoot-ufos",
   :queries
   {:countd-all-ufo-sightings-1
    {:select [[[:count [:distinct :duration_hours]] :duration_hours]],
     :from [[:query/all-ufo-sightings :ssb45]]}},
   :tab "commendable snake"},
  :block-6676
  {:leaf-drop [:sql :new-group-by],
   :name "block-6676",
   :w 7,
   :selected-view :grouped-all-superstore-1,
   :root [34 2],
   :h 5,
   :connection-id "superstore",
   :queries
   {:grouped-all-superstore-1
    {:select [:segment [[:count 1] :rowcnt]],
     :from [[:query/all-superstore :ssb50]],
     :order-by [[:rowcnt :desc]],
     :group-by [:segment]}},
   :tab "winter-wonder-lands"},
  :block-173
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-line,
    :axes {:y "quantity", :x "ship_mode"},
    :items [[:views :reech-1-2] [:queries :gen-viz-1048]],
    :source-panel :block-703},
   :name "quantity, ship_mode",
   :w 9,
   :selected-view :reech-1-2,
   :root [17 8],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-1048
    {:select [[[[:sum :quantity]] :quantity] :ship_mode],
     :from [[:query/all-superstore :subq1]],
     :group-by [:ship_mode]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-1-2
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :ship_mode, :allowDuplicatedCategory false}]
      [:>
       :Line
       {:type "monotone",
        :isAnimationActive false,
        :data :gen-viz-1048,
        :dataKey :quantity,
        :stroke :theme/editor-outer-rim-color,
        :activeDot {:r 8}}]
      [:>
       :Scatter
       {:data :gen-viz-1048,
        :dataKey :quantity,
        :isAnimationActive false,
        :fill :theme/editor-outer-rim-color,
        :onClick [:set-recharts-param>]}]]]},
   :bid :block-173},
  :block-10955
  {:leaf-drop [:sql :new-agg.sum],
   :name "block-10955",
   :w 8,
   :selected-view :agg-all-superstore,
   :root [26 8],
   :h 5,
   :connection-id "superstore",
   :queries
   {:agg-all-superstore
    {:select [[[:sum :quantity] :quantity]],
     :from [[:query/all-superstore :ssb56]]}},
   :tab "winter-wonder-lands"},
  :block-10081
  {:leaf-drop [:sql :new-group-by],
   :name "block-10081",
   :w 6,
   :selected-view :grouped-all-superstore,
   :root [2 8],
   :h 4,
   :connection-id "superstore",
   :queries
   {:grouped-all-superstore
    {:select [:category [[:count 1] :rowcnt]],
     :from [[:query/all-superstore :ssb70]],
     :group-by [:category]}},
   :tab "winter-wonder-lands"},
  :block-172
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-h-bar,
    :axes {:y "sales", :x "sub_category"},
    :items [[:views :reech-6-1] [:queries :gen-viz-949]],
    :source-panel :block-703},
   :name "sales, sub_category",
   :w 9,
   :selected-view :reech-6-1,
   :root [14 18],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-949
    {:select [[[[:sum :sales]] :sales] :sub_category],
     :from [[:query/all-superstore :subq1]],
     :group-by [:sub_category]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-6-1
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :sub_category, :allowDuplicatedCategory false}]
      [:>
       :Bar
       {:dataKey :sales,
        :isAnimationActive false,
        :data :gen-viz-949,
        :stroke :theme/editor-outer-rim-color,
        :fill [:str :theme/editor-outer-rim-color "33"],
        :on-click [:set-recharts-param>]}]]]},
   :bid :block-172},
  :block-1400
  {:leaf-drop [:filter :click-table],
   :name "block-1400",
   :w 6,
   :selected-view :query1-1,
   :root [34 16],
   :h 6,
   :drop-mutate
   {[:panels :block-703 :queries :all-superstore :where]
    [:and
     [:and
      [:*if :query1-1/*.clicked [:*all= :query1-1/*.clicked [:category]] [:= 1 1]]
      [:*if
       :query1-1/*.clicked
       [:*all= :query1-1/*.clicked [:customer_name]]
       [:= 1 1]]]
     [:*if :query1-1/*.clicked [:*all= :query1-1/*.clicked [:region]] [:= 1 1]]]},
   :connection-id "superstore",
   :queries
   {:query1-1
    {:select [:region [[:count 1] :rowcnt]],
     :from [[:superstore :ctr7]],
     :group-by [:region],
     :order-by [[:rowcnt :desc]]}},
   :tab "winter-wonder-lands"},
  :block-609
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-h-bar,
    :axes {:y "sales", :x "segment"},
    :items [[:views :reech-1-3] [:queries :gen-viz-756-1]],
    :source-panel :block-703},
   :name "sales, segment",
   :w 11,
   :selected-view :reech-1-3,
   :root [23 18],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-756-1
    {:select [[[[:sum :sales]] :sales] :segment],
     :from [[:query/all-superstore :subq1]],
     :group-by [:segment]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-1-3
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :segment, :allowDuplicatedCategory false}]
      [:>
       :Bar
       {:dataKey :sales,
        :isAnimationActive false,
        :data :gen-viz-756-1,
        :stroke :theme/editor-outer-rim-color,
        :fill [:str :theme/editor-outer-rim-color "33"],
        :on-click [:set-recharts-param>]}]]]},
   :bid :block-609},
  :block-801
  {:shape-rotator
   {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings"],
    :shape-name :recharts-h-bar,
    :axes {:y "rrows", :x "shape"},
    :items [[:views :reech-5-2] [:queries :gen-viz-828]],
    :source-panel :block-11913},
   :name "rrows, shape",
   :w 27,
   :selected-view :reech-5-2,
   :root [1 7],
   :h 5,
   :connection-id "bigfoot-ufos",
   :queries
   {:gen-viz-828
    {:select [[[:count 1] :rrows] :shape],
     :from [[:query/all-ufo-sightings :subq1]],
     :group-by [:shape]}},
   :tab "commendable snake",
   :views
   {:reech-5-2
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :shape, :allowDuplicatedCategory false}]
      [:>
       :Bar
       {:dataKey :rrows,
        :isAnimationActive false,
        :data :gen-viz-828,
        :stroke :theme/editor-outer-rim-color,
        :fill [:str :theme/editor-outer-rim-color "33"],
        :on-click [:set-recharts-param>]}]]]},
   :bid :block-801},
  :block-653
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-line,
    :axes {:y "rrows", :x "ship_mode"},
    :items [[:views :reech-5-1] [:queries :gen-viz-756]],
    :source-panel :block-703},
   :name "rrows, ship_mode",
   :w 8,
   :selected-view :reech-5-1,
   :root [26 13],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-756
    {:select [[[:count 1] :rrows] :ship_mode],
     :from [[:query/all-superstore :subq1]],
     :group-by [:ship_mode]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-5-1
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :ship_mode, :allowDuplicatedCategory false}]
      [:>
       :Line
       {:type "monotone",
        :isAnimationActive false,
        :data :gen-viz-756,
        :dataKey :rrows,
        :stroke :theme/editor-outer-rim-color,
        :activeDot {:r 8}}]
      [:>
       :Scatter
       {:data :gen-viz-756,
        :dataKey :rrows,
        :isAnimationActive false,
        :fill :theme/editor-outer-rim-color,
        :onClick [:set-recharts-param>]}]]]},
   :bid :block-653},
  :block-350
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-line,
    :axes {:y "quantity", :x "category"},
    :items [[:views :reech-4-1] [:queries :gen-viz-549]],
    :source-panel :block-703},
   :name "quantity, category",
   :w 9,
   :selected-view :reech-4-1,
   :root [17 13],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-549
    {:select [[[[:sum :quantity]] :quantity] :category],
     :from [[:query/all-superstore :subq1]],
     :group-by [:category]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-4-1
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :category, :allowDuplicatedCategory false}]
      [:>
       :Line
       {:type "monotone",
        :isAnimationActive false,
        :data :gen-viz-549,
        :dataKey :quantity,
        :stroke :theme/editor-outer-rim-color,
        :activeDot {:r 8}}]
      [:>
       :Scatter
       {:data :gen-viz-549,
        :dataKey :quantity,
        :isAnimationActive false,
        :fill :theme/editor-outer-rim-color,
        :onClick [:set-recharts-param>]}]]]},
   :bid :block-350},
  :block-7349
  {:leaf-drop [:sql :new-select.count],
   :name "block-7349",
   :w 6,
   :selected-view :cnt-all-superstore,
   :root [8 18],
   :h 4,
   :connection-id "superstore",
   :queries
   {:cnt-all-superstore
    {:select [[[:count 1] :rowcnt]], :from [[:query/all-superstore :ssb73]]}},
   :tab "winter-wonder-lands"},
  :block-411
  {:shape-rotator
   {:context ["superstore" nil nil "all-superstore"],
    :shape-name :recharts-h-bar,
    :axes {:y "sales", :x "category"},
    :items [[:views :reech-2-1] [:queries :gen-viz-994]],
    :source-panel :block-703},
   :name "sales, category",
   :w 9,
   :selected-view :reech-2-1,
   :root [8 13],
   :h 5,
   :connection-id "superstore",
   :queries
   {:gen-viz-994
    {:select [[[[:sum :sales]] :sales] :category],
     :from [[:query/all-superstore :subq1]],
     :group-by [:category],
     :order-by [[:category :asc]]}},
   :tab "winter-wonder-lands",
   :views
   {:reech-2-1
    [:>
     :ResponsiveContainer
     {:width "100%", :height :panel-height+50}
     [:>
      :ComposedChart
      {:data [], :margin {:top 5, :bottom 5, :right 30, :left 20}}
      [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
      [:>
       :Tooltip
       {:contentStyle {:backgroundColor "#00000099", :border "none"},
        :itemStyle {:color "#ecf0f1"},
        :labelStyle {:color "#3498db"}}]
      [:> :XAxis {:dataKey :category, :allowDuplicatedCategory false}]
      [:>
       :Bar
       {:dataKey :sales,
        :isAnimationActive false,
        :data :gen-viz-994,
        :stroke :theme/editor-outer-rim-color,
        :fill [:str :theme/editor-outer-rim-color "33"],
        :on-click [:set-recharts-param>]}]]]},
   :bid :block-411},
  :block-7312
  {:leaf-drop [:sql :new-agg.sum],
   :name "block-7312",
   :w 6,
   :selected-view :agg-grouped-all-superstore,
   :root [2 12],
   :h 4,
   :connection-id "superstore",
   :queries
   {:agg-grouped-all-superstore
    {:select [[[:sum :rowcnt] :rowcnt]],
     :from [[:query/grouped-all-superstore :ssb91]]}},
   :tab "winter-wonder-lands"},
  :block-703
  {:leaf-drop [:sql :new-select.all],
   :name "block-703",
   :w 32,
   :selected-view :all-superstore,
   :root [2 2],
   :h 6,
   :connection-id "superstore",
   :queries
   {:all-superstore
    {:select
     [:category
      :city
      :country
      :customer_id
      :customer_name
      :discount
      :order_date
      :order_id
      :product_id
      :product_name
      :profit
      :quantity
      :region
      :row_id
      :sales
      :segment
      :ship_date
      :ship_mode
      :state
      :sub_category
      :zipcode],
     :from [[:superstore :ssb41]],
     :where
     [:and
      [:and
       [:*if :query1-1/*.clicked [:*all= :query1-1/*.clicked [:category]] [:= 1 1]]
       [:*if
        :query1-1/*.clicked
        [:*all= :query1-1/*.clicked [:customer_name]]
        [:= 1 1]]]
      [:*if :query1-1/*.clicked [:*all= :query1-1/*.clicked [:region]] [:= 1 1]]]}},
   :tab "winter-wonder-lands"}},
 :materialized-theme
 {:codemirror-theme "rvbbit-dynamic",
  :editor-param-background-color "#000000",
  :pop-2 "#497a92",
  :base-block-style
  {:text-shadow "4px 4px 4px #00000088",
   :border-radius "12px 12px 12px 12px",
   :filter "brightness(120%)",
   :backdrop-filter "brightness(35%)"},
  :vega-defaults
  {:view {:stroke "transparent"},
   :axis
   {:domainColor "#ffffff22",
    :grid true,
    :font "Lato",
    :labelColor "#ffffff88",
    :titleFont "Lato",
    :titleColor "#ffffff99",
    :labelFont "Lato",
    :domain false,
    :gridColor "#ffffff22",
    :tickColor "#ffffff22",
    :axisFont "Lato"},
   :legend
   {:labelFont "Lato",
    :legendFont "Lato",
    :labelColor "#ffffff99",
    :titleColor "#ffffff99",
    :stroke "#ffffff99",
    :titleFont "Lato"},
   :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
   :mark {:font "Lato"},
   :title
   {:font "Lato",
    :subtitleFont "Lato",
    :labelFont "Lato",
    :titleFont "Lato",
    :titleColor "#ffffff99"}},
  :grid-selected-column-css
  {:background-color "#00000088", :filter "brightness(200%)"},
  :base-block-color-selected "#00030a",
  :block-title-font-color "#ffffff",
  :base-block-color "82",
  :editor-rim-color "#57bcd499",
  :base-block-filter-selected
  "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
  :vega-default-color-scheme {:scheme "pastel2"},
  :data-colors
  {"float" "#cabcb5",
   "boolean" "#7d96cb",
   "map" "#b78091",
   "list" "#7c4394",
   "string" "#f9faf7",
   "any" "#4e58b3",
   "vector" "#8dd457",
   "keyword" "#97bced",
   "rabbit-code" "#61bb8a",
   "datetime" "#883d46",
   "integer" "#a9a1c0",
   "unknown" "#70342d",
   "date" "#57591f"},
  :editor-grid-selected-font-color "#000000",
  :monospaced-font "JetBrains Mono",
  :editor-grid-selected-background-color "#dc9cb0",
  :nivo-defaults
  {:font-family "Instagram Sans",
   :labels
   {:text
    {:fill "#ffffff",
     :font-size "16px",
     :font-family "Instagram Sans",
     :font-weight 700}},
   :tooltip
   {:container
    {:background "#000",
     :color "#ffffff",
     :text {:fill "#eeeeee"},
     :fontSize "18px",
     :borderRadius "4px",
     :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
     :padding "5px 9px"},
    :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
    :tableCell {:padding "3px 5px"}},
   :axis
   {:legend
    {:text
     {:fill "#ffffff",
      :font-size "14px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :ticks
    {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
   :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
  :editor-outer-rim-color "#57bcd4",
  :grid-selected-font-color "#000000",
  :block-title-selected-font-color "#ffffff",
  :grid-selected-background-color "#a3d3ff",
  :grid-font-color "#ffffff",
  :canvas-background-css
  {:background-image
   "linear-gradient(#57bcd426,#57bcd402),url(images/fake-brick4.png)",
   :transition "all 0.6s ease-in-out",
   :background-blend-mode "normal",
   :background-color "#424f57"},
  :editor-font-color "#ffffff",
  :base-font "Poppins",
  :block-tab-selected-font-color "#c9d1ff",
  :editor-background-color "#000006",
  :editor-grid-font-color "#ffffff",
  :pop-1 "#bbb5ca"},
 :selected-block "none!",
 :theme-colors-hashmap
 {"float" "#cabcb5",
  "boolean" "#7d96cb",
  "map" "#b78091",
  "list" "#7c4394",
  "string" "#f9faf7",
  "any" "#4e58b3",
  "vector" "#8dd457",
  "keyword" "#97bced",
  "rabbit-code" "#61bb8a",
  "datetime" "#883d46",
  "integer" "#a9a1c0",
  "unknown" "#70342d",
  "date" "#57591f"},
 :solver-fn nil,
 :click-param
 {:flow-fn-sys
  {:name ":clojure-string-join",
   :full_map
   "{:description \"Clojure.string's join function.\", :fn (fn [delimiter & args] (clojure.string/join delimiter args)), :inputs [:delimiter], :required [:delimiter], :defaults {:delimiter \" \"}, :expandable? true, :icon \"zmdi-group\", :types {:delimiter :string, :out :string}}",
   :description "Clojure.string's join function.",
   :inputs "[:delimiter]",
   :icon "zmdi-group",
   :input_types "[:string]",
   :output_types ":string",
   :category ":clojure-base"},
  :blocks-sys
  {:block_key ":*theme*",
   :block_name "(meta: this screen's theme)",
   :queries 0,
   :views 29,
   :block_data
   "{:codemirror-theme \"rvbbit-dynamic\", :editor-param-background-color \"#000000\", :pop-2 :solver/colors-of-the-moment>colors>2, :base-block-style {:text-shadow \"4px 4px 4px #00000088\", :border-radius [:sticky-border-radius \"12px\"], :filter \"brightness(120%)\", :backdrop-filter \"brightness(35%)\"}, :vega-defaults {:view {:stroke \"transparent\"}, :axis {:domainColor \"#ffffff22\", :grid true, :font \"Lato\", :labelColor \"#ffffff88\", :titleFont \"Lato\", :titleColor \"#ffffff99\", :labelFont \"Lato\", :domain false, :gridColor \"#ffffff22\", :tickColor \"#ffffff22\", :axisFont \"Lato\"}, :legend {:labelFont \"Lato\", :legendFont \"Lato\", :labelColor \"#ffffff99\", :titleColor \"#ffffff99\", :stroke \"#ffffff99\", :titleFont \"Lato\"}, :header {:labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}, :mark {:font \"Lato\"}, :title {:font \"Lato\", :subtitleFont \"Lato\", :labelFont \"Lato\", :titleFont \"Lato\", :titleColor \"#ffffff99\"}}, :grid-selected-column-css {:background-color \"#00000088\", :filter \"brightness(200%)\"}, :base-block-color-selected \"#00030a\", :block-title-font-color \"#ffffff\", :base-block-color [:str :param/theme-dark 82], :editor-rim-color [:str :solver/colors-of-the-moment>second-brightest 99], :base-block-filter-selected \"drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)\", :vega-default-color-scheme {:scheme \"pastel2\"}, :data-colors :solver/colors-of-the-moment>data-colors, :editor-grid-selected-font-color \"#000000\", :monospaced-font \"JetBrains Mono\", :editor-grid-selected-background-color \"#dc9cb0\", :nivo-defaults {:font-family \"Instagram Sans\", :labels {:text {:fill \"#ffffff\", :font-size \"16px\", :font-family \"Instagram Sans\", :font-weight 700}}, :tooltip {:container {:background \"#000\", :color \"#ffffff\", :text {:fill \"#eeeeee\"}, :fontSize \"18px\", :borderRadius \"4px\", :boxShadow \"0 1px 2px rgba(0, 0, 0, 0.55)\", :padding \"5px 9px\"}, :basic {:whiteSpace \"pre\", :display \"flex\", :alignItems \"center\"}, :tableCell {:padding \"3px 5px\"}}, :axis {:legend {:text {:fill \"#ffffff\", :font-size \"14px\", :font-family \"Instagram Sans\", :font-weight 700}}, :ticks {:line {:stroke \"#ffffff60\"}, :text {:fill \"#ffffff60\", :font-weight 700}}}, :grid {:line {:stroke \"#ffffff\", :strokeWidth 0, :strokeDasharray \"0 0\"}}}, :editor-outer-rim-color :solver/colors-of-the-moment>second-brightest, :grid-selected-font-color \"#000000\", :block-title-selected-font-color \"#ffffff\", :grid-selected-background-color \"#a3d3ff\", :grid-font-color \"#ffffff\", :canvas-background-css {:background-image [:str \"url(\" :solver/wallpaper-of-the-moment \")\"], :transition \"all 0.8s ease-in-out\", :background-size \"cover\", :background-blend-mode \"hard-light\", :background-position \"center\", :background-color \"#424f57\"}, :editor-font-color \"#ffffff\", :base-font \"Poppins\", :block-tab-selected-font-color \"#c9d1ff\", :editor-background-color \"#000006\", :editor-grid-font-color \"#ffffff\", :pop-1 :solver/colors-of-the-moment>colors>1}",
   :view_names
   ":codemirror-theme :editor-param-background-color :pop-2 :base-block-style :vega-defaults :grid-selected-column-css :base-block-color-selected :block-title-font-color :base-block-color :editor-rim-color :base-block-filter-selected :vega-default-color-scheme :data-colors :editor-grid-selected-font-color :monospaced-font :editor-grid-selected-background-color :nivo-defaults :editor-outer-rim-color :grid-selected-font-color :block-title-selected-font-color :grid-selected-background-color :grid-font-color :canvas-background-css :editor-font-color :base-font :block-tab-selected-font-color :editor-background-color :editor-grid-font-color :pop-1",
   :query_names ""},
  :tables-sys
  {:db_schema "none",
   :db_catalog nil,
   :connection_id "bigfoot-ufos",
   :schema_cat nil,
   :table_name "ufo_sightings",
   :rows 80332,
   :fields 15},
  :flows-sys
  {:flow_id "simple-python-exec",
   :file_path "./flows/simple-python-exec.edn",
   :last_modified "2024-01-19 10:37:23"},
  :files-sys
  {:file_path "./screens/rotating-theme-blank.edn",
   :screen_name "rotating-theme-blank",
   :blocks 14,
   :queries 2,
   :ts "2024-11-07 10:30:23"},
  :chat-drag-23 {:YEAR 2017, :rows 734, :styler_highlight_group 0},
  :offenses-drag-17
  {:SHOOTING nil,
   :DISTRICT "C11",
   :INCIDENT_NUMBER "I182070943",
   :OFFENSE_DESCRIPTION "VANDALISM",
   :DAY_OF_WEEK "0001-01-02",
   :MONTH 8,
   :YEAR 2018,
   :HOUR 0,
   :STREET "HECLA ST",
   :OFFENSE_CODE_GROUP "Vandalism",
   :UCR_PART "Part Two",
   :Long -71.06030035,
   :REPORTING_AREA 347,
   :Location "(42.30682138, -71.06030035)",
   :OFFENSE_CODE 1402,
   :Lat 42.30682138,
   :OCCURRED_ON_DATE "2018-08-21 00:00:00.000000"},
  :viz-tables-sys2 {:table_name :all-ufo-sightings-1},
  :query1-1.* {:region ["West" "Central" "South"]},
  :STREET-drag-11 {:STREET "BLUE HILL AVE", :rowcnt 7794},
  :ufo-sightings-drag-22
  {:duration_seconds_int 900,
   :comments
   "AS a Marine 1st Lt. flying an FJ4B fighter/attack aircraft on a solo night exercise&#44 I was at 50&#44000&#39 in a &quot;clean&quot; aircraft (no ordinan",
   :city "kaneohe",
   :date_posted "2004-01-22",
   :longitude -157.8036111,
   :state "hi",
   :duration_seconds "900",
   :duration_hours "15 minutes",
   :id 5,
   :shape "light",
   :datetime "1960-10-10 20:00:00.000000",
   :latitude "21.4180556",
   :country "us"},
  :param
  {:nutritious-periwinkle-sheep "hello from a data board!",
   :offense "VANDALISM",
   :float 324.444,
   :string "this is string",
   :selected-view-data nil,
   :essential-olive-toad "from clojure boar param",
   :poised-spring-bud-fly
   ["import sys, random "
    "from datetime import date"
    ""
    "print(\"damn son!\")"
    "print(random.randrange(1,300))"
    "print('{{:param/nutritious-periwinkle-sheep}}')"
    ""
    "today = date.today()"
    "print(\"Today's date:\", today)"
    ""
    "####INTERESTING...."
    ""
    ""
    ""
    ""],
   :selected-view nil,
   :keys 123,
   :bools true,
   :keys2 [3 4 5],
   :selected-block :block-4928},
  :theme
  {:codemirror-theme "rvbbit-dynamic",
   :editor-param-background-color "#000000",
   :pop-2 :solver/colors-of-the-moment>colors>2,
   :base-block-style
   {:text-shadow "4px 4px 4px #00000088",
    :border-radius [:sticky-border-radius "12px"],
    :filter "brightness(120%)",
    :backdrop-filter "brightness(35%)"},
   :vega-defaults
   {:view {:stroke "transparent"},
    :axis
    {:domainColor "#ffffff22",
     :grid true,
     :font "Lato",
     :labelColor "#ffffff88",
     :titleFont "Lato",
     :titleColor "#ffffff99",
     :labelFont "Lato",
     :domain false,
     :gridColor "#ffffff22",
     :tickColor "#ffffff22",
     :axisFont "Lato"},
    :legend
    {:labelFont "Lato",
     :legendFont "Lato",
     :labelColor "#ffffff99",
     :titleColor "#ffffff99",
     :stroke "#ffffff99",
     :titleFont "Lato"},
    :header {:labelFont "Lato", :titleFont "Lato", :titleColor "#ffffff99"},
    :mark {:font "Lato"},
    :title
    {:font "Lato",
     :subtitleFont "Lato",
     :labelFont "Lato",
     :titleFont "Lato",
     :titleColor "#ffffff99"}},
   :grid-selected-column-css
   {:background-color "#00000088", :filter "brightness(200%)"},
   :base-block-color-selected "#00030a",
   :block-title-font-color "#ffffff",
   :base-block-color [:str :param/theme-dark 82],
   :editor-rim-color [:str :solver/colors-of-the-moment>second-brightest 99],
   :base-block-filter-selected
   "drop-shadow(0.35rem 0.35rem 0.4rem #8dceff) drop-shadow(-0.35rem -0.35rem 0.4rem #8dceff)",
   :vega-default-color-scheme {:scheme "pastel2"},
   :data-colors :solver/colors-of-the-moment>data-colors,
   :editor-grid-selected-font-color "#000000",
   :monospaced-font "JetBrains Mono",
   :editor-grid-selected-background-color "#dc9cb0",
   :nivo-defaults
   {:font-family "Instagram Sans",
    :labels
    {:text
     {:fill "#ffffff",
      :font-size "16px",
      :font-family "Instagram Sans",
      :font-weight 700}},
    :tooltip
    {:container
     {:background "#000",
      :color "#ffffff",
      :text {:fill "#eeeeee"},
      :fontSize "18px",
      :borderRadius "4px",
      :boxShadow "0 1px 2px rgba(0, 0, 0, 0.55)",
      :padding "5px 9px"},
     :basic {:whiteSpace "pre", :display "flex", :alignItems "center"},
     :tableCell {:padding "3px 5px"}},
    :axis
    {:legend
     {:text
      {:fill "#ffffff",
       :font-size "14px",
       :font-family "Instagram Sans",
       :font-weight 700}},
     :ticks
     {:line {:stroke "#ffffff60"}, :text {:fill "#ffffff60", :font-weight 700}}},
    :grid {:line {:stroke "#ffffff", :strokeWidth 0, :strokeDasharray "0 0"}}},
   :editor-outer-rim-color :solver/colors-of-the-moment>second-brightest,
   :grid-selected-font-color "#000000",
   :block-title-selected-font-color "#ffffff",
   :grid-selected-background-color "#a3d3ff",
   :grid-font-color "#ffffff",
   :canvas-background-css
   {:background-image
    [:str
     "linear-gradient("
     :solver/colors-of-the-moment>second-brightest
     "26"
     ","
     :solver/colors-of-the-moment>second-brightest
     "02"
     "),url(images/fake-brick4.png)"],
    :transition "all 0.6s ease-in-out",
    :background-blend-mode "normal",
    :background-color "#424f57"},
   :editor-font-color "#ffffff",
   :base-font "Poppins",
   :block-tab-selected-font-color "#c9d1ff",
   :editor-background-color "#000006",
   :editor-grid-font-color "#ffffff",
   :pop-1 :solver/colors-of-the-moment>colors>1},
  :ufo-sightings-drag-22.* {:duration_hours ["1-2 hrs" "20 seconds"]},
  :connections-sys {:connection_id "bigfoot-ufos", :styler_highlight_8717ssa 0},
  :narratives
  {:base>narrative-22>theme :cyberpunk,
   :base>narrative-22>craps "#ffffff",
   :base>narrative-22>floatss 123.4,
   :base>narrative-1>floaty 123.4,
   :base>narrative-1>stuff1 "some stuff!",
   :base>narrative-22>namer "some stuff!",
   :base>narrative-22>vibes? true,
   :base>narrative-22>gopv ["test" "test3" "test4"],
   :base>narrative-22>mappy {:map 34}},
  :sys {:selected-tab "stupendous deer", :selected-tab-idx 2},
  :kits-sys
  {:enabled
   [[:query-basics-1 :buffy] [:grab-bag :buffy] [:query-basics-1 :outliers]]},
  :query1-2.* {:state ["wa" "fl" "tx" "ny" "on" "ca" "pa" "mi" "nj" "va"]},
  :query1.* {:category ["Technology" "Furniture"]}},
 :selected-flow "my-new-flow1069",
 :shapes
 {nil
  {:superstore
   [{:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color {:field :state, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :point-map-colors,
      :axes {:color "state"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "state",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :long-field :state],
       :from [[:query/superstore :subq1]]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :profit,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :recharts-area,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :profit, :type "quantitative"},
           :y {:field :profit, :type "quantitative"},
           :size {:field :profit, :type "quantitative"},
           :color
           {:field :sub_category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :scatter-plot,
      :axes {:y "profit", :color "sub_category", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit :sub_category],
       :from [[:query/superstore :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-h-bar,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:state-field :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :profit] :profit] :sub_category],
         :pivot-by [:sub_category]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :profit, :c :sub_category},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "profit", :color "sub_category", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :sub_category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-v-bar-color,
      :axes {:y "profit", :color "sub_category", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :profit},
        :groupMode "stacked",
        :keys [:profit],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_date, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-timeseries,
      :axes {:y "profit", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_date",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :ship_date],
       :from [[:query/superstore :subq1]],
       :group-by [:ship_date]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x] :profit],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "profit", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit], :from [[:query/superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :sub_category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "profit", :color "sub_category", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:sub_category]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "profit", :color "sub_category", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :sub_category],
       :from [[:query/superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Bar
         {:dataKey :profit,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :recharts-h-bar,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:county-field :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :profit, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :point-map-freq,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :profit] :profit]],
       :from [[:query/superstore :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :profit]}}],
            :encoding
            {:color {:field :profit, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :profit] :profit]],
       :from [[:query/superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_date, :type "temporal"},
           :y {:field :profit, :type "quantitative", :stack "zero"},
           :color
           {:field :sub_category, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :stacked-area-chart,
      :axes {:y "profit", :color "sub_category", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, ship_date",
     :queries
     {:query-preview
      {:select [:ship_date [[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:ship_date :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_date, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :state,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-timeseries-color,
      :axes {:y "profit", :color "state", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, state, ship_date",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :ship_date :state],
       :from [[:query/superstore :subq1]],
       :group-by [:ship_date :state]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :recharts-pie,
      :axes {:value "profit", :segment "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[:sub_category :name] [[:sum :profit] :value]],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :profit,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :profit] :profit] [:sub_category :name]],
         :from [:data],
         :nest-by [:sub_category :sub_category]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :sub_category, :x :sub_category, :y :profit},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "profit", :x1 "sub_category", :x2 "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, sub_category",
     :queries
     {:query-preview
      {:select [[[:sum :profit] :profit] :sub_category :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :sub_category, :y :profit},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :pie-nivo,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[:sum :profit] :value] [:sub_category :id]],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:field :sub_category, :type "ordinal"},
           :color
           {:field :profit, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :heatmap-2d,
      :axes {:y "sub_category", :color "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category, profit, sub_category",
     :queries
     {:query-preview
      {:select [:sub_category :sub_category [[[:sum :profit]] :profit]],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x] :profit],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:sub_category]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :profit,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "profit", :color "sub_category", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit :sub_category],
       :from [[:query/superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :sub_category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-h-bar-color,
      :axes {:y "profit", :color "sub_category", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :profit,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :recharts-line,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :scatterplot-nivo,
      :axes {:y "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit], :from [[:query/superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :sub_category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "profit", :color "sub_category", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :profit]}}],
            :encoding
            {:color
             {:field :profit, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :profit] :profit]],
       :from [[:query/superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "profit", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_date",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :value] [:ship_date :day]],
       :from [[:query/superstore :subq1]],
       :group-by [:ship_date]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "superstore"],
      :shape-name :basic-v-bar,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/superstore :subq1]],
       :group-by [:sub_category]}}}],
   :tables-sys
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :table_name}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :table_name, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "table_name", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :table_name],
       :from [[:query/tables-sys :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :table_name, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :table_name]}}],
            :encoding
            {:color
             {:field :table_name, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "table_name",
     :queries
     {:query-preview
      {:select [:state-field :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :table_name,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :table_name],
         :pivot-by [:table_name]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :table_name, :y :rrows, :c :table_name},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "table_name", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :table_name, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :table_name,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "table_name", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :table_name,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :table_name, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/tables-sys :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/tables-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :table_name, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :table_name, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :table_name,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "table_name", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, table_name",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :table_name :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:table_name]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "table_name", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :table_name], :from [[:query/tables-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :table_name}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :table_name]}}],
            :encoding
            {:color
             {:field :table_name, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "table_name",
     :queries
     {:query-preview
      {:select [:county-field :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/tables-sys :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :table_name, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :table_name, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:x-field :table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from [[:query/tables-sys :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "table_name"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[:table_name :name] [[:count 1] :value]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:table_name :name]],
         :from [:data],
         :nest-by [:table_name :table_name]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :table_name, :x :table_name, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "table_name", :x2 "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :table_name, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:table_name :id]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :table_name, :type "ordinal"},
           :y {:field :table_name, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :heatmap-2d,
      :axes {:y "table_name", :color "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "table_name, rrows, table_name",
     :queries
     {:query-preview
      {:select [:table_name :table_name [[:count 1] :rrows]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:table_name]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "table_name", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :table_name],
       :from [[:query/tables-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :table_name, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :table_name,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "table_name", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :table_name}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview {:select [:rrows :rrows], :from [[:query/tables-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :table_name, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :table_name,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "table_name", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name, table_name",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :table_name :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name :table_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/tables-sys :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :table_name, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "tables-sys"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "table_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, table_name",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :table_name],
       :from [[:query/tables-sys :subq1]],
       :group-by [:table_name]}}}],
   :connections-sys
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :connection_id}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :connection_id, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "connection_id", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :connection_id],
       :from [[:query/connections-sys :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :connection_id, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :connection_id]}}],
            :encoding
            {:color
             {:field :connection_id, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "connection_id",
     :queries
     {:query-preview
      {:select [:state-field :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :connection_id,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :connection_id],
         :pivot-by [:connection_id]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :connection_id, :y :rrows, :c :connection_id},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "connection_id", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :connection_id, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :connection_id,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "connection_id", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :connection_id,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :connection_id, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/connections-sys :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/connections-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :connection_id, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :connection_id, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :connection_id,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "connection_id", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, connection_id",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :connection_id :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:connection_id]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "connection_id", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :connection_id],
       :from [[:query/connections-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :connection_id}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :connection_id]}}],
            :encoding
            {:color
             {:field :connection_id, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "connection_id",
     :queries
     {:query-preview
      {:select [:county-field :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/connections-sys :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :connection_id, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :connection_id,
            :type "nominal",
            :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:x-field :connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from [[:query/connections-sys :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "connection_id"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[:connection_id :name] [[:count 1] :value]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:connection_id :name]],
         :from [:data],
         :nest-by [:connection_id :connection_id]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :connection_id, :x :connection_id, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "connection_id", :x2 "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :connection_id, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:connection_id :id]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :connection_id, :type "ordinal"},
           :y {:field :connection_id, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :heatmap-2d,
      :axes {:y "connection_id", :color "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "connection_id, rrows, connection_id",
     :queries
     {:query-preview
      {:select [:connection_id :connection_id [[:count 1] :rrows]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:connection_id]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "connection_id", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :connection_id],
       :from [[:query/connections-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :connection_id, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :connection_id,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "connection_id", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :connection_id}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows], :from [[:query/connections-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :connection_id, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :connection_id,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "connection_id", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id, connection_id",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :connection_id :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id :connection_id]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/connections-sys :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :connection_id, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "none" "connections-sys"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "connection_id"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, connection_id",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :connection_id],
       :from [[:query/connections-sys :subq1]],
       :group-by [:connection_id]}}}],
   :fields-sys
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :data_type}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :distinct_count,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :recharts-area,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :distinct_count, :type "quantitative"},
           :y {:field :distinct_count, :type "quantitative"},
           :size {:field :distinct_count, :type "quantitative"},
           :color
           {:field :data_type, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :scatter-plot,
      :axes
      {:y "distinct_count",
       :color "data_type",
       :size "distinct_count",
       :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :distinct_count :data_type],
       :from [[:query/fields-sys :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-h-bar,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :data_type]}}],
            :encoding
            {:color
             {:field :data_type, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "data_type",
     :queries
     {:query-preview
      {:select [:state-field :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :data_type,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :distinct_count] :distinct_count] :data_type],
         :pivot-by [:data_type]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :data_type, :y :distinct_count, :c :data_type},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-v-bar-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :data_type,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :data_type, :y :distinct_count},
        :groupMode "stacked",
        :keys [:distinct_count],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-timeseries,
      :axes {:y "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :x-field],
       :from [[:query/fields-sys :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:distinct_count :y] [:distinct_count :x] :distinct_count],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "distinct_count", :size "distinct_count", :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :distinct_count],
       :from [[:query/fields-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:distinct_count :y] [:distinct_count :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:data_type]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "distinct_count", :color "data_type", :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :data_type],
       :from [[:query/fields-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :data_type}]
        [:>
         :Bar
         {:dataKey :distinct_count,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :recharts-h-bar,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :data_type]}}],
            :encoding
            {:color
             {:field :data_type, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "data_type",
     :queries
     {:query-preview
      {:select [:county-field :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :distinct_count,
             :scale {:scheme "darkmulti"},
             :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :point-map-freq,
      :axes {:color "distinct_count"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :distinct_count] :distinct_count]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/fields-sys :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :distinct_count]}}],
            :encoding
            {:color
             {:field :distinct_count, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :distinct_count] :distinct_count]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :distinct_count, :type "quantitative", :stack "zero"},
           :color
           {:field :data_type, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :stacked-area-chart,
      :axes {:y "distinct_count", :color "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:x-field :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-timeseries-color,
      :axes {:y "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :x-field :color-field],
       :from [[:query/fields-sys :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :recharts-pie,
      :axes {:value "distinct_count", :segment "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[:data_type :name] [[:sum :distinct_count] :value]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :distinct_count,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select
         [[[:sum :distinct_count] :distinct_count] [:data_type :name]],
         :from [:data],
         :nest-by [:data_type :data_type]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :data_type, :x :data_type, :y :distinct_count},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "distinct_count", :x1 "data_type", :x2 "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[:sum :distinct_count] :distinct_count] :data_type :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type :data_type],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :data_type, :y :distinct_count},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :pie-nivo,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[:sum :distinct_count] :value] [:data_type :id]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :field_name, :type "ordinal"},
           :y {:field :field_name, :type "ordinal"},
           :color
           {:field :distinct_count,
            :type "quantitative",
            :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :heatmap-2d,
      :axes {:y "field_name", :color "distinct_count", :x "field_name"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "field_name, distinct_count, field_name",
     :queries
     {:query-preview
      {:select [:field_name :field_name [[[:sum :distinct_count]] :distinct_count]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:field_name :field_name]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:distinct_count :y] [:distinct_count :x] :distinct_count],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:data_type]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :distinct_count,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :scatterplot-nivo-color-size,
      :axes
      {:y "distinct_count",
       :color "data_type",
       :size "distinct_count",
       :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :distinct_count :data_type],
       :from [[:query/fields-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-h-bar-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :data_type}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :distinct_count,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :recharts-line,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:distinct_count :y] [:distinct_count :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :scatterplot-nivo,
      :axes {:y "distinct_count", :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count],
       :from [[:query/fields-sys :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :distinct_count]}}],
            :encoding
            {:color
             {:field :distinct_count,
              :type "quantitative",
              :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :distinct_count] :distinct_count]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :value] [:x-field :day]],
       :from [[:query/fields-sys :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "fields-sys"],
      :shape-name :basic-v-bar,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/fields-sys :subq1]],
       :group-by [:data_type]}}}],
   :rabbit-search-like
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :data_type}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :distinct_count,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :recharts-area,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :distinct_count, :type "quantitative"},
           :y {:field :distinct_count, :type "quantitative"},
           :size {:field :distinct_count, :type "quantitative"},
           :color
           {:field :data_type, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :scatter-plot,
      :axes
      {:y "distinct_count",
       :color "data_type",
       :size "distinct_count",
       :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :distinct_count :data_type],
       :from [[:query/rabbit-search-like :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-h-bar,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :data_type]}}],
            :encoding
            {:color
             {:field :data_type, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "data_type",
     :queries
     {:query-preview
      {:select [:state-field :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :data_type,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :distinct_count] :distinct_count] :data_type],
         :pivot-by [:data_type]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :data_type, :y :distinct_count, :c :data_type},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-v-bar-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :data_type,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :data_type, :y :distinct_count},
        :groupMode "stacked",
        :keys [:distinct_count],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-timeseries,
      :axes {:y "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :x-field],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:distinct_count :y] [:distinct_count :x] :distinct_count],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "distinct_count", :size "distinct_count", :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :distinct_count],
       :from [[:query/rabbit-search-like :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:distinct_count :y] [:distinct_count :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:data_type]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "distinct_count", :color "data_type", :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :data_type],
       :from [[:query/rabbit-search-like :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :data_type}]
        [:>
         :Bar
         {:dataKey :distinct_count,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :recharts-h-bar,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :data_type]}}],
            :encoding
            {:color
             {:field :data_type, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "data_type",
     :queries
     {:query-preview
      {:select [:county-field :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :distinct_count,
             :scale {:scheme "darkmulti"},
             :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :point-map-freq,
      :axes {:color "distinct_count"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :distinct_count] :distinct_count]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/rabbit-search-like :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :distinct_count]}}],
            :encoding
            {:color
             {:field :distinct_count, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :distinct_count] :distinct_count]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :distinct_count, :type "quantitative", :stack "zero"},
           :color
           {:field :data_type, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :stacked-area-chart,
      :axes {:y "distinct_count", :color "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:x-field :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-timeseries-color,
      :axes {:y "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :x-field :color-field],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :recharts-pie,
      :axes {:value "distinct_count", :segment "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[:data_type :name] [[:sum :distinct_count] :value]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :distinct_count,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select
         [[[:sum :distinct_count] :distinct_count] [:data_type :name]],
         :from [:data],
         :nest-by [:data_type :data_type]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :data_type, :x :data_type, :y :distinct_count},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "distinct_count", :x1 "data_type", :x2 "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[:sum :distinct_count] :distinct_count] :data_type :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type :data_type],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :data_type, :y :distinct_count},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :pie-nivo,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[:sum :distinct_count] :value] [:data_type :id]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :table_fields, :type "ordinal"},
           :y {:field :table_fields, :type "ordinal"},
           :color
           {:field :distinct_count,
            :type "quantitative",
            :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :heatmap-2d,
      :axes {:y "table_fields", :color "distinct_count", :x "table_fields"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "table_fields, distinct_count, table_fields",
     :queries
     {:query-preview
      {:select
       [:table_fields :table_fields [[[:sum :distinct_count]] :distinct_count]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:table_fields :table_fields]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:distinct_count :y] [:distinct_count :x] :distinct_count],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:data_type]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :distinct_count,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :scatterplot-nivo-color-size,
      :axes
      {:y "distinct_count",
       :color "data_type",
       :size "distinct_count",
       :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count :distinct_count :data_type],
       :from [[:query/rabbit-search-like :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-h-bar-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :data_type}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :distinct_count,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :recharts-line,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:distinct_count :y] [:distinct_count :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :distinct_count, :y :distinct_count},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :scatterplot-nivo,
      :axes {:y "distinct_count", :x "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, distinct_count",
     :queries
     {:query-preview
      {:select [:distinct_count :distinct_count],
       :from [[:query/rabbit-search-like :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :data_type, :type "ordinal"},
           :y {:aggregate "avg", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :data_type,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "distinct_count", :color "data_type", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type, data_type",
     :queries
     {:query-preview
      {:select [[[[:avg :distinct_count]] :distinct_count] :data_type :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type :data_type]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :distinct_count]}}],
            :encoding
            {:color
             {:field :distinct_count,
              :type "quantitative",
              :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :distinct_count] :distinct_count]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "distinct_count"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :value] [:x-field :day]],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :data_type, :type "ordinal"},
           :x {:aggregate "sum", :field :distinct_count, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "systemh2-db",
     :shape-rotator
     {:context ["systemh2-db" nil "PUBLIC" "rabbit-search-like"],
      :shape-name :basic-v-bar,
      :axes {:y "distinct_count", :x "data_type"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "distinct_count, data_type",
     :queries
     {:query-preview
      {:select [[[[:sum :distinct_count]] :distinct_count] :data_type],
       :from [[:query/rabbit-search-like :subq1]],
       :group-by [:data_type]}}}],
   :ufo_sightings
   [{:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :duration_seconds,
             :scale {:scheme "darkmulti"},
             :type "nominal"},
            :longitude {:field :longitude, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :point-map-colors,
      :axes {:long "longitude", :color "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "longitude, duration_seconds",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :longitude :duration_seconds],
       :from [[:query/ufo_sightings :subq1]]},
      :query-preview-1
      {:select
       [[[:min :longitude] :min-long]
        [[:max :longitude] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :longitude] :a-long]
        [[:round [:raw ["(" [:max :longitude] " - " [:min :longitude] ") * 55"]] 2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/ufo_sightings :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :longitude -1]
        [:<> :longitude nil]]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :date_posted}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :duration_seconds_int,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :recharts-area,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds_int, :type "quantitative"},
           :y {:field :duration_seconds_int, :type "quantitative"},
           :size {:field :duration_seconds_int, :type "quantitative"},
           :color
           {:field :date_posted, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :scatter-plot,
      :axes
      {:y "duration_seconds_int",
       :color "date_posted",
       :size "duration_seconds_int",
       :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name
     "duration_seconds_int, date_posted, duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select
       [:duration_seconds_int
        :duration_seconds_int
        :duration_seconds_int
        :date_posted],
       :from [[:query/ufo_sightings :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds, :type "ordinal"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-h-bar,
      :axes {:y "duration_seconds_int", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :duration_seconds],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :date_posted]}}],
            :encoding
            {:color
             {:field :date_posted, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "date_posted",
     :queries
     {:query-preview
      {:select [:state-field :date_posted],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :duration_seconds,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select
         [[[:sum :duration_seconds_int] :duration_seconds_int] :duration_seconds],
         :pivot-by [:country]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :duration_seconds, :y :duration_seconds_int, :c :country},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "duration_seconds_int", :color "country", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int]
        :duration_seconds
        :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :duration_seconds, :type "ordinal"},
           :x
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-v-bar-color,
      :axes {:y "duration_seconds_int", :color "country", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int]
        :duration_seconds
        :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :duration_seconds,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :duration_seconds, :y :duration_seconds_int},
        :groupMode "stacked",
        :keys [:duration_seconds_int],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "duration_seconds_int", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :duration_seconds],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :date_posted, :type "temporal", :sort "x"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-timeseries,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:duration_seconds_int :y]
          [:duration_seconds_int :x]
          :duration_seconds_int],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :scatterplot-nivo-size,
      :axes
      {:y "duration_seconds_int",
       :size "duration_seconds_int",
       :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select [:duration_seconds_int :duration_seconds_int :duration_seconds_int],
       :from [[:query/ufo_sightings :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :duration_seconds, :type "ordinal"},
           :x
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "duration_seconds_int", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:avg :duration_seconds_int]] :duration_seconds_int] :duration_seconds],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :duration_seconds, :type "ordinal"},
           :x
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "duration_seconds_int", :color "country", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:avg :duration_seconds_int]] :duration_seconds_int]
        :duration_seconds
        :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:duration_seconds_int :y] [:duration_seconds_int :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :scatterplot-nivo-color,
      :axes
      {:y "duration_seconds_int", :color "country", :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds_int",
     :queries
     {:query-preview
      {:select [:duration_seconds_int :duration_seconds_int :country],
       :from [[:query/ufo_sightings :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :date_posted}]
        [:>
         :Bar
         {:dataKey :duration_seconds_int,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :recharts-h-bar,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :date_posted]}}],
            :encoding
            {:color
             {:field :date_posted, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "date_posted",
     :queries
     {:query-preview
      {:select [:county-field :date_posted],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :duration_seconds_int,
             :scale {:scheme "darkmulti"},
             :type "quantitative"},
            :longitude {:field :longitude, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :point-map-freq,
      :axes {:long "longitude", :color "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "longitude, duration_seconds_int",
     :queries
     {:query-preview
      {:select
       [:lat-field :longitude [[:sum :duration_seconds_int] :duration_seconds_int]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:lat-field :longitude]},
      :query-preview-1
      {:select
       [[[:min :longitude] :min-long]
        [[:max :longitude] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :longitude] :a-long]
        [[:round [:raw ["(" [:max :longitude] " - " [:min :longitude] ") * 55"]] 2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/ufo_sightings :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :longitude -1]
        [:<> :longitude nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :duration_seconds_int]}}],
            :encoding
            {:color
             {:field :duration_seconds_int,
              :type "nominal",
              :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :duration_seconds_int] :duration_seconds_int]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds, :type "ordinal"},
           :y
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "duration_seconds_int", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:avg :duration_seconds_int]] :duration_seconds_int] :duration_seconds],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :date_posted, :type "temporal"},
           :y {:field :duration_seconds_int, :type "quantitative", :stack "zero"},
           :color
           {:field :country, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :stacked-area-chart,
      :axes {:y "duration_seconds_int", :color "country", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, date_posted",
     :queries
     {:query-preview
      {:select
       [:date_posted
        [[[:sum :duration_seconds_int]] :duration_seconds_int]
        :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :date_posted, :type "temporal", :sort "x"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :duration_seconds,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-timeseries-color,
      :axes
      {:y "duration_seconds_int", :color "duration_seconds", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int]
        :date_posted
        :duration_seconds],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted :duration_seconds]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :recharts-pie,
      :axes {:value "duration_seconds_int", :segment "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[:country :name] [[:sum :duration_seconds_int] :value]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :duration_seconds_int,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select
         [[[:sum :duration_seconds_int] :duration_seconds_int] [:country :name]],
         :from [:data],
         :nest-by [:country :country]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :country, :x :country, :y :duration_seconds_int},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "duration_seconds_int", :x1 "country", :x2 "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[:sum :duration_seconds_int] :duration_seconds_int] :country :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:country :country],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :country, :y :duration_seconds_int},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :pie-nivo,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[:sum :duration_seconds_int] :value] [:country :id]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color {:field 1, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :longitude, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :point-map,
      :axes {:long "longitude"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "longitude",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :longitude],
       :from [[:query/ufo_sightings :subq1]]},
      :query-preview-1
      {:select
       [[[:min :longitude] :min-long]
        [[:max :longitude] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :longitude] :a-long]
        [[:round [:raw ["(" [:max :longitude] " - " [:min :longitude] ") * 55"]] 2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/ufo_sightings :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :longitude -1]
        [:<> :longitude nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds, :type "ordinal"},
           :y {:field :duration_seconds, :type "ordinal"},
           :color
           {:field :duration_seconds_int,
            :type "quantitative",
            :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :heatmap-2d,
      :axes
      {:y "duration_seconds", :color "duration_seconds_int", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds, duration_seconds_int, duration_seconds",
     :queries
     {:query-preview
      {:select
       [:duration_seconds
        :duration_seconds
        [[[:sum :duration_seconds_int]] :duration_seconds_int]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds :duration_seconds]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:duration_seconds_int :y]
          [:duration_seconds_int :x]
          :duration_seconds_int],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :duration_seconds_int,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :scatterplot-nivo-color-size,
      :axes
      {:y "duration_seconds_int",
       :color "country",
       :size "duration_seconds_int",
       :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name
     "duration_seconds_int, country, duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select
       [:duration_seconds_int :duration_seconds_int :duration_seconds_int :country],
       :from [[:query/ufo_sightings :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds, :type "ordinal"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-h-bar-color,
      :axes {:y "duration_seconds_int", :color "country", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int]
        :duration_seconds
        :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds :country]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :date_posted}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :duration_seconds_int,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :recharts-line,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:duration_seconds_int :y] [:duration_seconds_int :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :scatterplot-nivo,
      :axes {:y "duration_seconds_int", :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select [:duration_seconds_int :duration_seconds_int],
       :from [[:query/ufo_sightings :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds, :type "ordinal"},
           :y
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "duration_seconds_int", :color "country", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:avg :duration_seconds_int]] :duration_seconds_int]
        :duration_seconds
        :country],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :duration_seconds_int]}}],
            :encoding
            {:color
             {:field :duration_seconds_int,
              :type "quantitative",
              :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :duration_seconds_int] :duration_seconds_int]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select [[[[:sum :duration_seconds_int]] :value] [:date_posted :day]],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :duration_seconds, :type "ordinal"},
           :x
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "ufo_sightings"],
      :shape-name :basic-v-bar,
      :axes {:y "duration_seconds_int", :x "duration_seconds"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :duration_seconds],
       :from [[:query/ufo_sightings :subq1]],
       :group-by [:duration_seconds]}}}]},
  [:block-3871 :queries :all-ufo-sightings-1 :field :shape]
  [{:h 6,
    :w 9,
    :selected-view :reech,
    :views
    {:reech
     [:>
      :ResponsiveContainer
      {:width "100%", :height :panel-height+50}
      [:>
       :ComposedChart
       {:margin {:top 5, :bottom 5, :right 30, :left 20}}
       [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
       [:>
        :Tooltip
        {:contentStyle {:backgroundColor "#00000099", :border "none"},
         :itemStyle {:color "#ecf0f1"},
         :labelStyle {:color "#3498db"}}]
       [:> :XAxis {:dataKey :shape}]
       [:>
        :Area
        {:type "monotone",
         :data :query-preview,
         :dataKey :rrows,
         :stroke "#8884d8",
         :activeDot {:r 8},
         :on-click [:set-recharts-param>]}]]]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :recharts-area,
     :axes {:y "rrows", :x "shape"},
     :items [[:views :reech] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, shape",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :shape],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:shape]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :rrows, :type "quantitative"},
          :y {:field :duration_seconds_int, :type "quantitative"},
          :size {:field :duration_seconds_int, :type "quantitative"},
          :color {:field :shape, :type "nominal", :scale {:scheme "category10"}}},
         :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :scatter-plot,
     :axes
     {:y "duration_seconds_int",
      :color "shape",
      :size "duration_seconds_int",
      :x "rrows"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "duration_seconds_int, shape, duration_seconds_int, rrows",
    :queries
    {:query-preview
     {:select [:rrows :duration_seconds_int :duration_seconds_int :shape],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]]}}}
   {:h 5,
    :w 9,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :country, :type "ordinal"},
          :y {:aggregate "sum", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :legend nil,
           :field 1,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-h-bar,
     :axes {:y "rrows", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:nivo-bar-chart
      {:labelTextColor "#423939",
       :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
       :indexBy :shape,
       :layout "vertical",
       :enableLabel true,
       :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
       :inner-padding 0,
       :width :panel-width+70,
       :colors :theme/vega-default-color-scheme,
       :transformation-map
       {:transform-select [[[:sum :rrows] :rrows] :shape], :pivot-by [:country]},
       :theme :theme/nivo-defaults,
       :colorBy "id",
       :click {:x :shape, :y :rrows, :c :country},
       :groupMode "stacked",
       :padding 0.1,
       :enableGridX false,
       :border-radius 2,
       :enableGridY false,
       :height :panel-height+50,
       :margin {:top 5, :right 5, :bottom 50, :left 45},
       :data :query-preview}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-h-bar-nivo-color,
     :axes {:y "rrows", :color "country", :x "shape"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country, shape",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :shape :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:shape :country]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:y {:field :country, :type "ordinal"},
          :x {:aggregate "sum", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :field :country,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-v-bar-color,
     :axes {:y "rrows", :color "country", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country, country",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :country :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country :country]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:nivo-bar-chart
      {:labelTextColor "#423939",
       :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
       :indexBy :shape,
       :layout "vertical",
       :enableLabel false,
       :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
       :inner-padding 0,
       :width :panel-width+70,
       :colors :theme/vega-default-color-scheme,
       :theme :theme/nivo-defaults,
       :colorBy "id",
       :click {:x :shape, :y :rrows},
       :groupMode "stacked",
       :keys [:rrows],
       :padding 0.1,
       :enableGridX false,
       :border-radius 2,
       :enableGridY false,
       :height :panel-height+50,
       :margin {:top 5, :right 5, :bottom 50, :left 45},
       :data :query-preview}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-h-bar-nivo,
     :axes {:y "rrows", :x "shape"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, shape",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :shape],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:shape]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :date_posted, :type "temporal", :sort "x"},
          :y {:aggregate "sum", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :legend nil,
           :field nil,
           :type "ordinal"}},
         :mark
         {:type "area",
          :interpolate "monotone",
          :point "transparent",
          :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-timeseries,
     :axes {:y "rrows", :x "date_posted"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, date_posted",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :date_posted],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:date_posted]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:y {:field :country, :type "ordinal"},
          :x {:aggregate "avg", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :legend nil,
           :field 1,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-v-bar-avg,
     :axes {:y "rrows", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country",
    :queries
    {:query-preview
     {:select [[[[:avg :rrows]] :rrows] :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:y {:field :country, :type "ordinal"},
          :x {:aggregate "avg", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :field :country,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-v-bar-avg-color,
     :axes {:y "rrows", :color "country", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country, country",
    :queries
    {:query-preview
     {:select [[[[:avg :rrows]] :rrows] :country :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country :country]}}}
   {:h 5,
    :w 8,
    :selected-view :reech,
    :views
    {:reech
     [:>
      :ResponsiveContainer
      {:width "100%", :height :panel-height+50}
      [:>
       :ComposedChart
       {:margin {:top 5, :bottom 5, :right 30, :left 20}}
       [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
       [:>
        :Tooltip
        {:contentStyle {:backgroundColor "#00000099", :border "none"},
         :itemStyle {:color "#ecf0f1"},
         :labelStyle {:color "#3498db"}}]
       [:> :XAxis {:dataKey :shape}]
       [:>
        :Bar
        {:dataKey :rrows,
         :data :query-preview,
         :stroke "#8884d8",
         :fill "#8884d8",
         :on-click [:set-recharts-param>]}]]]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :recharts-h-bar,
     :axes {:y "rrows", :x "shape"},
     :items [[:views :reech] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, shape",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :shape],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:shape]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :country, :type "ordinal"},
          :y {:aggregate "avg", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :legend nil,
           :field 1,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-h-bar-avg,
     :axes {:y "rrows", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country",
    :queries
    {:query-preview
     {:select [[[[:avg :rrows]] :rrows] :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :date_posted, :type "temporal", :sort "x"},
          :y {:aggregate "sum", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :legend nil,
           :field :shape,
           :type "ordinal"}},
         :mark
         {:type "line",
          :interpolate "monotone",
          :point "transparent",
          :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-timeseries-color,
     :axes {:y "rrows", :color "shape", :x "date_posted"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, shape, date_posted",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :date_posted :shape],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:date_posted :shape]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :shape, :type "ordinal"},
          :y {:field :shape, :type "ordinal"},
          :color {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
         :mark {:type "rect", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :heatmap-2d,
     :axes {:y "shape", :color "rrows", :x "shape"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "shape, rrows, shape",
    :queries
    {:query-preview
     {:select [:shape :shape [[:count 1] :rrows]],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:shape :shape]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :country, :type "ordinal"},
          :y {:aggregate "sum", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :field :country,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-h-bar-color,
     :axes {:y "rrows", :color "country", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country, country",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :country :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country :country]}}}
   {:h 5,
    :w 8,
    :selected-view :reech,
    :views
    {:reech
     [:>
      :ResponsiveContainer
      {:width "100%", :height :panel-height+50}
      [:>
       :ComposedChart
       {:margin {:top 5, :bottom 5, :right 30, :left 20}}
       [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
       [:>
        :Tooltip
        {:contentStyle {:backgroundColor "#00000099", :border "none"},
         :itemStyle {:color "#ecf0f1"},
         :labelStyle {:color "#3498db"}}]
       [:> :XAxis {:dataKey :shape}]
       [:>
        :Line
        {:type "monotone",
         :data :query-preview,
         :dataKey :rrows,
         :stroke "#8884d8",
         :activeDot {:r 8},
         :on-click [:set-recharts-param>]}]]]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :recharts-line,
     :axes {:y "rrows", :x "shape"},
     :items [[:views :reech] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, shape",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :shape],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:shape]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:x {:field :country, :type "ordinal"},
          :y {:aggregate "avg", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :field :country,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-h-bar-avg-color,
     :axes {:y "rrows", :color "country", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country, country",
    :queries
    {:query-preview
     {:select [[[[:avg :rrows]] :rrows] :country :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country :country]}}}
   {:h 5,
    :w 8,
    :views
    {:oz
     [:vega-lite
      {:layer
       [{:encoding
         {:y {:field :country, :type "ordinal"},
          :x {:aggregate "sum", :field :rrows, :type "quantitative"},
          :row {:field nil, :legend nil},
          :size {:legend nil},
          :shape {:legend nil},
          :column {:field nil, :legend nil},
          :color
          {:scale :theme/vega-default-color-scheme,
           :legend nil,
           :field 1,
           :type "ordinal"}},
         :mark {:type "bar", :tooltip {:content "encoding"}}}],
       :data {:values :query-preview},
       :config :theme/vega-defaults,
       :width "container",
       :height :panel-height,
       :padding 4,
       :background "transparent"}
      {:actions false}]},
    :connection-id "bigfoot-ufos",
    :shape-rotator
    {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
     :shape-name :basic-v-bar,
     :axes {:y "rrows", :x "country"},
     :items [[:views :oz] [:queries :query-preview]],
     :source-panel :block-3871},
    :name "rrows, country",
    :queries
    {:query-preview
     {:select [[[:count 1] :rrows] :country],
      :from
      [[{:select
         [:shape
          :city
          :id
          :state
          :date_posted
          :duration_seconds_int
          :duration_hours
          :comments
          :datetime
          :country
          :longitude
          :duration_seconds
          :latitude],
         :from [[:ufo_sightings :ssb99]]}
        :subq1]],
      :group-by [:country]}}}],
  :block-3871
  {:all-ufo-sightings-1
   [{:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color {:field :shape, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :longitude, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :point-map-colors,
      :axes {:long "longitude", :color "shape"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "longitude, shape",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :longitude :shape],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]},
      :query-preview-1
      {:select
       [[[:min :longitude] :min-long]
        [[:max :longitude] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :longitude] :a-long]
        [[:round [:raw ["(" [:max :longitude] " - " [:min :longitude] ") * 55"]] 2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :longitude -1]
        [:<> :longitude nil]]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :date_posted}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :duration_seconds_int,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :recharts-area,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :duration_seconds_int, :type "quantitative"},
           :y {:field :duration_seconds_int, :type "quantitative"},
           :size {:field :duration_seconds_int, :type "quantitative"},
           :color
           {:field :date_posted, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :scatter-plot,
      :axes
      {:y "duration_seconds_int",
       :color "date_posted",
       :size "duration_seconds_int",
       :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name
     "duration_seconds_int, date_posted, duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select
       [:duration_seconds_int
        :duration_seconds_int
        :duration_seconds_int
        :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-h-bar,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[[:sum :duration_seconds_int]] :duration_seconds_int] :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :date_posted]}}],
            :encoding
            {:color
             {:field :date_posted, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "date_posted",
     :queries
     {:query-preview
      {:select [:state-field :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :country,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select
         [[[:sum :duration_seconds_int] :duration_seconds_int] :country],
         :pivot-by [:country]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :country, :y :duration_seconds_int, :c :country},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "duration_seconds_int", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :country :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "duration_seconds_int", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :country :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :country,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :country, :y :duration_seconds_int},
        :groupMode "stacked",
        :keys [:duration_seconds_int],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[[:sum :duration_seconds_int]] :duration_seconds_int] :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :date_posted, :type "temporal", :sort "x"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-timeseries,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:duration_seconds_int :y]
          [:duration_seconds_int :x]
          :duration_seconds_int],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :scatterplot-nivo-size,
      :axes
      {:y "duration_seconds_int",
       :size "duration_seconds_int",
       :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select [:duration_seconds_int :duration_seconds_int :duration_seconds_int],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[[:avg :duration_seconds_int]] :duration_seconds_int] :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "duration_seconds_int", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[[:avg :duration_seconds_int]] :duration_seconds_int] :country :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:duration_seconds_int :y] [:duration_seconds_int :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :scatterplot-nivo-color,
      :axes
      {:y "duration_seconds_int", :color "country", :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, duration_seconds_int",
     :queries
     {:query-preview
      {:select [:duration_seconds_int :duration_seconds_int :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :date_posted}]
        [:>
         :Bar
         {:dataKey :duration_seconds_int,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :recharts-h-bar,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :date_posted]}}],
            :encoding
            {:color
             {:field :date_posted, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "date_posted",
     :queries
     {:query-preview
      {:select [:county-field :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :duration_seconds_int,
             :scale {:scheme "darkmulti"},
             :type "quantitative"},
            :longitude {:field :longitude, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :point-map-freq,
      :axes {:long "longitude", :color "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "longitude, duration_seconds_int",
     :queries
     {:query-preview
      {:select
       [:lat-field :longitude [[:sum :duration_seconds_int] :duration_seconds_int]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:lat-field :longitude]},
      :query-preview-1
      {:select
       [[[:min :longitude] :min-long]
        [[:max :longitude] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :longitude] :a-long]
        [[:round [:raw ["(" [:max :longitude] " - " [:min :longitude] ") * 55"]] 2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :longitude -1]
        [:<> :longitude nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :duration_seconds_int]}}],
            :encoding
            {:color
             {:field :duration_seconds_int,
              :type "nominal",
              :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :duration_seconds_int] :duration_seconds_int]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[[:avg :duration_seconds_int]] :duration_seconds_int] :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :date_posted, :type "temporal"},
           :y {:field :duration_seconds_int, :type "quantitative", :stack "zero"},
           :color
           {:field :country, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :stacked-area-chart,
      :axes {:y "duration_seconds_int", :color "country", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, date_posted",
     :queries
     {:query-preview
      {:select
       [:date_posted
        [[[:sum :duration_seconds_int]] :duration_seconds_int]
        :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :date_posted, :type "temporal", :sort "x"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :shape,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "duration_seconds_int", :color "shape", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, shape, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted :shape],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted :shape]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :recharts-pie,
      :axes {:value "duration_seconds_int", :segment "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[:country :name] [[:sum :duration_seconds_int] :value]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :duration_seconds_int,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select
         [[[:sum :duration_seconds_int] :duration_seconds_int] [:country :name]],
         :from [:data],
         :nest-by [:country :country]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :country, :x :country, :y :duration_seconds_int},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "duration_seconds_int", :x1 "country", :x2 "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[:sum :duration_seconds_int] :duration_seconds_int] :country :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country :country],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :country, :y :duration_seconds_int},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :pie-nivo,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[:sum :duration_seconds_int] :value] [:country :id]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color {:field 1, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :longitude, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :point-map,
      :axes {:long "longitude"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "longitude",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :longitude],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]},
      :query-preview-1
      {:select
       [[[:min :longitude] :min-long]
        [[:max :longitude] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :longitude] :a-long]
        [[:round [:raw ["(" [:max :longitude] " - " [:min :longitude] ") * 55"]] 2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :longitude -1]
        [:<> :longitude nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :shape, :type "ordinal"},
           :y {:field :shape, :type "ordinal"},
           :color
           {:field :duration_seconds_int,
            :type "quantitative",
            :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :heatmap-2d,
      :axes {:y "shape", :color "duration_seconds_int", :x "shape"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "shape, duration_seconds_int, shape",
     :queries
     {:query-preview
      {:select
       [:shape :shape [[[:sum :duration_seconds_int]] :duration_seconds_int]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:shape :shape]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select
         [[:duration_seconds_int :y]
          [:duration_seconds_int :x]
          :duration_seconds_int],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :duration_seconds_int,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes
      {:y "duration_seconds_int",
       :color "country",
       :size "duration_seconds_int",
       :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name
     "duration_seconds_int, country, duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select
       [:duration_seconds_int :duration_seconds_int :duration_seconds_int :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "duration_seconds_int", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :country :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :date_posted}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :duration_seconds_int,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :recharts-line,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select
       [[[[:sum :duration_seconds_int]] :duration_seconds_int] :date_posted],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:duration_seconds_int :y] [:duration_seconds_int :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :duration_seconds_int, :y :duration_seconds_int},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "duration_seconds_int", :x "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, duration_seconds_int",
     :queries
     {:query-preview
      {:select [:duration_seconds_int :duration_seconds_int],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y
           {:aggregate "avg", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "duration_seconds_int", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country, country",
     :queries
     {:query-preview
      {:select
       [[[[:avg :duration_seconds_int]] :duration_seconds_int] :country :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :duration_seconds_int]}}],
            :encoding
            {:color
             {:field :duration_seconds_int,
              :type "quantitative",
              :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "duration_seconds_int"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :duration_seconds_int] :duration_seconds_int]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "duration_seconds_int", :x "date_posted"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, date_posted",
     :queries
     {:query-preview
      {:select [[[[:sum :duration_seconds_int]] :value] [:date_posted :day]],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:date_posted]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x
           {:aggregate "sum", :field :duration_seconds_int, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "all-ufo-sightings-1"],
      :shape-name :basic-v-bar,
      :axes {:y "duration_seconds_int", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "duration_seconds_int, country",
     :queries
     {:query-preview
      {:select [[[[:sum :duration_seconds_int]] :duration_seconds_int] :country],
       :from
       [[{:select
          [:shape
           :city
           :id
           :state
           :date_posted
           :duration_seconds_int
           :duration_hours
           :comments
           :datetime
           :country
           :longitude
           :duration_seconds
           :latitude],
          :from [[:ufo_sightings :ssb99]]}
         :subq1]],
       :group-by [:country]}}}]},
  :block-889
  {:gen-viz-824
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :country}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :country, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "country", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :country]}}],
            :encoding
            {:color {:field :country, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "country",
     :queries
     {:query-preview
      {:select [:state-field :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :country,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :country], :pivot-by [:country]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :country, :y :rrows, :c :country},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :country,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :country, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "country", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :country}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :country]}}],
            :encoding
            {:color {:field :country, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "country",
     :queries
     {:query-preview
      {:select [:county-field :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :country, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[:country :name] [[:count 1] :value]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:country :name]],
         :from [:data],
         :nest-by [:country :country]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :country, :x :country, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "country", :x2 "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :country, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:country :id]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :heatmap-2d,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "country", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :country}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}]},
  :block-316
  {:gen-viz-123
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :country}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :country, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "country", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :country]}}],
            :encoding
            {:color {:field :country, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "country",
     :queries
     {:query-preview
      {:select [:state-field :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :country,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :country], :pivot-by [:country]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :country, :y :rrows, :c :country},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :country,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :country, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "country", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :country}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :country]}}],
            :encoding
            {:color {:field :country, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "country",
     :queries
     {:query-preview
      {:select [:county-field :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :country, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[:country :name] [[:count 1] :value]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:country :name]],
         :from [:data],
         :nest-by [:country :country]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :country, :x :country, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "country", :x2 "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :country, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:country :id]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :heatmap-2d,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:country]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "country", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :country}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "country"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :country, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :country,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "country", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country, country",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :country :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country :country]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :country, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "bigfoot-ufos",
     :shape-rotator
     {:context ["bigfoot-ufos" nil "none" "gen-viz-123"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "country"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, country",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :country],
       :from
       [[{:select [[[:count 1] :rrows] :country],
          :from
          [[{:select
             [:shape
              :city
              :id
              :state
              :date_posted
              :duration_seconds_int
              :duration_hours
              :comments
              :datetime
              :country
              :longitude
              :duration_seconds
              :latitude],
             :from [[:ufo_sightings :ssb99]]}
            :subq1]],
          :group-by [:country]}
         :subq1]],
       :group-by [:country]}}}]},
  :block-7831
  {:query1
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :color "category", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :category],
       :from [[:query/query1 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:state-field :category],
       :from [[:query/query1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :category],
         :pivot-by [:category]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :rowcnt, :c :category},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/query1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt], :from [[:query/query1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :color "category", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :category], :from [[:query/query1 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:county-field :category],
       :from [[:query/query1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/query1 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/query1 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/query1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt", :color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:x-field :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/query1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt", :segment "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[:category :name] [[:sum :rowcnt] :value]],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:category :name]],
         :from [:data],
         :nest-by [:category :category]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :category, :x :category, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt", :x1 "category", :x2 "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :category :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category :category],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :category, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:category :id]],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/query1 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :color "category", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :category],
       :from [[:query/query1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview {:select [:rowcnt :rowcnt], :from [[:query/query1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/query1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/query1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/query1 :subq1]],
       :group-by [:category]}}}]},
  :block-488
  {:gen-viz-959-1
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :profit,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :recharts-area,
      :axes {:y "profit", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :profit, :type "quantitative"},
           :y {:field :profit, :type "quantitative"},
           :size {:field :profit, :type "quantitative"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :scatter-plot,
      :axes {:y "profit", :color "category", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit :category],
       :from [[:query/gen-viz-959-1 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-h-bar,
      :axes {:y "profit", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:state-field :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :profit] :profit] :category],
         :pivot-by [:category]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :profit, :c :category},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "profit", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "profit", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :profit},
        :groupMode "stacked",
        :keys [:profit],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "profit", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-timeseries,
      :axes {:y "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :x-field],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x] :profit],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "profit", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit], :from [[:query/gen-viz-959-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "profit", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "profit", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :category :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "profit", :color "category", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :category], :from [[:query/gen-viz-959-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Bar
         {:dataKey :profit,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :recharts-h-bar,
      :axes {:y "profit", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:county-field :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :profit, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :point-map-freq,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :profit] :profit]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :profit]}}],
            :encoding
            {:color {:field :profit, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :profit] :profit]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "profit", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :profit, :type "quantitative", :stack "zero"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :stacked-area-chart,
      :axes {:y "profit", :color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:x-field :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :x-field :color-field],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :recharts-pie,
      :axes {:value "profit", :segment "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[:category :name] [[:sum :profit] :value]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :profit,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :profit] :profit] [:category :name]],
         :from [:data],
         :nest-by [:category :category]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :category, :x :category, :y :profit},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "profit", :x1 "category", :x2 "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, category",
     :queries
     {:query-preview
      {:select [[[:sum :profit] :profit] :category :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category :category],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :category, :y :profit},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :pie-nivo,
      :axes {:y "profit", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[:sum :profit] :value] [:category :id]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :profit, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :heatmap-2d,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :profit]] :profit]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x] :profit],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :profit,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "profit", :color "category", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit :category],
       :from [[:query/gen-viz-959-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "profit", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :profit,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :recharts-line,
      :axes {:y "profit", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit], :from [[:query/gen-viz-959-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "profit", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :category :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :profit]}}],
            :encoding
            {:color
             {:field :profit, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :profit] :profit]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :value] [:x-field :day]],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959-1"],
      :shape-name :basic-v-bar,
      :axes {:y "profit", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :category],
       :from [[:query/gen-viz-959-1 :subq1]],
       :group-by [:category]}}}]},
  :block-689
  {:gen-viz-959
   [{:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :sub_category, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :point-map-colors,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :long-field :sub_category],
       :from [[:query/gen-viz-959 :subq1]]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-959 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :sub_category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "sub_category", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :sub_category],
       :from [[:query/gen-viz-959 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:state-field :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :sub_category],
         :pivot-by [:color-field]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :rrows, :c :color-field},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/gen-viz-959 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :color-field], :from [[:query/gen-viz-959 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:county-field :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-959 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :color-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :sub_category,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows", :color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:x-field :sub_category]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :recharts-pie,
      :axes {:value "rrows"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[:segment-field :name] [[:count 1] :value]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:segment-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:x2-field :name]],
         :from [:data],
         :nest-by [:x1-field :x2-field]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :x1-field, :x :x2-field, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x1-field :x2-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:x1-field :x2-field],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :x-field, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :pie-nivo,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :id]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:field :sub_category, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :heatmap-2d,
      :axes {:y "sub_category", :color "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category, rrows, sub_category",
     :queries
     {:query-preview
      {:select [:sub_category :sub_category [[:count 1] :rrows]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :color-field],
       :from [[:query/gen-viz-959 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows], :from [[:query/gen-viz-959 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-959"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-959 :subq1]],
       :group-by [:sub_category]}}}]},
  :block-8193
  {:agg-grouped-all-superstore-1
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :x-field],
         :pivot-by [:color-field]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :rowcnt, :c :color-field},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[:segment-field :name] [[:sum :rowcnt] :value]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:segment-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:x2-field :name]],
         :from [:data],
         :nest-by [:x1-field :x2-field]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :x1-field, :x :x2-field, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :x1-field :x2-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x1-field :x2-field],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :x-field, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:x-field :id]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore-1"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}]},
  :block-6676
  {:grouped-all-superstore-1
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :segment}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color
           {:field :segment, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :color "segment", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :segment]}}],
            :encoding
            {:color {:field :segment, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "segment",
     :queries
     {:query-preview
      {:select [:state-field :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :segment,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :segment],
         :pivot-by [:segment]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :segment, :y :rowcnt, :c :segment},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :segment,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :segment, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt],
       :from [[:query/grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :segment :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:segment]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :color "segment", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :segment}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :segment]}}],
            :encoding
            {:color {:field :segment, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "segment",
     :queries
     {:query-preview
      {:select [:county-field :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :segment, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt", :color "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt", :segment "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[:segment :name] [[:sum :rowcnt] :value]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:segment :name]],
         :from [:data],
         :nest-by [:segment :segment]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :segment, :x :segment, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt", :x1 "segment", :x2 "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, segment",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :segment :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment :segment],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :segment, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:segment :id]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:segment]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :color "segment", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :segment}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt],
       :from [[:query/grouped-all-superstore-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :segment :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore-1"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, segment",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :segment],
       :from [[:query/grouped-all-superstore-1 :subq1]],
       :group-by [:segment]}}}]},
  :block-173
  {:gen-viz-1048
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :ship_mode}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :quantity,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :recharts-area,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :quantity, :type "quantitative"},
           :y {:field :quantity, :type "quantitative"},
           :size {:field :quantity, :type "quantitative"},
           :color
           {:field :ship_mode, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :scatter-plot,
      :axes {:y "quantity", :color "ship_mode", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-h-bar,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :ship_mode]}}],
            :encoding
            {:color
             {:field :ship_mode, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "ship_mode",
     :queries
     {:query-preview
      {:select [:state-field :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :ship_mode,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :quantity] :quantity] :ship_mode],
         :pivot-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :ship_mode, :y :quantity, :c :ship_mode},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "quantity", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-v-bar-color,
      :axes {:y "quantity", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :ship_mode,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :ship_mode, :y :quantity},
        :groupMode "stacked",
        :keys [:quantity],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-timeseries,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x] :quantity],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "quantity", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity],
       :from [[:query/gen-viz-1048 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "quantity", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :ship_mode :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "quantity", :color "ship_mode", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :ship_mode}]
        [:>
         :Bar
         {:dataKey :quantity,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :recharts-h-bar,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :ship_mode]}}],
            :encoding
            {:color
             {:field :ship_mode, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "ship_mode",
     :queries
     {:query-preview
      {:select [:county-field :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :quantity, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :point-map-freq,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :quantity] :quantity]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-1048 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :quantity]}}],
            :encoding
            {:color
             {:field :quantity, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :quantity] :quantity]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :quantity, :type "quantitative", :stack "zero"},
           :color
           {:field :ship_mode, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :stacked-area-chart,
      :axes {:y "quantity", :color "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:x-field :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-timeseries-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field :color-field],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :recharts-pie,
      :axes {:value "quantity", :segment "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[:ship_mode :name] [[:sum :quantity] :value]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :quantity,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :quantity] :quantity] [:ship_mode :name]],
         :from [:data],
         :nest-by [:ship_mode :ship_mode]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :ship_mode, :x :ship_mode, :y :quantity},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "quantity", :x1 "ship_mode", :x2 "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[:sum :quantity] :quantity] :ship_mode :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode :ship_mode],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :ship_mode, :y :quantity},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :pie-nivo,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[:sum :quantity] :value] [:ship_mode :id]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :quantity, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :heatmap-2d,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :quantity]] :quantity]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x] :quantity],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :quantity,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "quantity", :color "ship_mode", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-h-bar-color,
      :axes {:y "quantity", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :ship_mode}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :quantity,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :recharts-line,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :scatterplot-nivo,
      :axes {:y "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity], :from [[:query/gen-viz-1048 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "quantity", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :ship_mode :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :quantity]}}],
            :encoding
            {:color
             {:field :quantity, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :quantity] :quantity]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :value] [:x-field :day]],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-1048"],
      :shape-name :basic-v-bar,
      :axes {:y "quantity", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :ship_mode],
       :from [[:query/gen-viz-1048 :subq1]],
       :group-by [:ship_mode]}}}]},
  :block-10955
  {:agg-all-superstore
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :quantity,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :recharts-area,
      :axes {:y "quantity"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :quantity, :type "quantitative"},
           :y {:field :quantity, :type "quantitative"},
           :size {:field :quantity, :type "quantitative"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :scatter-plot,
      :axes {:y "quantity", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity :color-field],
       :from [[:query/agg-all-superstore :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-h-bar,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :quantity] :quantity] :x-field],
         :pivot-by [:color-field]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :quantity, :c :color-field},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-v-bar-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :quantity},
        :groupMode "stacked",
        :keys [:quantity],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-timeseries,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x] :quantity],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "quantity", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity],
       :from [[:query/agg-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :x-field :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :color-field],
       :from [[:query/agg-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Bar
         {:dataKey :quantity,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :recharts-h-bar,
      :axes {:y "quantity"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :quantity, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :point-map-freq,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :quantity] :quantity]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/agg-all-superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :quantity]}}],
            :encoding
            {:color
             {:field :quantity, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :quantity] :quantity]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :quantity, :type "quantitative", :stack "zero"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :stacked-area-chart,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :quantity]] :quantity] :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-timeseries-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :recharts-pie,
      :axes {:value "quantity"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[:segment-field :name] [[:sum :quantity] :value]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:segment-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :quantity,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :quantity] :quantity] [:x2-field :name]],
         :from [:data],
         :nest-by [:x1-field :x2-field]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :x1-field, :x :x2-field, :y :quantity},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[:sum :quantity] :quantity] :x1-field :x2-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x1-field :x2-field],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :x-field, :y :quantity},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :pie-nivo,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[:sum :quantity] :value] [:x-field :id]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :quantity, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :heatmap-2d,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :quantity]] :quantity]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x] :quantity],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :quantity,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "quantity", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity :color-field],
       :from [[:query/agg-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-h-bar-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :quantity,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :recharts-line,
      :axes {:y "quantity"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :scatterplot-nivo,
      :axes {:y "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity], :from [[:query/agg-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :x-field :color-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :quantity]}}],
            :encoding
            {:color
             {:field :quantity, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :quantity] :quantity]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :value] [:x-field :day]],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-all-superstore"],
      :shape-name :basic-v-bar,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/agg-all-superstore :subq1]],
       :group-by [:x-field]}}}]},
  :block-10081
  {:grouped-all-superstore
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :color "category", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :category],
       :from [[:query/grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:state-field :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :category],
         :pivot-by [:category]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :rowcnt, :c :category},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt],
       :from [[:query/grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :color "category", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :category],
       :from [[:query/grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:county-field :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/grouped-all-superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt", :color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:x-field :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt", :segment "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[:category :name] [[:sum :rowcnt] :value]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:category :name]],
         :from [:data],
         :nest-by [:category :category]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :category, :x :category, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt", :x1 "category", :x2 "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :category :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category :category],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :category, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:category :id]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :color "category", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :category],
       :from [[:query/grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt], :from [[:query/grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :category :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "grouped-all-superstore"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, category",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :category],
       :from [[:query/grouped-all-superstore :subq1]],
       :group-by [:category]}}}]},
  :block-172
  {:gen-viz-949
   [{:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :sub_category, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :point-map-colors,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :long-field :sub_category],
       :from [[:query/gen-viz-949 :subq1]]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-949 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :sub_category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "sub_category", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :sub_category],
       :from [[:query/gen-viz-949 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:state-field :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :sub_category],
         :pivot-by [:color-field]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :rrows, :c :color-field},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/gen-viz-949 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :color-field], :from [[:query/gen-viz-949 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:county-field :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-949 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :color-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :sub_category,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows", :color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:x-field :sub_category]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :recharts-pie,
      :axes {:value "rrows"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[:segment-field :name] [[:count 1] :value]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:segment-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:x2-field :name]],
         :from [:data],
         :nest-by [:x1-field :x2-field]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :x1-field, :x :x2-field, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x1-field :x2-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:x1-field :x2-field],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :x-field, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :pie-nivo,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :id]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:field :sub_category, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :heatmap-2d,
      :axes {:y "sub_category", :color "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category, rrows, sub_category",
     :queries
     {:query-preview
      {:select [:sub_category :sub_category [[:count 1] :rrows]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :color-field],
       :from [[:query/gen-viz-949 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows], :from [[:query/gen-viz-949 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :sub_category :color-field],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-949"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, sub_category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :sub_category],
       :from [[:query/gen-viz-949 :subq1]],
       :group-by [:sub_category]}}}]},
  :block-1400
  {:query1-1
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :region}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color {:field :region, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :color "region", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :region],
       :from [[:query/query1-1 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :region, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :region]}}],
            :encoding
            {:color {:field :region, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "region",
     :queries
     {:query-preview
      {:select [:state-field :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :region,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :region], :pivot-by [:region]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :region, :y :rowcnt, :c :region},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt", :color "region", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region :region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :region, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :region,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt", :color "region", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region :region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :region,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :region, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/query1-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt], :from [[:query/query1-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :region, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :region, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :region,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt", :color "region", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, region",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :region :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region :region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:region]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :color "region", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :region], :from [[:query/query1-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :region}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :region]}}],
            :encoding
            {:color {:field :region, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "region",
     :queries
     {:query-preview
      {:select [:county-field :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/query1-1 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :region, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :region, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt", :color "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:x-field :region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/query1-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt", :segment "region"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[:region :name] [[:sum :rowcnt] :value]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:region :name]],
         :from [:data],
         :nest-by [:region :region]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :region, :x :region, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt", :x1 "region", :x2 "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, region",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :region :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region :region],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :region, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:region :id]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:region]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :color "region", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :region],
       :from [[:query/query1-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :region, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :region,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt", :color "region", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region :region]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :region}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview {:select [:rowcnt :rowcnt], :from [[:query/query1-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :region, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :region,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt", :color "region", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region, region",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :region :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region :region]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/query1-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :region, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "query1-1"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt", :x "region"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, region",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :region],
       :from [[:query/query1-1 :subq1]],
       :group-by [:region]}}}]},
  :block-609
  {:gen-viz-756-1
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :segment}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :segment, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "segment", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :segment],
       :from [[:query/gen-viz-756-1 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :segment]}}],
            :encoding
            {:color {:field :segment, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "segment",
     :queries
     {:query-preview
      {:select [:state-field :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :segment,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :segment], :pivot-by [:segment]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :segment, :y :rrows, :c :segment},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :segment,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :segment, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/gen-viz-756-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :segment :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:segment]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "segment", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :segment], :from [[:query/gen-viz-756-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :segment}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :segment]}}],
            :encoding
            {:color {:field :segment, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "segment",
     :queries
     {:query-preview
      {:select [:county-field :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :segment, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:x-field :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[:segment :name] [[:count 1] :value]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:segment :name]],
         :from [:data],
         :nest-by [:segment :segment]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :segment, :x :segment, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "segment", :x2 "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment :segment],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :segment, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:segment :id]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :heatmap-2d,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:segment]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "segment", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :segment],
       :from [[:query/gen-viz-756-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :segment}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows], :from [[:query/gen-viz-756-1 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :segment, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :segment,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "segment", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment, segment",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :segment :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment :segment]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :segment, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756-1"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "segment"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, segment",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :segment],
       :from [[:query/gen-viz-756-1 :subq1]],
       :group-by [:segment]}}}]},
  :block-653
  {:gen-viz-756
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :ship_mode}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :ship_mode, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "ship_mode", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :ship_mode],
       :from [[:query/gen-viz-756 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :ship_mode]}}],
            :encoding
            {:color
             {:field :ship_mode, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "ship_mode",
     :queries
     {:query-preview
      {:select [:state-field :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :ship_mode,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :ship_mode],
         :pivot-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :ship_mode, :y :rrows, :c :ship_mode},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :ship_mode,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :ship_mode, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/gen-viz-756 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :ship_mode :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "ship_mode", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :ship_mode], :from [[:query/gen-viz-756 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :ship_mode}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :ship_mode]}}],
            :encoding
            {:color
             {:field :ship_mode, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "ship_mode",
     :queries
     {:query-preview
      {:select [:county-field :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-756 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :ship_mode, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:x-field :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[:ship_mode :name] [[:count 1] :value]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:ship_mode :name]],
         :from [:data],
         :nest-by [:ship_mode :ship_mode]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :ship_mode, :x :ship_mode, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "ship_mode", :x2 "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode :ship_mode],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :ship_mode, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:ship_mode :id]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :heatmap-2d,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "ship_mode", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :ship_mode],
       :from [[:query/gen-viz-756 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :ship_mode}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows], :from [[:query/gen-viz-756 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_mode, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "ship_mode", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :ship_mode :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :ship_mode, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-756"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, ship_mode",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :ship_mode],
       :from [[:query/gen-viz-756 :subq1]],
       :group-by [:ship_mode]}}}]},
  :block-350
  {:gen-viz-549
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :quantity,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :recharts-area,
      :axes {:y "quantity", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :quantity, :type "quantitative"},
           :y {:field :quantity, :type "quantitative"},
           :size {:field :quantity, :type "quantitative"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :scatter-plot,
      :axes {:y "quantity", :color "category", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity :category],
       :from [[:query/gen-viz-549 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-h-bar,
      :axes {:y "quantity", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:state-field :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :quantity] :quantity] :category],
         :pivot-by [:category]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :quantity, :c :category},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "quantity", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-v-bar-color,
      :axes {:y "quantity", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :quantity},
        :groupMode "stacked",
        :keys [:quantity],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "quantity", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-timeseries,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x] :quantity],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "quantity", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity],
       :from [[:query/gen-viz-549 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "quantity", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "quantity", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :category :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "quantity", :color "category", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :category],
       :from [[:query/gen-viz-549 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Bar
         {:dataKey :quantity,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :recharts-h-bar,
      :axes {:y "quantity", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:county-field :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :quantity, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :point-map-freq,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :quantity] :quantity]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-549 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :quantity]}}],
            :encoding
            {:color
             {:field :quantity, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :quantity] :quantity]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "quantity", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :quantity, :type "quantitative", :stack "zero"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :stacked-area-chart,
      :axes {:y "quantity", :color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:x-field :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-timeseries-color,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :x-field :color-field],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :recharts-pie,
      :axes {:value "quantity", :segment "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[:category :name] [[:sum :quantity] :value]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :quantity,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :quantity] :quantity] [:category :name]],
         :from [:data],
         :nest-by [:category :category]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :category, :x :category, :y :quantity},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "quantity", :x1 "category", :x2 "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, category",
     :queries
     {:query-preview
      {:select [[[:sum :quantity] :quantity] :category :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category :category],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :category, :y :quantity},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :pie-nivo,
      :axes {:y "quantity", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[:sum :quantity] :value] [:category :id]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :quantity, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :heatmap-2d,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :quantity]] :quantity]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x] :quantity],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :quantity,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "quantity", :color "category", :size "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity :quantity :category],
       :from [[:query/gen-viz-549 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-h-bar-color,
      :axes {:y "quantity", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :quantity,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :recharts-line,
      :axes {:y "quantity", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:quantity :y] [:quantity :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :quantity, :y :quantity},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :scatterplot-nivo,
      :axes {:y "quantity", :x "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, quantity",
     :queries
     {:query-preview
      {:select [:quantity :quantity], :from [[:query/gen-viz-549 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "quantity", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :quantity]] :quantity] :category :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :quantity]}}],
            :encoding
            {:color
             {:field :quantity, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :quantity] :quantity]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "quantity"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :value] [:x-field :day]],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :quantity, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-549"],
      :shape-name :basic-v-bar,
      :axes {:y "quantity", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "quantity, category",
     :queries
     {:query-preview
      {:select [[[[:sum :quantity]] :quantity] :category],
       :from [[:query/gen-viz-549 :subq1]],
       :group-by [:category]}}}]},
  :block-7349
  {:cnt-all-superstore
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :color-field],
       :from [[:query/cnt-all-superstore :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :x-field],
         :pivot-by [:color-field]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :rowcnt, :c :color-field},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt],
       :from [[:query/cnt-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :color-field],
       :from [[:query/cnt-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/cnt-all-superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[:segment-field :name] [[:sum :rowcnt] :value]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:segment-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:x2-field :name]],
         :from [:data],
         :nest-by [:x1-field :x2-field]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :x1-field, :x :x2-field, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :x1-field :x2-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x1-field :x2-field],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :x-field, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:x-field :id]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :color-field],
       :from [[:query/cnt-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt], :from [[:query/cnt-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "cnt-all-superstore"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/cnt-all-superstore :subq1]],
       :group-by [:x-field]}}}]},
  :block-411
  {:gen-viz-994
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :recharts-area,
      :axes {:y "rrows", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rrows, :type "quantitative"},
           :y {:field :rrows, :type "quantitative"},
           :size {:field :rrows, :type "quantitative"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :scatter-plot,
      :axes {:y "rrows", :color "category", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :category],
       :from [[:query/gen-viz-994 :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-h-bar,
      :axes {:y "rrows", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:state-field :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] :category],
         :pivot-by [:category]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :rrows, :c :category},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rrows", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rrows", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :category, :y :rrows},
        :groupMode "stacked",
        :keys [:rrows],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rrows", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-timeseries,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rrows", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows], :from [[:query/gen-viz-994 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rrows", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rrows", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :category :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rrows", :color "category", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :category], :from [[:query/gen-viz-994 :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Bar
         {:dataKey :rrows,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :recharts-h-bar,
      :axes {:y "rrows", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :category]}}],
            :encoding
            {:color
             {:field :category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "category",
     :queries
     {:query-preview
      {:select [:county-field :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rrows, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :point-map-freq,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/gen-viz-994 :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rrows]}}],
            :encoding
            {:color {:field :rrows, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:county-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rrows", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rrows, :type "quantitative", :stack "zero"},
           :color
           {:field :category, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :stacked-area-chart,
      :axes {:y "rrows", :color "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [:x-field [[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:x-field :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :x-field :color-field],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :recharts-pie,
      :axes {:value "rrows", :segment "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[:category :name] [[:count 1] :value]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rrows,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rrows] :rrows] [:category :name]],
         :from [:data],
         :nest-by [:category :category]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :category, :x :category, :y :rrows},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rrows", :x1 "category", :x2 "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category :category],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :category, :y :rrows},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :pie-nivo,
      :axes {:y "rrows", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:category :id]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rrows, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :heatmap-2d,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x] :rrows],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:category]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rrows,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rrows", :color "category", :size "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows :rrows :category],
       :from [[:query/gen-viz-994 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rrows", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rrows,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :recharts-line,
      :axes {:y "rrows", :x "category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rrows :y] [:rrows :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rrows, :y :rrows},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rrows", :x "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, rrows",
     :queries
     {:query-preview
      {:select [:rrows :rrows], :from [[:query/gen-viz-994 :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :category, :type "ordinal"},
           :y {:aggregate "avg", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :category,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rrows", :color "category", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category, category",
     :queries
     {:query-preview
      {:select [[[[:avg :rrows]] :rrows] :category :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category :category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rrows]}}],
            :encoding
            {:color
             {:field :rrows, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [:state-field [[:count 1] :rrows]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rrows"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows",
     :queries
     {:query-preview
      {:select [[[:count 1] :value] [:x-field :day]],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :category, :type "ordinal"},
           :x {:aggregate "sum", :field :rrows, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "gen-viz-994"],
      :shape-name :basic-v-bar,
      :axes {:y "rrows", :x "category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rrows, category",
     :queries
     {:query-preview
      {:select [[[:count 1] :rrows] :category],
       :from [[:query/gen-viz-994 :subq1]],
       :group-by [:category]}}}]},
  :block-7312
  {:agg-grouped-all-superstore
   [{:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :recharts-area,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :rowcnt, :type "quantitative"},
           :y {:field :rowcnt, :type "quantitative"},
           :size {:field :rowcnt, :type "quantitative"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :scatter-plot,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-h-bar,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] :x-field],
         :pivot-by [:color-field]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :rowcnt, :c :color-field},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-v-bar-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :x-field,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :x-field, :y :rowcnt},
        :groupMode "stacked",
        :keys [:rowcnt],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-timeseries,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt],
       :from [[:query/agg-grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Bar
         {:dataKey :rowcnt,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :recharts-h-bar,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :rowcnt, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :point-map-freq,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :rowcnt]}}],
            :encoding
            {:color {:field :rowcnt, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal"},
           :y {:field :rowcnt, :type "quantitative", :stack "zero"},
           :color
           {:field :color-field, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :stacked-area-chart,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field [[[:sum :rowcnt]] :rowcnt] :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :color-field,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-timeseries-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :recharts-pie,
      :axes {:value "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[:segment-field :name] [[:sum :rowcnt] :value]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:segment-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :rowcnt,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :rowcnt] :rowcnt] [:x2-field :name]],
         :from [:data],
         :nest-by [:x1-field :x2-field]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :x1-field, :x :x2-field, :y :rowcnt},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :rowcnt] :x1-field :x2-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x1-field :x2-field],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :x-field, :y :rowcnt},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :pie-nivo,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[:sum :rowcnt] :value] [:x-field :id]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:field :y-field, :type "ordinal"},
           :color
           {:field :rowcnt, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :heatmap-2d,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:x-field :y-field [[[:sum :rowcnt]] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :y-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x] :rowcnt],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:color-field]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :rowcnt,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "rowcnt", :size "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt :rowcnt :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-h-bar-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :x-field}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :rowcnt,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :recharts-line,
      :axes {:y "rowcnt"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:rowcnt :y] [:rowcnt :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :rowcnt, :y :rowcnt},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :scatterplot-nivo,
      :axes {:y "rowcnt", :x "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt, rowcnt",
     :queries
     {:query-preview
      {:select [:rowcnt :rowcnt],
       :from [[:query/agg-grouped-all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :x-field, :type "ordinal"},
           :y {:aggregate "avg", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :color-field,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:avg :rowcnt]] :rowcnt] :x-field :color-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field :color-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :rowcnt]}}],
            :encoding
            {:color
             {:field :rowcnt, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :rowcnt] :rowcnt]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :value] [:x-field :day]],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :x-field, :type "ordinal"},
           :x {:aggregate "sum", :field :rowcnt, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "agg-grouped-all-superstore"],
      :shape-name :basic-v-bar,
      :axes {:y "rowcnt"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "rowcnt",
     :queries
     {:query-preview
      {:select [[[[:sum :rowcnt]] :rowcnt] :x-field],
       :from [[:query/agg-grouped-all-superstore :subq1]],
       :group-by [:x-field]}}}]},
  :block-703
  {:all-superstore
   [{:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :sub_category, :scale {:scheme "darkmulti"}, :type "nominal"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :point-map-colors,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select-distinct [:lat-field :long-field :sub_category],
       :from [[:query/all-superstore :subq1]]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/all-superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Area
         {:type "monotone",
          :data :query-preview,
          :dataKey :profit,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :recharts-area,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :profit, :type "quantitative"},
           :y {:field :profit, :type "quantitative"},
           :size {:field :profit, :type "quantitative"},
           :color
           {:field :sub_category, :type "nominal", :scale {:scheme "category10"}}},
          :mark {:type "circle", :opacity 0.7, :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :scatter-plot,
      :axes {:y "profit", :color "sub_category", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit :sub_category],
       :from [[:query/all-superstore :subq1]]}}}
    {:h 5,
     :w 9,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-h-bar,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :us-states-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:state-field :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel true,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :transformation-map
        {:transform-select [[[:sum :profit] :profit] :sub_category],
         :pivot-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :profit, :c :ship_mode},
        :groupMode "stacked",
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-h-bar-nivo-color,
      :axes {:y "profit", :color "ship_mode", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-v-bar-color,
      :axes {:y "profit", :color "ship_mode", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-bar-chart
       {:labelTextColor "#423939",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :indexBy :sub_category,
        :layout "vertical",
        :enableLabel false,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :theme :theme/nivo-defaults,
        :colorBy "id",
        :click {:x :sub_category, :y :profit},
        :groupMode "stacked",
        :keys [:profit],
        :padding 0.1,
        :enableGridX false,
        :border-radius 2,
        :enableGridY false,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-h-bar-nivo,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_date, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field nil,
            :type "ordinal"}},
          :mark
          {:type "area",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-timeseries,
      :axes {:y "profit", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_date",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :ship_date],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_date]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x] :profit],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :scatterplot-nivo-size,
      :axes {:y "profit", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit], :from [[:query/all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-v-bar-avg,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-v-bar-avg-color,
      :axes {:y "profit", :color "ship_mode", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :scatterplot-nivo-color,
      :axes {:y "profit", :color "ship_mode", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :ship_mode],
       :from [[:query/all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Bar
         {:dataKey :profit,
          :data :query-preview,
          :stroke "#8884d8",
          :fill "#8884d8",
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :recharts-h-bar,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :sub_category]}}],
            :encoding
            {:color
             {:field :sub_category, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :us-counties-fips-map-dim,
      :axes {:color "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category",
     :queries
     {:query-preview
      {:select [:county-field :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value :query-preview-2/long_diff.0,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value :query-preview-2/a_lat.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_lat.0,
            :max :query-preview-2/max_lat.0,
            :full-min -60,
            :full-max 60,
            :step 1.0E-6}}
          {:name "centerX",
           :value :query-preview-2/a_long.0,
           :bind
           {:input "range",
            :min :query-preview-2/min_long.0,
            :max :query-preview-2/max_long.0,
            :full-min -180,
            :full-max 180,
            :step 1.0E-6}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          {:data {:values :query-preview},
           :projection
           {:type "mercator",
            :scale {:expr "scale"},
            :center [{:signal "centerX"} {:signal "centerY"}],
            :translate [{:signal "tx"} {:signal "ty"}]},
           :mark {:type "point"},
           :encoding
           {:latitude {:field :lat-field, :type "quantitative"},
            :size {:field nil, :type "quantitative"},
            :color
            {:field :profit, :scale {:scheme "darkmulti"}, :type "quantitative"},
            :longitude {:field :long-field, :type "quantitative"}},
           :background "transparent"}
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA50044"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50044"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :point-map-freq,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview] [:queries :query-preview-1]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:lat-field :long-field [[:sum :profit] :profit]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:lat-field :long-field]},
      :query-preview-1
      {:select
       [[[:min :long-field] :min-long]
        [[:max :long-field] :max-long]
        [[:min :lat-field] :min-lat]
        [[:max :lat-field] :max-lat]
        [[:avg :lat-field] :a-lat]
        [[:avg :long-field] :a-long]
        [[:round
          [:raw ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]]
          2]
         :long_diff]
        [[:round [:raw ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2]
         :lat_diff]],
       :from [[:query/all-superstore :subq1]],
       :where
       [:and
        [:<> :lat-field -1]
        [:<> :lat-field nil]
        [:<> :long-field -1]
        [:<> :long-field nil]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :county-field,
               :fields [:county-field :profit]}}],
            :encoding
            {:color {:field :profit, :type "nominal", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding {:stroke {:value "#FFA50077"}, :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :us-counties-fips-map-agg,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:county-field [[:sum :profit] :profit]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:county-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-h-bar-avg,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_date, :type "temporal"},
           :y {:field :profit, :type "quantitative", :stack "zero"},
           :color
           {:field :ship_mode, :type "nominal", :scale {:scheme "category20b"}}},
          :mark {:type "area", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :stacked-area-chart,
      :axes {:y "profit", :color "ship_mode", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, ship_date",
     :queries
     {:query-preview
      {:select [:ship_date [[[:sum :profit]] :profit] :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_date :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :ship_date, :type "temporal", :sort "x"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field :sub_category,
            :type "ordinal"}},
          :mark
          {:type "line",
           :interpolate "monotone",
           :point "transparent",
           :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-timeseries-color,
      :axes {:y "profit", :color "sub_category", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category, ship_date",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :ship_date :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_date :sub_category]}}}
    {:h 6,
     :w 9,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 20, :right 20, :bottom 20, :left 20}}
        [:>
         :Pie
         {:nameKey :name,
          :fill "#8884d8",
          :on-click [:set-recharts-param>],
          :outerRadius 80,
          :dataKey :value,
          :cx "50%",
          :label true,
          :cy "50%",
          :data :query-preview}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :recharts-pie,
      :axes {:value "profit", :segment "ship_mode"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, ship_mode",
     :queries
     {:query-preview
      {:select [[:ship_mode :name] [[:sum :profit] :value]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-treemap
       {:orientLabel false,
        :labelTextColor "#000000",
        :tile "squarify",
        :identity :name,
        :labelSkipSize 12,
        :borderColor "#000000",
        :value :profit,
        :enableLabel true,
        :width :panel-width+70,
        :parentLabelPosition "top",
        :colors {:scheme "nivo"},
        :transformation-map
        {:transform-select [[[:sum :profit] :profit] [:ship_mode :name]],
         :from [:data],
         :nest-by [:ship_mode :ship_mode]},
        :theme :theme/nivo-defaults,
        :leavesOnly false,
        :click {:c :ship_mode, :x :ship_mode, :y :profit},
        :label :name,
        :parentLabelSize 22,
        :parentLabelTextColor "#ffffff",
        :enableParentLabel true,
        :parentLabel "id",
        :height :panel-height+50,
        :margin {:top 15, :right 5, :bottom 15, :left 15},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :treemap-nivo-2-levels,
      :axes {:y "profit", :x1 "ship_mode", :x2 "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, ship_mode",
     :queries
     {:query-preview
      {:select [[[:sum :profit] :profit] :ship_mode :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_mode :ship_mode],
       :order-by [[1 :desc]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-pie-chart
       {:padAngle 0.7,
        :innerRadius 0.5,
        :width :panel-width+70,
        :arcLinkLabelsThickness 4,
        :borderWidth 2,
        :cornerRadius 3,
        :activeOuterRadiusOffset 8,
        :theme :theme/nivo-defaults,
        :arcLinkLabelsSkipAngle 10,
        :click {:c :ship_mode, :y :profit},
        :arcLabelsSkipAngle 10,
        :height :panel-height+50,
        :margin {:top 50, :right 50, :bottom 50, :left 45},
        :data :query-preview,
        :arcLinkLabelsTextColor "#ffffff"}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :pie-nivo,
      :axes {:y "profit", :x "ship_mode"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode",
     :queries
     {:query-preview
      {:select [[[:sum :profit] :value] [:ship_mode :id]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:field :sub_category, :type "ordinal"},
           :color
           {:field :profit, :type "quantitative", :scale {:scheme "viridis"}}},
          :mark {:type "rect", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :heatmap-2d,
      :axes {:y "sub_category", :color "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "sub_category, profit, sub_category",
     :queries
     {:query-preview
      {:select [:sub_category :sub_category [[[:sum :profit]] :profit]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category :sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x] :profit],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by [:ship_mode]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize :profit,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :scatterplot-nivo-color-size,
      :axes {:y "profit", :color "ship_mode", :size "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit :profit :ship_mode],
       :from [[:query/all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-h-bar-color,
      :axes {:y "profit", :color "ship_mode", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category :ship_mode]}}}
    {:h 5,
     :w 8,
     :selected-view :reech,
     :views
     {:reech
      [:>
       :ResponsiveContainer
       {:width "100%", :height :panel-height+50}
       [:>
        :ComposedChart
        {:margin {:top 5, :bottom 5, :right 30, :left 20}}
        [:> :CartesianGrid {:strokeDasharray "1 4", :opacity 0.33}]
        [:>
         :Tooltip
         {:contentStyle {:backgroundColor "#00000099", :border "none"},
          :itemStyle {:color "#ecf0f1"},
          :labelStyle {:color "#3498db"}}]
        [:> :XAxis {:dataKey :sub_category}]
        [:>
         :Line
         {:type "monotone",
          :data :query-preview,
          :dataKey :profit,
          :stroke "#8884d8",
          :activeDot {:r 8},
          :on-click [:set-recharts-param>]}]]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :recharts-line,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :reech] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-scatterplot
       {:axisTop nil,
        :axisLeft
        {:orient "left",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "size",
         :legendPosition "middle",
         :legendOffset -60},
        :legends
        [{:symbolSize 12,
          :itemHeight 12,
          :justify false,
          :translateY 0,
          :translateX 130,
          :symbolShape "circle",
          :itemDirection "left-to-right",
          :effects {:on "hover", :style {:itemOpacity 1}},
          :anchor "bottom-right",
          :direction "column",
          :itemWidth 100,
          :itemsSpacing 5}],
        :borderRadius 3,
        :axisBottom
        {:orient "bottom",
         :tickSize 5,
         :tickPadding 5,
         :tickRotation 0,
         :legend "weight",
         :legendPosition "middle",
         :legendOffset 46},
        :width :panel-width+70,
        :colors :theme/vega-default-color-scheme,
        :blendMode "multiply",
        :transformation-map
        {:transform-select [[:profit :y] [:profit :x]],
         :fill-gaps? false,
         :order-nest-by :x,
         :nest-by ["single"]},
        :theme :theme/nivo-defaults,
        :click {:c :profit, :y :profit},
        :axisRight nil,
        :padding 1,
        :yScale {:type "linear", :min 0, :max "auto"},
        :nodeSize 14,
        :xScale {:type "linear", :min 0, :max "auto"},
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 45, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :scatterplot-nivo,
      :axes {:y "profit", :x "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, profit",
     :queries
     {:query-preview
      {:select [:profit :profit], :from [[:query/all-superstore :subq1]]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:x {:field :sub_category, :type "ordinal"},
           :y {:aggregate "avg", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :field :ship_mode,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-h-bar-avg-color,
      :axes {:y "profit", :color "ship_mode", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_mode, sub_category",
     :queries
     {:query-preview
      {:select [[[[:avg :profit]] :profit] :sub_category :ship_mode],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category :ship_mode]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:box
       :child
       [:vega-lite
        {:width "container",
         :height :panel-height+50,
         :autosize "none",
         :padding {:top 0, :bottom 0, :left 0, :right 0},
         :params
         [{:name "tx", :expr "width/2"}
          {:name "ty", :expr "height/2"}
          {:name "zoom_precise",
           :value 4,
           :bind {:input "range", :min 2, :max 30, :step 0.05}}
          {:name "centerY",
           :value 38.76,
           :bind {:input "range", :min -60, :max 60, :step 0.01}}
          {:name "centerX",
           :value -97.17,
           :bind {:input "range", :min -180, :max 180, :step 0.01}}
          {:name "baseTileSize", :value 256}
          {:name "tileUrl", :value "https://a.tile.openstreetmap.org/"}
          {:name "zoom", :expr "ceil(zoom_precise)"}
          {:name "tilesCount", :expr "pow(2,zoom)"}
          {:name "tileSize", :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
          {:name "maxTiles", :expr "ceil(max(height,width)/tileSize +1)"}
          {:name "basePoint", :expr "invert('projection',[0,0])"}
          {:name "dii", :expr "((basePoint[0]+180)/360*tilesCount)"}
          {:name "di", :expr "floor(dii)"}
          {:name "dx", :expr "round((floor(dii)-dii)*tileSize)"}
          {:name "djj",
           :expr
           "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
          {:name "dj", :expr "floor(djj)"}
          {:name "dy", :expr "round((floor(djj)-djj)*tileSize)"}
          {:name "scale", :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}],
         :layer
         [[:if
           :condi/geo-background?
           {:data
            {:name "tile_list",
             :sequence {:start 0, :stop {:signal "maxTiles"}, :as "a"}},
            :transform
            [{:calculate "sequence(0,maxTiles)", :as "b"}
             {:flatten ["b"]}
             {:calculate
              "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'",
              :as "url"}
             {:calculate "(datum.a * tileSize + dx)+(tileSize/2)", :as "x"}
             {:calculate "(datum.b * tileSize + dy)+(tileSize/2)", :as "y"}],
            :mark
            {:type "image",
             :opacity 0.5,
             :background "#000000",
             :fill "#000000",
             :width {:signal "tileSize"},
             :height {:signal "tileSize"}},
            :encoding
            {:x {:field "x", :type "quantitative", :scale nil},
             :y {:field "y", :type "quantitative", :scale nil},
             :url {:field "url", :type "nominal"}}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-counties?
           {:data
            {:name "us-counties",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "counties"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :encoding
            {:fill {:value "#a500ff22"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA50022"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/us-states?
           {:data
            {:name "us-states",
             :url "assets/vega/us-10m.json",
             :format {:type "topojson", :feature "states"}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]},
            :mark "geoshape",
            :transform
            [{:lookup :id,
              :from
              {:data {:values :query-preview},
               :key :state-field,
               :fields [:state-field :profit]}}],
            :encoding
            {:color
             {:field :profit, :type "quantitative", :scale {:scheme "spectral"}},
             :stroke {:value "#FFA50077"},
             :strokeWidth {:value 2}},
            :background "transparent"}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]
          [:if
           :condi/country-lines?
           {:data
            {:name "world",
             :url "assets/vega/world-110m.json",
             :format {:type "topojson", :feature "countries"}},
            :mark "geoshape",
            :encoding
            {:fill {:value "#FFA500"},
             :fillOpacity {:value 0.1},
             :stroke {:value "#FFA500"},
             :strokeWidth {:value 2}},
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}
           {:mark "geoshape",
            :projection
            {:type "mercator",
             :scale {:expr "scale"},
             :center [{:signal "centerX"} {:signal "centerY"}],
             :translate [{:signal "tx"} {:signal "ty"}]}}]],
         :background "transparent",
         :config {:view {:stroke "transparent"}}}
        {:actions false}]]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :us-states-fips-map-agg,
      :axes {:color "profit"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit",
     :queries
     {:query-preview
      {:select [:state-field [[:sum :profit] :profit]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:state-field]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:nivo-calendar
       {:labelTextColor "#423939",
        :emptyColor "#00000000",
        :axisLeft {:tickRotation 0, :legendPosition "middle", :legendOffset -65},
        :dayBorderColor "#ffffff10",
        :enableLabel false,
        :motionDamping 10,
        :axisBottom {:tickRotation 0, :legendPosition "middle", :legendOffset 40},
        :inner-padding 0,
        :width :panel-width+70,
        :monthBorderColor "#ffffff15",
        :colors
        ["#2a4858"
         "#294d5d"
         "#275163"
         "#255667"
         "#225b6c"
         "#1e6071"
         "#1a6575"
         "#156a79"
         "#0e6f7d"
         "#057480"
         "#007983"
         "#007e86"
         "#008488"
         "#00898a"
         "#008e8c"
         "#00938d"
         "#00988e"
         "#039d8f"
         "#12a28f"
         "#1ea78f"
         "#28ac8f"
         "#32b18e"
         "#3cb68d"
         "#46bb8c"
         "#50bf8b"
         "#5ac489"
         "#64c987"
         "#6ecd85"
         "#79d283"
         "#83d681"
         "#8eda7f"
         "#99de7c"
         "#a5e27a"
         "#b0e678"
         "#bcea75"
         "#c8ed73"
         "#d4f171"
         "#e0f470"
         "#edf76f"
         "#fafa6e"
         "#fafa6e"
         "#faf568"
         "#faf162"
         "#faec5d"
         "#fae757"
         "#f9e352"
         "#f9de4c"
         "#f9d947"
         "#f9d441"
         "#f9cf3c"
         "#f8cb37"
         "#f8c632"
         "#f8c12c"
         "#f8bc27"
         "#f7b722"
         "#f7b21d"
         "#f6ad17"
         "#f6a811"
         "#f6a30a"
         "#f59e04"
         "#f49800"
         "#f49300"
         "#f38e00"
         "#f28800"
         "#f28300"
         "#f17d00"
         "#f07800"
         "#ef7200"
         "#ee6c00"
         "#ed6600"
         "#ec6000"
         "#eb5a00"
         "#ea5300"
         "#e84c00"
         "#e74500"
         "#e53d00"
         "#e43502"
         "#e22b05"
         "#e11e08"
         "#df0b0b"],
        :theme :theme/nivo-defaults,
        :click {:x :day, :y :value},
        :padding 0.1,
        :enableGridX true,
        :border-radius 2,
        :enableGridY true,
        :height :panel-height+50,
        :margin {:top 5, :right 5, :bottom 50, :left 45},
        :data :query-preview}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :nivo-calendar-sum,
      :axes {:y "profit", :x "ship_date"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, ship_date",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :value] [:ship_date :day]],
       :from [[:query/all-superstore :subq1]],
       :group-by [:ship_date]}}}
    {:h 5,
     :w 8,
     :views
     {:oz
      [:vega-lite
       {:layer
        [{:encoding
          {:y {:field :sub_category, :type "ordinal"},
           :x {:aggregate "sum", :field :profit, :type "quantitative"},
           :row {:field nil, :legend nil},
           :size {:legend nil},
           :shape {:legend nil},
           :column {:field nil, :legend nil},
           :color
           {:scale :theme/vega-default-color-scheme,
            :legend nil,
            :field 1,
            :type "ordinal"}},
          :mark {:type "bar", :tooltip {:content "encoding"}}}],
        :data {:values :query-preview},
        :config :theme/vega-defaults,
        :width "container",
        :height :panel-height,
        :padding 4,
        :background "transparent"}
       {:actions false}]},
     :connection-id "superstore",
     :shape-rotator
     {:context ["superstore" nil "none" "all-superstore"],
      :shape-name :basic-v-bar,
      :axes {:y "profit", :x "sub_category"},
      :items [[:views :oz] [:queries :query-preview]]},
     :name "profit, sub_category",
     :queries
     {:query-preview
      {:select [[[[:sum :profit]] :profit] :sub_category],
       :from [[:query/all-superstore :subq1]],
       :group-by [:sub_category]}}}]}}}