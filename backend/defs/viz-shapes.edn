
{:basic-h-bar-nivo {:axes {:x [:and :dimension?
                               :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                               ;[:or :is-string? :is-year? :is-month?]
                               ;[:and [:not :is-date?] [:not :is-datetime?]]
                               ]
                           :y [:measure?]}

                    :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
                                :from [:table]
                                :group-by [:x-field]}]
                    :category "nivo"
                    :library-shapes
                    [:nivo-bar-chart
                     {:width :panel-width+70
                      :height :panel-height+50
                      :margin {:top 5 :right 5 :bottom 50 :left 45}
                      :click {:x :x-field :y :y-field} ;; for click actions dim keys
                      :data :query-preview ; :table ;data
                      :layout "vertical"
                      :groupMode "stacked" ; grouped
                      :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
                      :indexBy :x-field
                      :keys [:y-field]
                      :labelTextColor "#423939"
                      :colorBy "id" ;"indexValue"
                      :theme :theme/nivo-defaults
                      :axisLeft {:tickRotation 0
                                 :legendPosition "middle"
                                 :legendOffset -65
                                   ;:legend ":sightings-sum"
                                 }
                      :axisBottom {:tickRotation 0
                                   :legendPosition "middle"
                                   :legendOffset 40
                                     ;:legend ":season"
                                   }
                      :enableGridX false ;true
                      :enableGridY false ;true
                      :enableLabel false
                      :padding 0.1
                      :inner-padding 0
                      :border-radius 2}]
                    :base-score 1}
 
 :basic-h-bar-nivo-color {:axes {:x [:and :dimension?
                                     :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :color [:and :dimension?
                                         [:or :low-cardinality? :very-low-cardinality?]
                                         [:or :is-string? :is-year? :is-month?]
                                         [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :y [:measure?]}

                          :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                      :from [:table]
                                      :group-by [:x-field :color-field]}]

                          :library-shapes
                          [:nivo-bar-chart
                           {:width :panel-width+70
                            :height :panel-height+50
                            :margin {:top 5 :right 5 :bottom 50 :left 45}
                            :click {:x :x-field :y :y-field :c :color-field} ;; for click actions dim keys
                            :data :query-preview ; :table ;data
                            :transformation-map {:transform-select [[[:sum :y-field] :y-field] :x-field]
                                                 :pivot-by [:color-field]}
                            :layout "vertical"
                            :groupMode "stacked" ; grouped
                            :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
                            :indexBy :x-field
                            ;:keys [:y-field]
                            :labelTextColor "#423939"
                            :colorBy "id" ;"indexValue"
                            :theme :theme/nivo-defaults
                            :axisLeft {:tickRotation 0
                                       :legendPosition "middle"
                                       :legendOffset -65
                                                             ;:legend ":sightings-sum"
                                       }
                            :axisBottom {:tickRotation 0
                                         :legendPosition "middle"
                                         :legendOffset 40
                                                               ;:legend ":season"
                                         }
                            :enableGridX false ;true
                            :enableGridY false ;true
                            :enableLabel true
                            :padding 0.1
                            :inner-padding 0
                            :border-radius 2}]
                          :base-score 1}
 
 :basic-h-bar  {:axes {:x [:and :dimension?
                           :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                           ;[:or :is-string? :is-year? :is-month?]
                           ;[:and [:not :is-date?] [:not :is-datetime?]]
                           ]
                       :y [:measure?]}
                :w 9
                :h 5
                :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
                            :from [:table]
                            :group-by [:x-field]}]

                :library-shapes
                [:vega-lite
                 {:layer
                  [{:encoding
                    {:x {:field :x-field :type "ordinal"}
                     :y {:aggregate "sum"
                         :field :y-field
                         :type "quantitative"}
                     :row {:field nil :legend nil}
                     :size {:legend nil}
                     :shape {:legend nil}
                     :column {:field nil :legend nil}
                     :color {:scale :theme/vega-default-color-scheme
                             :legend nil
                             :field 1 ;:y-field
                             :type "ordinal"}}
                    :mark {:type "bar"
                           :tooltip {:content "encoding"}}}]
                  :data {:values :table}} {:actions false}]
                :base-score 1}

 :basic-v-bar  {:axes {:x [:and :dimension?
                           :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                           [:or :is-string? :is-year? :is-month?]
                           [:and [:not :is-date?] [:not :is-datetime?]]]
                       :y [:measure?]}

                :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]  ;; aliasing as original name to lessen confusion?
                            :from [:table]
                            :group-by [:x-field]}]

                :library-shapes
                [:vega-lite
                 {:layer
                  [{:encoding
                    {:y {:field :x-field :type "ordinal"
                        ;:sort "-y"
                         }
                     :x {:aggregate "sum"
                         :field :y-field
                         :type "quantitative"}
                     :row {:field nil :legend nil}
                     :size {:legend nil}
                     :shape {:legend nil}
                     :column {:field nil :legend nil}
                     :color {:scale :theme/vega-default-color-scheme
                             :legend nil
                             :field 1 ;:y-field
                             :type "ordinal"}}
                    :mark {:type "bar"
                           :tooltip {:content "encoding"}}}]
                  :data {:values :table}} {:actions false}]
                :base-score 1}


 :basic-h-bar-avg  {:axes {:x [:and :dimension?
                               :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                               [:or :is-string? :is-year? :is-month?]
                               [:and [:not :is-date?] [:not :is-datetime?]]]
                           :y [:and [:measure?] [:not :is-rowcount?]]}

                    :sql-maps [{:select [[[[:avg :y-field]] :y-field] :x-field]  ;; aliasing as original name to lessen confusion?
                                :from [:table]
                                :group-by [:x-field]}]

                    :library-shapes
                    [:vega-lite
                     {:layer
                      [{:encoding
                        {:x {:field :x-field :type "ordinal"
                         ;:sort "-y"
                             }
                         :y {:aggregate "avg"
                             :field :y-field
                             :type "quantitative"}
                         :row {:field nil :legend nil}
                         :size {:legend nil}
                         :shape {:legend nil}
                         :column {:field nil :legend nil}
                         :color {:scale :theme/vega-default-color-scheme
                                 :legend nil
                                 :field 1 ;:y-field
                                 :type "ordinal"}}
                        :mark {:type "bar"
                               :tooltip {:content "encoding"}}}]
                      :data {:values :table}} {:actions false}]
                    :base-score 1}

 :basic-v-bar-avg  {:axes {:x [:and :dimension?
                               :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                               [:or :is-string? :is-year? :is-month?]
                               [:and [:not :is-date?] [:not :is-datetime?]]]
                           :y [:and [:measure?] [:not :is-rowcount?]]}

                    :sql-maps [{:select [[[[:avg :y-field]] :y-field] :x-field]  ;; aliasing as original name to lessen confusion?
                                :from [:table]
                                :group-by [:x-field]}]

                    :library-shapes
                    [:vega-lite
                     {:layer
                      [{:encoding
                        {:y {:field :x-field :type "ordinal"
                        ;:sort "-y"
                             }
                         :x {:aggregate "avg"
                             :field :y-field
                             :type "quantitative"}
                         :row {:field nil :legend nil}
                         :size {:legend nil}
                         :shape {:legend nil}
                         :column {:field nil :legend nil}
                         :color {:scale :theme/vega-default-color-scheme
                                 :legend nil
                                 :field 1 ;:y-field
                                 :type "ordinal"}}
                        :mark {:type "bar"
                               :tooltip {:content "encoding"}}}]
                      :data {:values :table}} {:actions false}]
                    :base-score 1}


 :basic-h-bar-color  {:axes {:x [:and :dimension?
                                 :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                 [:or :is-string? :is-year? :is-month?]
                                 [:and [:not :is-date?] [:not :is-datetime?]]]
                             :color [:and :dimension?
                                     [:or :low-cardinality? :very-low-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                             :y [:measure?]}

                      :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                  :from [:table]
                                  :group-by [:x-field :color-field]}]

                      :library-shapes
                      [:vega-lite
                       {:layer
                        [{:encoding
                          {:x {:field :x-field :type "ordinal"
                         ;:sort "-y"
                               }
                           :y {:aggregate "sum"
                               :field :y-field
                               :type "quantitative"}
                           :row {:field nil :legend nil}
                           :size {:legend nil}
                           :shape {:legend nil}
                           :column {:field nil :legend nil}
                           :color {:scale :theme/vega-default-color-scheme
                                  ;:legend nil
                                   :field :color-field
                                   :type "ordinal"}}
                          :mark {:type "bar"
                                 :tooltip {:content "encoding"}}}]
                        :data {:values :table}} {:actions false}]
                      :base-score 1}

 :basic-v-bar-color  {:axes {:x [:and :dimension?
                                 :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                 [:or :is-string? :is-year? :is-month?]
                                 [:and [:not :is-date?] [:not :is-datetime?]]]
                             :color [:and :dimension?
                                     [:or :low-cardinality? :very-low-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                             :y [:measure?]}

                      :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                  :from [:table]
                                  :group-by [:x-field :color-field]}]

                      :library-shapes
                      [:vega-lite
                       {:layer
                        [{:encoding
                          {:y {:field :x-field :type "ordinal"}
                           :x {:aggregate "sum"
                               :field :y-field
                               :type "quantitative"}
                           :row {:field nil :legend nil}
                           :size {:legend nil}
                           :shape {:legend nil}
                           :column {:field nil :legend nil}
                           :color {:scale :theme/vega-default-color-scheme
                            ;:legend nil
                                   :field :color-field
                                   :type "ordinal"}}
                          :mark {:type "bar"
                                 :tooltip {:content "encoding"}}}]
                        :data {:values :table}} {:actions false}]
                      :base-score 1}


 :basic-h-bar-avg-color  {:axes {:x [:and :dimension?
                                     :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :color [:and :dimension?
                                         [:or :low-cardinality? :very-low-cardinality?]
                                         [:or :is-string? :is-year? :is-month?]
                                         [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :y [:and [:measure?] [:not :is-rowcount?]]}

                          :sql-maps [{:select [[[[:avg :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                      :from [:table]
                                      :group-by [:x-field :color-field]}]

                          :library-shapes
                          [:vega-lite
                           {:layer
                            [{:encoding
                              {:x {:field :x-field :type "ordinal"
                         ;:sort "-y"
                                   }
                               :y {:aggregate "avg"
                                   :field :y-field
                                   :type "quantitative"}
                               :row {:field nil :legend nil}
                               :size {:legend nil}
                               :shape {:legend nil}
                               :column {:field nil :legend nil}
                               :color {:scale :theme/vega-default-color-scheme
                                ;:legend nil
                                       :field :color-field
                                       :type "ordinal"}}
                              :mark {:type "bar"
                                     :tooltip {:content "encoding"}}}]
                            :data {:values :table}} {:actions false}]
                          :base-score 1}

 :basic-v-bar-avg-color  {:axes {:x [:and :dimension?
                                     :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :color [:and :dimension?
                                         [:or :low-cardinality? :very-low-cardinality?]
                                         [:or :is-string? :is-year? :is-month?]
                                         [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :y [:and [:measure?] [:not :is-rowcount?]]}

                          :sql-maps [{:select [[[[:avg :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                      :from [:table]
                                      :group-by [:x-field :color-field]}]

                          :library-shapes
                          [:vega-lite
                           {:layer
                            [{:encoding
                              {:y {:field :x-field :type "ordinal"
                        ;:sort "-y"
                                   }
                               :x {:aggregate "avg"
                                   :field :y-field
                                   :type "quantitative"}
                               :row {:field nil :legend nil}
                               :size {:legend nil}
                               :shape {:legend nil}
                               :column {:field nil :legend nil}
                               :color {:scale :theme/vega-default-color-scheme
                                ;:legend nil
                                       :field :color-field
                                       :type "ordinal"}}
                              :mark {:type "bar"
                                     :tooltip {:content "encoding"}}}]
                            :data {:values :table}} {:actions false}]
                          :base-score 1}


 :basic-timeseries  {:axes {:x [:and :dimension?
                                [:or :looks-like-date? :looks-like-datetime?
                                 :is-date? :is-datetime?]]
                           ; :color [:and :dimension?
                           ;         [:or :low-cardinality? :very-low-cardinality?]
                           ;         [:or :is-string? :is-year? :is-month?]
                           ;         [:and [:not :is-date?] [:not :is-datetime?]]]
                            :y [:measure?]}

                     :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]  ;; aliasing as original name to lessen confusion?
                                 :from [:table]
                                 :group-by [:x-field]}]

                     :library-shapes
                     [:vega-lite
                      {:layer
                       [{:encoding
                         {:x {:field :x-field
                              :type "temporal"
                              :sort "x"}
                          :y {:aggregate "sum"
                              :field :y-field
                              :type "quantitative"}
                          :row {:field nil
                                :legend nil}
                          :size {:legend nil}
                          :shape {:legend nil}
                          :column {:field nil
                                   :legend nil}
                          :color {:scale :theme/vega-default-color-scheme
                                  :legend nil
                                  :field nil
                                  :type "ordinal"}}
                         :mark {:type "area"
                                :interpolate "monotone"
                                :point "transparent"
                                :tooltip {:content "encoding"}}}]
                       :data {:values :table}}
                      {:actions false}]
                     :base-score 1}

 :basic-timeseries-color  {:axes {:x [:and :dimension?
                                      [:or :looks-like-date? :looks-like-datetime?
                                       :is-date? :is-datetime?]]
                                  :color [:and :dimension?
                                          :medium-cardinality?
                                          :is-string?
                                    ;:reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                          [:and [:not :is-date?] [:not :is-datetime?]]]
                                  :y [:measure?]}

                           :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                       :from [:table]
                                       :group-by [:x-field :color-field]}]

                           :library-shapes
                           [:vega-lite
                            {:layer
                             [{:encoding
                               {:x {:field :x-field
                                    :type "temporal"
                                    :sort "x"}
                                :y {:aggregate "sum"
                                    :field :y-field
                                    :type "quantitative"}
                                :row {:field nil
                                      :legend nil}
                                :size {:legend nil}
                                :shape {:legend nil}
                                :column {:field nil
                                         :legend nil}
                                :color {:scale :theme/vega-default-color-scheme
                                        :legend nil
                                        :field :color-field
                                        :type "ordinal"}}
                               :mark {:type "line"
                                      :interpolate "monotone"
                                      :point "transparent"
                                      :tooltip {:content "encoding"}}}]
                             :data {:values :table}}
                            {:actions false}]
                           :base-score 1}


;;  :basic-callout  {:axes {:y [:and [:measure?] [:not :is-rowcount?]]}
;;                   :sql-maps [{:select [[[[:sum :y-field]] :ttl]]
;;                               :from [:table]}
;;                              {:select [[[[:count 1]] :ttl]]
;;                               :from [:table]}
;;                              {:select [[[[:count 10]] :ttl1]]
;;                               :from [:table]}]

;;                   :conditionals {:testcc [:= 1 1]}

;;                   :library-shapes
;;                   [:box :child [:number :query-preview/ttl.1]
;;                    :align :center :justify :center
;;                    :style {:font-size "40px" :color "orange"}]
;;                   :base-score 1}

;;  :compound-trend-1  {:axes {:x [:and :dimension?
;;                                 [:or :looks-like-date? :looks-like-datetime?
;;                                  :is-date? :is-datetime?]]
;;                             :y [:measure?]}
;;                      :w 8
;;                      :h 6
;;                      :sql-maps [{:select [[[[:sum :y-field]] :agg] :x-field]
;;                                  :from [:table]
;;                                  :order-by [[:x-field :desc]]
;;                                  :group-by [:x-field]}
;;                                 {:select
;;                                  [[[:max [:round
;;                                           [:raw
;;                                            ["(100 * ((" :query-preview/agg.0
;;                                             ".0 - " :query-preview/agg.1
;;                                             ".0) / " :query-preview/agg.0
;;                                             ".0))"]] 2]] :diff]]}]

;;                      :conditionals {:up-or-down?
;;                                     [:> :query-preview/agg.0
;;                                      :query-preview/agg.1]}

;;                      :library-shapes
;;                      [:v-box :size "auto" :height :half-panel-height-px
;;                       :style {:padding-left "8px" :padding-right "8px"}
;;                       :children
;;                       [[:h-box :justify :between :children
;;                         [[:box :padding "16px" :child
;;                           [:number :query-preview/agg.0] :style
;;                           {:font-size "39px" :color "#ffffff"}]
;;                          [:h-box :padding "13px" :size "auto" :children
;;                           [[:icon :md-icon-name
;;                             [:if :condi/up-or-down? "zmdi-chevron-up"
;;                              "zmdi-chevron-down"] :style
;;                             {:font-size "55px"
;;                              :color [:if :condi/up-or-down? "#20f323" "#f36464"]
;;                              :opacity 0.5
;;                              :margin-top "8px"}]
;;                            [:box :child [:percent :query-preview-2/diff.0] :style
;;                             {:font-size "25px" :padding "15px"}]]]]]
;;                        [:box :style {:margin-top "-10px"} :size "auto"
;;                         :child
;;                         [:vega-lite
;;                          {:layer [{:encoding
;;                                    {:x {:field :x-field
;;                                         :type "temporal"
;;                                         :title nil
;;                                         :sort "x"}
;;                                     :y {:aggregate "sum"
;;                                         :field :agg
;;                                         :title nil
;;                                         :scale {:zero false}
;;                                         :type "quantitative"}
;;                                     :row {:field nil :legend nil}
;;                                     :size {:legend nil}
;;                                     :shape {:legend nil}
;;                                     :column {:field nil :legend nil}
;;                                     :color {:scale {:scheme "purples"}
;;                                             :legend nil
;;                                             :field 1
;;                                             :type "ordinal"}}
;;                                    :mark {:type "line"
;;                                           :interpolate "monotone"
;;                                           :line true
;;                                           :point true
;;                                           :tooltip {:content "encoding"}}}]
;;                           :data {:values :query-preview}
;;                           :config {:view {:stroke "transparent"}
;;                                    :line {:strokeWidth 3}
;;                                    :axis {:domainColor "#ffffff22"
;;                                           :grid true
;;                                           :font "Lato"
;;                                           :labelColor "#afafaf"
;;                                           :titleFont "Lato"
;;                                           :titleColor "#282828"
;;                                           :labelFont "Lato"
;;                                           :domain false
;;                                           :gridColor "#ffffff22"
;;                                           :tickColor "#ffffff22"
;;                                           :axisFont "Lato"}
;;                                    :legend {:labelFont "Lato"
;;                                             :legendFont "Lato"
;;                                             :labelColor "#ffffff99"
;;                                             :titleColor "#ffffff99"
;;                                             :stroke "#ffffff99"
;;                                             :titleFont "Lato"}
;;                                    :header {:labelFont "Lato"
;;                                             :titleFont "Lato"
;;                                             :titleColor "#ffffff99"}
;;                                    :mark {:font "Lato"}
;;                                    :title {:font "Lato"
;;                                            :subtitleFont "Lato"
;;                                            :labelFont "Lato"
;;                                            :titleFont "Lato"
;;                                            :titleColor "#ffffff99"}}
;;                           :width :panel-width
;;                           :height :half-panel-height
;;                           :padding 4
;;                           :background "transparent"} {:actions false}]]
;;                        [:box :align :center :justify :center :style
;;                         {:padding-top "133px" :font-size "20px"} :child
;;                         [:string [:x-field " vs " :y-field]]]]]
;;                      :base-score 1}

 :point-map  {:axes {:lat [:geo-lat?]
                     :long [:geo-long?]}
              :sql-maps [{:select-distinct [:lat-field :long-field]
                          :from [:table]}
                         {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long]
                                   [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat]
                                   [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long]
                                   [[:round
                                     [:raw
                                      ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]] 2] :long_diff]
                                   [[:round
                                     [:raw
                                      ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2] :lat_diff]]
                          :from [:table]
                          :where [:and [:<> :lat-field -1] [:<> :lat-field nil]
                                  [:<> :long-field -1] [:<> :long-field nil]]}]

              :conditionals {:country-lines? true
                             :us-counties? false
                             :us-states? false
                             :geo-background? true}

              :library-shapes
              [:box :child
               [:vega-lite
                {:width "container"
                 :height :panel-height+50
                 :autosize "none"
                 :padding {:top 0 :bottom 0 :left 0 :right 0}
                 :params
                 [{:name "tx" :expr "width/2"}
                  {:name "ty" :expr "height/2"}
                  {:name "zoom_precise"
                   :value :query-preview-2/long_diff.0 ;10
                   :bind {:input "range" :min 2 :max 30 :step 0.05}}
                  {:name "centerY"
                   :value :query-preview-2/a_lat.0 ;42.3341695
                   :bind {:input "range"
                          :min :query-preview-2/min_lat.0
                          :max :query-preview-2/max_lat.0
                          :full-min -60
                          :full-max 60
                          :step 0.000001}}
                  {:name "centerX"
                   :value :query-preview-2/a_long.0 ;-71.04841448
                   :bind {:input "range"
                          :min :query-preview-2/min_long.0
                          :max :query-preview-2/max_long.0
                          :full-min -180
                          :full-max 180
                          :step 0.000001}}
                  {:name "baseTileSize" :value 256}
                  {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                  {:name "zoom" :expr "ceil(zoom_precise)"}
                  {:name "tilesCount" :expr "pow(2,zoom)"}
                  {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                  {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                  {:name "basePoint" :expr "invert('projection',[0,0])"}
                  {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                  {:name "di" :expr "floor(dii)"}
                  {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                  {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                  {:name "dj" :expr "floor(djj)"}
                  {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                  {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                 :layer
                 [[:if :condi/geo-background?
                   {:data {:name "tile_list"
                           :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                    :transform
                    [{:calculate "sequence(0,maxTiles)" :as "b"}
                     {:flatten ["b"]}
                     {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                     {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                     {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                    :mark {:type "image"
                           :opacity 0.5
                           :background "#000000"
                           :fill "#000000"
                           :width {:signal "tileSize"}
                           :height {:signal "tileSize"}}
                    :encoding {:x {:field "x"
                                   :type "quantitative"
                                   :scale nil}
                               :y {:field "y"
                                   :type "quantitative"
                                   :scale nil}
                               :url {:field "url" :type "nominal"}}}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]

                  {:data {:values :query-preview}
                         ;:params [{:name "clicked" :select "point"}]
                   :projection {:type "mercator"
                                :scale {:expr "scale"}
                                :center [{:signal "centerX"}
                                         {:signal "centerY"}]
                                :translate [{:signal "tx"}
                                            {:signal "ty"}]}
                   :mark {:type "point"}
                   :encoding
                   {:latitude {:field :lat-field
                               :type "quantitative"}
                    :size {:field nil
                           :type "quantitative"}
                    :color {:field 1
                            :scale {:scheme "darkmulti"}
                            :type "nominal"}
                    :longitude {:field :long-field
                                :type "quantitative"}}
                   :background "transparent"}


                  [:if :condi/us-counties?
                   {:data
                    {:name "us-counties"
                     :url "assets/vega/us-10m.json"
                     :format {:type "topojson"
                              :feature "counties"}}
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}
                    :mark "geoshape"
                    :encoding {:fill {:value "#a500ff22"}
                               :fillOpacity {:value 0.1}
                               :stroke {:value "#FFA50022"}
                               :strokeWidth {:value 2}}
                    :background "transparent"}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]


                  [:if :condi/us-states?
                   {:data
                    {:name "us-states"
                     :url "assets/vega/us-10m.json"
                     :format {:type "topojson"
                              :feature "states"}}
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}
                    :mark "geoshape"
                    :encoding {:fill {:value "#FFA50044"}
                               :fillOpacity {:value 0.1}
                               :stroke {:value "#FFA50044"}
                               :strokeWidth {:value 2}}
                    :background "transparent"}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]


                  [:if :condi/country-lines?
                   {:data
                    {:name "world"
                     :url "assets/vega/world-110m.json"
                     :format {:type "topojson"
                              :feature "countries"}}
                    :mark "geoshape"
                    :encoding {:fill {:value "#FFA500"}
                               :fillOpacity {:value 0.1}
                               :stroke {:value "#FFA500"}
                               :strokeWidth {:value 2}}
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]]
                 :background "transparent"
                 :config {:view {:stroke "transparent"}}}
                {:actions false}]]
              :base-score 1}


 :point-map-colors {:axes {:lat [:geo-lat?]
                           :long [:geo-long?]
                           :color [:and :dimension?
                                   :medium-cardinality?
                                   :is-string?
                                    ;:reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                   [:and [:not :is-date?] [:not :is-datetime?]]]}
                    :sql-maps [{:select-distinct [:lat-field :long-field :color-field]
                                :from [:table]}
                               {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long]
                                         [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat]
                                         [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long]
                                         [[:round
                                           [:raw
                                            ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]] 2] :long_diff]
                                         [[:round
                                           [:raw
                                            ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2] :lat_diff]]
                                :from [:table]
                                :where [:and [:<> :lat-field -1] [:<> :lat-field nil]
                                        [:<> :long-field -1] [:<> :long-field nil]]}]

                    :conditionals {:country-lines? true
                                   :us-counties? false
                                   :us-states? false
                                   :geo-background? true}

                    :library-shapes
                    [:box :child
                     [:vega-lite
                      {:width "container"
                       :height :panel-height+50
                       :autosize "none"
                       :padding {:top 0 :bottom 0 :left 0 :right 0}
                       :params
                       [{:name "tx" :expr "width/2"}
                        {:name "ty" :expr "height/2"}
                        {:name "zoom_precise"
                         :value :query-preview-2/long_diff.0 ;10
                         :bind {:input "range" :min 2 :max 30 :step 0.05}}
                        {:name "centerY"
                         :value :query-preview-2/a_lat.0 ;42.3341695
                         :bind {:input "range"
                                :min :query-preview-2/min_lat.0
                                :max :query-preview-2/max_lat.0
                                :full-min -60
                                :full-max 60
                                :step 0.000001}}
                        {:name "centerX"
                         :value :query-preview-2/a_long.0 ;-71.04841448
                         :bind {:input "range"
                                :min :query-preview-2/min_long.0
                                :max :query-preview-2/max_long.0
                                :full-min -180
                                :full-max 180
                                :step 0.000001}}
                        {:name "baseTileSize" :value 256}
                        {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                        {:name "zoom" :expr "ceil(zoom_precise)"}
                        {:name "tilesCount" :expr "pow(2,zoom)"}
                        {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                        {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                        {:name "basePoint" :expr "invert('projection',[0,0])"}
                        {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                        {:name "di" :expr "floor(dii)"}
                        {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                        {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                        {:name "dj" :expr "floor(djj)"}
                        {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                        {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                       :layer
                       [[:if :condi/geo-background?
                         {:data {:name "tile_list"
                                 :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                          :transform
                          [{:calculate "sequence(0,maxTiles)" :as "b"}
                           {:flatten ["b"]}
                           {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                           {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                           {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                          :mark {:type "image"
                                 :opacity 0.5
                                 :background "#000000"
                                 :fill "#000000"
                                 :width {:signal "tileSize"}
                                 :height {:signal "tileSize"}}
                          :encoding {:x {:field "x"
                                         :type "quantitative"
                                         :scale nil}
                                     :y {:field "y"
                                         :type "quantitative"
                                         :scale nil}
                                     :url {:field "url" :type "nominal"}}}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]

                        {:data {:values :query-preview}
                         ;:params [{:name "clicked" :select "point"}]
                         :projection {:type "mercator"
                                      :scale {:expr "scale"}
                                      :center [{:signal "centerX"}
                                               {:signal "centerY"}]
                                      :translate [{:signal "tx"}
                                                  {:signal "ty"}]}
                         :mark {:type "point"}
                         :encoding
                         {:latitude {:field :lat-field
                                     :type "quantitative"}
                          :size {:field nil
                                 :type "quantitative"}
                          :color {:field :color-field
                                  :scale {:scheme "darkmulti"}
                                  :type "nominal"}
                          :longitude {:field :long-field
                                      :type "quantitative"}}
                         :background "transparent"}


                        [:if :condi/us-counties?
                         {:data
                          {:name "us-counties"
                           :url "assets/vega/us-10m.json"
                           :format {:type "topojson"
                                    :feature "counties"}}
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}
                          :mark "geoshape"
                          :encoding {:fill {:value "#a500ff22"}
                                     :fillOpacity {:value 0.1}
                                     :stroke {:value "#FFA50022"}
                                     :strokeWidth {:value 2}}
                          :background "transparent"}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]


                        [:if :condi/us-states?
                         {:data
                          {:name "us-states"
                           :url "assets/vega/us-10m.json"
                           :format {:type "topojson"
                                    :feature "states"}}
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}
                          :mark "geoshape"
                          :encoding {:fill {:value "#FFA50044"}
                                     :fillOpacity {:value 0.1}
                                     :stroke {:value "#FFA50044"}
                                     :strokeWidth {:value 2}}
                          :background "transparent"}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]


                        [:if :condi/country-lines?
                         {:data
                          {:name "world"
                           :url "assets/vega/world-110m.json"
                           :format {:type "topojson"
                                    :feature "countries"}}
                          :mark "geoshape"
                          :encoding {:fill {:value "#FFA500"}
                                     :fillOpacity {:value 0.1}
                                     :stroke {:value "#FFA500"}
                                     :strokeWidth {:value 2}}
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]]
                       :background "transparent"
                       :config {:view {:stroke "transparent"}}}
                      {:actions false}]]
                    :base-score 1}

 :point-map-freq {:axes {:lat [:geo-lat?]
                         :long [:geo-long?]
                         :color [:measure?]}
                  :sql-maps [{:select [:lat-field :long-field [[:sum :color-field] :color-field]]
                              :from [:table]
                              :group-by [:lat-field :long-field]}
                             {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long]
                                       [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat]
                                       [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long]
                                       [[:round
                                         [:raw
                                          ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]] 2] :long_diff]
                                       [[:round
                                         [:raw
                                          ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2] :lat_diff]]
                              :from [:table]
                              :where [:and [:<> :lat-field -1] [:<> :lat-field nil]
                                      [:<> :long-field -1] [:<> :long-field nil]]}]

                  :conditionals {:country-lines? true
                                 :us-counties? false
                                 :us-states? false
                                 :geo-background? true}

                  :library-shapes
                  [:box :child
                   [:vega-lite
                    {:width "container"
                     :height :panel-height+50
                     :autosize "none"
                     :padding {:top 0 :bottom 0 :left 0 :right 0}
                     :params
                     [{:name "tx" :expr "width/2"}
                      {:name "ty" :expr "height/2"}
                      {:name "zoom_precise"
                       :value :query-preview-2/long_diff.0 ;10
                       :bind {:input "range" :min 2 :max 30 :step 0.05}}
                      {:name "centerY"
                       :value :query-preview-2/a_lat.0 ;42.3341695
                       :bind {:input "range"
                              :min :query-preview-2/min_lat.0
                              :max :query-preview-2/max_lat.0
                              :full-min -60
                              :full-max 60
                              :step 0.000001}}
                      {:name "centerX"
                       :value :query-preview-2/a_long.0 ;-71.04841448
                       :bind {:input "range"
                              :min :query-preview-2/min_long.0
                              :max :query-preview-2/max_long.0
                              :full-min -180
                              :full-max 180
                              :step 0.000001}}
                      {:name "baseTileSize" :value 256}
                      {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                      {:name "zoom" :expr "ceil(zoom_precise)"}
                      {:name "tilesCount" :expr "pow(2,zoom)"}
                      {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                      {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                      {:name "basePoint" :expr "invert('projection',[0,0])"}
                      {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                      {:name "di" :expr "floor(dii)"}
                      {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                      {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                      {:name "dj" :expr "floor(djj)"}
                      {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                      {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                     :layer
                     [[:if :condi/geo-background?
                       {:data {:name "tile_list"
                               :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                        :transform
                        [{:calculate "sequence(0,maxTiles)" :as "b"}
                         {:flatten ["b"]}
                         {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                         {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                         {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                        :mark {:type "image"
                               :opacity 0.5
                               :background "#000000"
                               :fill "#000000"
                               :width {:signal "tileSize"}
                               :height {:signal "tileSize"}}
                        :encoding {:x {:field "x"
                                       :type "quantitative"
                                       :scale nil}
                                   :y {:field "y"
                                       :type "quantitative"
                                       :scale nil}
                                   :url {:field "url" :type "nominal"}}}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]

                      {:data {:values :query-preview}
                         ;:params [{:name "clicked" :select "point"}]
                       :projection {:type "mercator"
                                    :scale {:expr "scale"}
                                    :center [{:signal "centerX"}
                                             {:signal "centerY"}]
                                    :translate [{:signal "tx"}
                                                {:signal "ty"}]}
                       :mark {:type "point"}
                       :encoding
                       {:latitude {:field :lat-field
                                   :type "quantitative"}
                        :size {:field nil
                               :type "quantitative"}
                        :color {:field :color-field
                                :scale {:scheme "darkmulti"}
                                :type "quantitative"}
                        :longitude {:field :long-field
                                    :type "quantitative"}}
                       :background "transparent"}


                      [:if :condi/us-counties?
                       {:data
                        {:name "us-counties"
                         :url "assets/vega/us-10m.json"
                         :format {:type "topojson"
                                  :feature "counties"}}
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}
                        :mark "geoshape"
                        :encoding {:fill {:value "#a500ff22"}
                                   :fillOpacity {:value 0.1}
                                   :stroke {:value "#FFA50022"}
                                   :strokeWidth {:value 2}}
                        :background "transparent"}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]


                      [:if :condi/us-states?
                       {:data
                        {:name "us-states"
                         :url "assets/vega/us-10m.json"
                         :format {:type "topojson"
                                  :feature "states"}}
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}
                        :mark "geoshape"
                        :encoding {:fill {:value "#FFA50044"}
                                   :fillOpacity {:value 0.1}
                                   :stroke {:value "#FFA50044"}
                                   :strokeWidth {:value 2}}
                        :background "transparent"}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]


                      [:if :condi/country-lines?
                       {:data
                        {:name "world"
                         :url "assets/vega/world-110m.json"
                         :format {:type "topojson"
                                  :feature "countries"}}
                        :mark "geoshape"
                        :encoding {:fill {:value "#FFA500"}
                                   :fillOpacity {:value 0.1}
                                   :stroke {:value "#FFA500"}
                                   :strokeWidth {:value 2}}
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]]
                     :background "transparent"
                     :config {:view {:stroke "transparent"}}}
                    {:actions false}]]
                  :base-score 1}


 :us-states-fips-map-dim {:axes {:state [:fips-state-code?]
                                 :color [:dimension?]}
                          :sql-maps [{:select [:state-field :color-field]
                                      :from [:table]
                                      :group-by [:state-field]}]

                          :conditionals {:country-lines? false
                                         :us-counties? false
                                         :us-states? true
                                         :geo-background? false}

                          :library-shapes
                          [:box :child
                           [:vega-lite
                            {:width "container"
                             :height :panel-height+50
                             :autosize "none"
                             :padding {:top 0 :bottom 0 :left 0 :right 0}
                             :params
                             [{:name "tx" :expr "width/2"}
                              {:name "ty" :expr "height/2"}
                              {:name "zoom_precise"
                               :value 4 ;:query-preview-2/long_diff.0 ;10
                               :bind {:input "range" :min 2 :max 30 :step 0.05}}
                              {:name "centerY"
                               :value 38.76
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                      :min -60
                                      :max 60
                                      :step 0.01}}
                              {:name "centerX"
                               :value -97.17
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                      :min -180
                                      :max 180
                                      :step 0.01}}
                              {:name "baseTileSize" :value 256}
                              {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                              {:name "zoom" :expr "ceil(zoom_precise)"}
                              {:name "tilesCount" :expr "pow(2,zoom)"}
                              {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                              {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                              {:name "basePoint" :expr "invert('projection',[0,0])"}
                              {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                              {:name "di" :expr "floor(dii)"}
                              {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                              {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                              {:name "dj" :expr "floor(djj)"}
                              {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                              {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                             :layer
                             [[:if :condi/geo-background?
                               {:data {:name "tile_list"
                                       :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                :transform
                                [{:calculate "sequence(0,maxTiles)" :as "b"}
                                 {:flatten ["b"]}
                                 {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                 {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                 {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                :mark {:type "image"
                                       :opacity 0.5
                                       :background "#000000"
                                       :fill "#000000"
                                       :width {:signal "tileSize"}
                                       :height {:signal "tileSize"}}
                                :encoding {:x {:field "x"
                                               :type "quantitative"
                                               :scale nil}
                                           :y {:field "y"
                                               :type "quantitative"
                                               :scale nil}
                                           :url {:field "url" :type "nominal"}}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                              [:if :condi/us-counties?
                               {:data
                                {:name "us-counties"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "counties"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :encoding {:fill {:value "#a500ff22"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA50022"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/us-states?
                               {:data
                                {:name "us-states"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "states"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :transform [{:lookup :id
                                             :from {:data {:values :query-preview}
                                                    :key :state-field
                                                    :fields [:state-field
                                                             :color-field]}}]
                                :encoding {:color {:field :color-field
                                                   :type "nominal"
                                                   :scale {:scheme "spectral"}}
                                           :stroke {:value "#FFA50077"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/country-lines?
                               {:data
                                {:name "world"
                                 :url "assets/vega/world-110m.json"
                                 :format {:type "topojson"
                                          :feature "countries"}}
                                :mark "geoshape"
                                :encoding {:fill {:value "#FFA500"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA500"}
                                           :strokeWidth {:value 2}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]]
                             :background "transparent"
                             :config {:view {:stroke "transparent"}}}
                            {:actions false}]]
                          :base-score 1}


 :us-states-fips-map-agg {:axes {:state [:fips-state-code?]
                                 :color [:measure?]}
                          :sql-maps [{:select [:state-field [[:sum :color-field] :color-field]]
                                      :from [:table]
                                      :group-by [:state-field]}]

                          :conditionals {:country-lines? false
                                         :us-counties? false
                                         :us-states? true
                                         :geo-background? false}

                          :library-shapes
                          [:box :child
                           [:vega-lite
                            {:width "container"
                             :height :panel-height+50
                             :autosize "none"
                             :padding {:top 0 :bottom 0 :left 0 :right 0}
                             :params
                             [{:name "tx" :expr "width/2"}
                              {:name "ty" :expr "height/2"}
                              {:name "zoom_precise"
                               :value 4 ;:query-preview-2/long_diff.0 ;10
                               :bind {:input "range" :min 2 :max 30 :step 0.05}}
                              {:name "centerY"
                               :value 38.76
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                      :min -60
                                      :max 60
                                      :step 0.01}}
                              {:name "centerX"
                               :value -97.17
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                      :min -180
                                      :max 180
                                      :step 0.01}}
                              {:name "baseTileSize" :value 256}
                              {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                              {:name "zoom" :expr "ceil(zoom_precise)"}
                              {:name "tilesCount" :expr "pow(2,zoom)"}
                              {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                              {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                              {:name "basePoint" :expr "invert('projection',[0,0])"}
                              {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                              {:name "di" :expr "floor(dii)"}
                              {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                              {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                              {:name "dj" :expr "floor(djj)"}
                              {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                              {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                             :layer
                             [[:if :condi/geo-background?
                               {:data {:name "tile_list"
                                       :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                :transform
                                [{:calculate "sequence(0,maxTiles)" :as "b"}
                                 {:flatten ["b"]}
                                 {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                 {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                 {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                :mark {:type "image"
                                       :opacity 0.5
                                       :background "#000000"
                                       :fill "#000000"
                                       :width {:signal "tileSize"}
                                       :height {:signal "tileSize"}}
                                :encoding {:x {:field "x"
                                               :type "quantitative"
                                               :scale nil}
                                           :y {:field "y"
                                               :type "quantitative"
                                               :scale nil}
                                           :url {:field "url" :type "nominal"}}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                              [:if :condi/us-counties?
                               {:data
                                {:name "us-counties"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "counties"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :encoding {:fill {:value "#a500ff22"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA50022"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/us-states?
                               {:data
                                {:name "us-states"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "states"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :transform [{:lookup :id
                                             :from {:data {:values :query-preview}
                                                    :key :state-field
                                                    :fields [:state-field
                                                             :color-field]}}]
                                :encoding {:color {:field :color-field
                                                   :type "quantitative"
                                                   :scale {:scheme "spectral"}}
                                           :stroke {:value "#FFA50077"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/country-lines?
                               {:data
                                {:name "world"
                                 :url "assets/vega/world-110m.json"
                                 :format {:type "topojson"
                                          :feature "countries"}}
                                :mark "geoshape"
                                :encoding {:fill {:value "#FFA500"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA500"}
                                           :strokeWidth {:value 2}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]]
                             :background "transparent"
                             :config {:view {:stroke "transparent"}}}
                            {:actions false}]]
                          :base-score 1}


 :us-counties-fips-map-dim {:axes {:county [:fips-county-code?]
                                   :color [:dimension?]}
                            :sql-maps [{:select [:county-field :color-field]
                                        :from [:table]
                                        :group-by [:county-field]}]

                            :conditionals {:country-lines? false
                                           :us-counties? true
                                           :us-states? false
                                           :geo-background? false}

                            :library-shapes
                            [:box :child
                             [:vega-lite
                              {:width "container"
                               :height :panel-height+50
                               :autosize "none"
                               :padding {:top 0 :bottom 0 :left 0 :right 0}
                               :params
                               [{:name "tx" :expr "width/2"}
                                {:name "ty" :expr "height/2"}
                                {:name "zoom_precise"
                                 :value 4 ;:query-preview-2/long_diff.0 ;10
                                 :bind {:input "range" :min 2 :max 30 :step 0.05}}
                                {:name "centerY"
                                 :value 38.76
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                        :min -60
                                        :max 60
                                        :step 0.01}}
                                {:name "centerX"
                                 :value -97.17
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                        :min -180
                                        :max 180
                                        :step 0.01}}
                                {:name "baseTileSize" :value 256}
                                {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                                {:name "zoom" :expr "ceil(zoom_precise)"}
                                {:name "tilesCount" :expr "pow(2,zoom)"}
                                {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                                {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                                {:name "basePoint" :expr "invert('projection',[0,0])"}
                                {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                                {:name "di" :expr "floor(dii)"}
                                {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                                {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                                {:name "dj" :expr "floor(djj)"}
                                {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                                {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                               :layer
                               [[:if :condi/geo-background?
                                 {:data {:name "tile_list"
                                         :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                  :transform
                                  [{:calculate "sequence(0,maxTiles)" :as "b"}
                                   {:flatten ["b"]}
                                   {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                   {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                   {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                  :mark {:type "image"
                                         :opacity 0.5
                                         :background "#000000"
                                         :fill "#000000"
                                         :width {:signal "tileSize"}
                                         :height {:signal "tileSize"}}
                                  :encoding {:x {:field "x"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :y {:field "y"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :url {:field "url" :type "nominal"}}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                                [:if :condi/us-counties?
                                 {:data
                                  {:name "us-counties"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "counties"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :transform [{:lookup :id
                                               :from {:data {:values :query-preview}
                                                      :key :county-field
                                                      :fields [:county-field
                                                               :color-field]}}]
                                  :encoding {:color {:field :color-field
                                                     :type "nominal"
                                                     :scale {:scheme "spectral"}}
                                             :stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/us-states?
                                 {:data
                                  {:name "us-states"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "states"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :encoding {:stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/country-lines?
                                 {:data
                                  {:name "world"
                                   :url "assets/vega/world-110m.json"
                                   :format {:type "topojson"
                                            :feature "countries"}}
                                  :mark "geoshape"
                                  :encoding {:fill {:value "#FFA500"}
                                             :fillOpacity {:value 0.1}
                                             :stroke {:value "#FFA500"}
                                             :strokeWidth {:value 2}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]]
                               :background "transparent"
                               :config {:view {:stroke "transparent"}}}
                              {:actions false}]]
                            :base-score 1}


 :us-counties-fips-map-agg {:axes {:county [:fips-county-code?]
                                   :color [:measure?]}
                            :sql-maps [{:select [:county-field [[:sum :color-field] :color-field]]
                                        :from [:table]
                                        :group-by [:county-field]}]

                            :conditionals {:country-lines? false
                                           :us-counties? true
                                           :us-states? false
                                           :geo-background? false}

                            :library-shapes
                            [:box :child
                             [:vega-lite
                              {:width "container"
                               :height :panel-height+50
                               :autosize "none"
                               :padding {:top 0 :bottom 0 :left 0 :right 0}
                               :params
                               [{:name "tx" :expr "width/2"}
                                {:name "ty" :expr "height/2"}
                                {:name "zoom_precise"
                                 :value 4 ;:query-preview-2/long_diff.0 ;10
                                 :bind {:input "range" :min 2 :max 30 :step 0.05}}
                                {:name "centerY"
                                 :value 38.76
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                        :min -60
                                        :max 60
                                        :step 0.01}}
                                {:name "centerX"
                                 :value -97.17
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                        :min -180
                                        :max 180
                                        :step 0.01}}
                                {:name "baseTileSize" :value 256}
                                {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                                {:name "zoom" :expr "ceil(zoom_precise)"}
                                {:name "tilesCount" :expr "pow(2,zoom)"}
                                {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                                {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                                {:name "basePoint" :expr "invert('projection',[0,0])"}
                                {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                                {:name "di" :expr "floor(dii)"}
                                {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                                {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                                {:name "dj" :expr "floor(djj)"}
                                {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                                {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                               :layer
                               [[:if :condi/geo-background?
                                 {:data {:name "tile_list"
                                         :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                  :transform
                                  [{:calculate "sequence(0,maxTiles)" :as "b"}
                                   {:flatten ["b"]}
                                   {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                   {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                   {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                  :mark {:type "image"
                                         :opacity 0.5
                                         :background "#000000"
                                         :fill "#000000"
                                         :width {:signal "tileSize"}
                                         :height {:signal "tileSize"}}
                                  :encoding {:x {:field "x"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :y {:field "y"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :url {:field "url" :type "nominal"}}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                                [:if :condi/us-counties?
                                 {:data
                                  {:name "us-counties"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "counties"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :transform [{:lookup :id
                                               :from {:data {:values :query-preview}
                                                      :key :county-field
                                                      :fields [:county-field
                                                               :color-field]}}]
                                  :encoding {:color {:field :color-field
                                                     :type "nominal"
                                                     :scale {:scheme "spectral"}}
                                             :stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/us-states?
                                 {:data
                                  {:name "us-states"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "states"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :encoding {:stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/country-lines?
                                 {:data
                                  {:name "world"
                                   :url "assets/vega/world-110m.json"
                                   :format {:type "topojson"
                                            :feature "countries"}}
                                  :mark "geoshape"
                                  :encoding {:fill {:value "#FFA500"}
                                             :fillOpacity {:value 0.1}
                                             :stroke {:value "#FFA500"}
                                             :strokeWidth {:value 2}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]]
                               :background "transparent"
                               :config {:view {:stroke "transparent"}}}
                              {:actions false}]]
                            :base-score 1}

;;  :v-param-buttons  {:axes {:dim [:and :dimension?
;;                                  :is-string?
;;                                  [:or :low-cardinality? :very-low-cardinality?]]}
;;                     :sql-maps [{:select [:dim-field]
;;                                 :from [:table]
;;                                 :group-by [:dim-field]
;;                                 :order-by [:dim-field]}
;;                                {:vselect
;;                                 [:box :size "auto"
;;                                  :width :panel-width+70-px
;;                                  :align :center
;;                                  :justify :center :attr
;;                                  {:on-click [:set-vsql-parameter :dim-field :dim-field]} :style
;;                                  {:border [:if [:= :dim-field :panel-key/dim-field]
;;                                            "4px solid orange" "4px solid #ffffff04"]
;;                                   :color [:if [:= :dim-field :panel-key/dim-field]
;;                                           "#ffffff" "inherit"]
;;                                   :cursor "pointer"
;;                                   :font-size "33px"}
;;                                  :child [:string :dim-field]]
;;                                 :from :query-preview}]

;;                     :conditionals {:true? [:= 1 1]}

;;                     :library-shapes
;;                     [:v-box :size "auto" :align :center :justify :center
;;                      :height :panel-height+50-px
;;                      :gap "10px" :children :query-preview-2]
;;                     :base-score 1}

;;  :h-param-buttons  {:axes {:dim [:and :dimension?
;;                                  :is-string?
;;                                  [:or :low-cardinality? :very-low-cardinality?]
;;                                 ;[:and [:not :is-date?] [:not :is-datetime?]]
;;                                  ]}
;;                     :sql-maps [{:select [:dim-field]
;;                                 :from [:table]
;;                                 :group-by [:dim-field]
;;                                 :order-by [:dim-field]}
;;                                {:vselect
;;                                 [:box :size "auto"
;;                                  ;:height :panel-height-px 
;;                                  :height :panel-height+50-px
;;                                  :align :center
;;                                  :justify :center
;;                                  :attr
;;                                  {:on-click [:set-vsql-parameter :dim-field :dim-field]} :style
;;                                  {:border [:if [:= :dim-field :panel-key/dim-field]
;;                                            "4px solid orange" "4px solid #ffffff04"]
;;                                   :color [:if [:= :dim-field :panel-key/dim-field]
;;                                           "#ffffff" "inherit"]
;;                                   :cursor "pointer"
;;                                   :font-size "33px"}
;;                                  :child [:string :dim-field]]
;;                                 :from :query-preview}]

;;                    ;:conditionals {:testcc [:= 1 1]}

;;                     :library-shapes
;;                     [:h-box :size "auto" :align :center :justify :center
;;                      ;:width :panel-width-px
;;                      :width :panel-width+80-px
;;                      :gap "10px" :children :query-preview-2]
;;                     :base-score 1}

 :nivo-calendar-sum {:axes {:x [:or :is-date? :looks-like-date?]
                            :y [:measure?]}

                     :sql-maps [{:select [[[[:sum :y-field]] :value] [:x-field :day]]
                                 :from [:table]
                                 :group-by [:x-field]}]

                     :category "nivo"
                     :library-shapes [:nivo-calendar
                                      {:labelTextColor "#423939"
                                       :emptyColor "#00000000"
                                       :axisLeft {:tickRotation 0
                                                  :legendPosition "middle"
                                                  :legendOffset -65}
                                       :dayBorderColor "#ffffff10"
                                       :enableLabel false
                                       :motionDamping 10
                                       :axisBottom {:tickRotation 0
                                                    :legendPosition "middle"
                                                    :legendOffset 40}
                                       :inner-padding 0
                                       :width :panel-width+70
                                       :monthBorderColor "#ffffff15"
                                       :colors ["#2a4858" "#294d5d" "#275163" "#255667" "#225b6c"
                                                "#1e6071" "#1a6575" "#156a79" "#0e6f7d" "#057480"
                                                "#007983" "#007e86" "#008488" "#00898a" "#008e8c"
                                                "#00938d" "#00988e" "#039d8f" "#12a28f" "#1ea78f"
                                                "#28ac8f" "#32b18e" "#3cb68d" "#46bb8c" "#50bf8b"
                                                "#5ac489" "#64c987" "#6ecd85" "#79d283" "#83d681"
                                                "#8eda7f" "#99de7c" "#a5e27a" "#b0e678" "#bcea75"
                                                "#c8ed73" "#d4f171" "#e0f470" "#edf76f" "#fafa6e"
                                                "#fafa6e" "#faf568" "#faf162" "#faec5d" "#fae757"
                                                "#f9e352" "#f9de4c" "#f9d947" "#f9d441" "#f9cf3c"
                                                "#f8cb37" "#f8c632" "#f8c12c" "#f8bc27" "#f7b722"
                                                "#f7b21d" "#f6ad17" "#f6a811" "#f6a30a" "#f59e04"
                                                "#f49800" "#f49300" "#f38e00" "#f28800" "#f28300"
                                                "#f17d00" "#f07800" "#ef7200" "#ee6c00" "#ed6600"
                                                "#ec6000" "#eb5a00" "#ea5300" "#e84c00" "#e74500"
                                                "#e53d00" "#e43502" "#e22b05" "#e11e08"
                                                "#df0b0b"]
                                       :theme :theme/nivo-defaults
                                       :click {:x :day :y :value}
                                       :padding 0.1
                                       :enableGridX true
                                       :border-radius 2
                                       :enableGridY true
                                       :height :panel-height+50
                                       :margin {:top 5 :right 5 :bottom 50 :left 45}
                                       :data :query-preview}]
                     :base-score 1}
 
;;  :basic-line-nivo {:axes {:x [:or :is-date? :looks-like-date? :looks-like-datetime?]
;;                           :y [:measure?]}

;;                    :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
;;                                :from [:table]
;;                                :group-by [:x-field]}]
;;                    :category "nivo"
;;                    :library-shapes
;;                    [:nivo-line-chart
;;                     {:width :panel-width+70
;;                      :height :panel-height+50
;;                      :margin {:top 5 :right 5 :bottom 50 :left 45}
;;                      :click {:x :x-field :y :y-field} ;; for click actions dim keys
;;                      :data :query-preview ; :table ;data
;;                      :transformation-map {:transform-select [[[:sum :y-field] :y] [:x-field :x]]
;;                                           :nest-by ["single"]}
;;                      ;:layout "vertical"
;;                      ;:groupMode "stacked" ; grouped
;;                      :enableArea false
;;                      :lineWidth 3
;;                      :curve "natural"
;;                      :enablePoints true
;;                      :pointSize 7
;;                      :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
;;                      :indexBy :x-field
;;                      :keys [:y-field]
;;                      :labelTextColor "#423939"
;;                      :colorBy "id" ;"indexValue"
;;                      :theme :theme/nivo-defaults
;;                      :axisLeft {:tickRotation 0
;;                                 :legendPosition "middle"
;;                                 :legendOffset -65
;;                                    ;:legend ":sightings-sum"
;;                                 }
;;                      :axisBottom {:tickRotation 0
;;                                   :legendPosition "middle"
;;                                   :legendOffset 40
;;                                      ;:legend ":season"
;;                                   }
;;                      :enableGridX true
;;                      :enableGridY true
;;                      :enableLabel false
;;                      :padding 0.1
;;                      :inner-padding 0
;;                      :border-radius 2}]
;;                    :base-score 1}

;;  :basic-line-color-nivo {:axes {:x [:or :is-date? :looks-like-date? :looks-like-datetime?]
;;                                 :color [:and :dimension?
;;                                         [:or :low-cardinality? :very-low-cardinality?]
;;                                         [:or :is-string? :is-year? :is-month?]
;;                                         [:and [:not :is-date?] [:not :is-datetime?]]]
;;                                 :y [:measure?]}

;;                          :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
;;                                      :from [:table]
;;                                      :group-by [:x-field :color-field]}]

;;                          :library-shapes
;;                          [:nivo-line-chart
;;                           {:width :panel-width+70
;;                            :height :panel-height+50
;;                            :margin {:top 5 :right 5 :bottom 50 :left 45}
;;                            :click {:x :x-field :y :y-field :c :color-field} ;; for click actions dim keys
;;                            :data :query-preview ; :table ;data
;;                            :transformation-map {:transform-select [[[:sum :y-field] :y] [:x-field :x]]
;;                                                 :fill-gaps? true
;;                                                 :order-nest-by :x
;;                                                 :nest-by [:color-field]}
;;                            ;:layout "vertical"
;;                            ;:groupMode "stacked" ; grouped
;;                            :enableArea false
;;                            :lineWidth 3
;;                            :curve "natural"
;;                            :enablePoints true
;;                            :pointSize 7
;;                            :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
;;                            :indexBy :x-field
;;                             ;:keys [:y-field]
;;                            :labelTextColor "#423939"
;;                            :colorBy "id" ;"indexValue"
;;                            :theme :theme/nivo-defaults
;;                            :axisLeft {:tickRotation 0
;;                                       :legendPosition "middle"
;;                                       :legendOffset -65
;;                                                              ;:legend ":sightings-sum"
;;                                       }
;;                            :axisBottom {:tickRotation 0
;;                                         :legendPosition "middle"
;;                                         :legendOffset 40
;;                                                                ;:legend ":season"
;;                                         }
;;                            :enableGridX true
;;                            :enableGridY true
;;                            :enableLabel true
;;                            :padding 0.1
;;                            :inner-padding 0
;;                            :border-radius 2}]
;;                          :base-score 1}

 :pie-nivo {:axes {:x [:and :dimension?
                       [:or :low-cardinality? :very-low-cardinality?  ]
                       ]
                   :y [:measure?]}

            :sql-maps [{:select [[[:sum :y-field] :value]
                                 [:x-field :id]]
                        :from [:table]
                        :group-by [:x-field]}]

            :category "nivo"
            :library-shapes
            [:nivo-pie-chart
             {:padAngle 0.7
              :innerRadius 0.5
              :width :panel-width+70
              :arcLinkLabelsThickness 4
              :borderWidth 2
              :cornerRadius 3
              :activeOuterRadiusOffset 8
              :theme :theme/nivo-defaults
              :arcLinkLabelsSkipAngle 10
              :click {:c :x-field :y :y-field}
              :arcLabelsSkipAngle 10
              :height :panel-height+50
              :margin {:top 50 :right 50 :bottom 50 :left 45}
              :data :query-preview
              :arcLinkLabelsTextColor "#ffffff"}]
            :base-score 1}

;;  :waffle-nivo {:axes {:x [:and :dimension?
;;                           [:or :low-cardinality? :very-low-cardinality? ; :medium-cardinality?
;;                            ]
;;                                ;[:or :is-string? :is-year? :is-month?]
;;                                ;[:and [:not :is-date?] [:not :is-datetime?]]
;;                           ]
;;                       :y [:measure?]}

;;                :sql-maps [{:select [[[:sum :y-field] :value]
;;                                     [:x-field :id]]
;;                            :from [:table]
;;                            :group-by [:x-field]}
;;                           {:select [[[:sum :y-field] :ttl]]
;;                            :from [:table]}]
;;                :category "nivo"
;;                :library-shapes
;;                [:nivo-waffle-chart
;;                 {:total 100 ; :query-preview-2/ttl.0
;;                  :rows 18
;;                  :columns 14
;;                  :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
;;                  :padding 1
;;                  :borderRadius 3
;;                  :width :panel-width+70
;;                  :theme :theme/nivo-defaults
;;                  :click {:c :x-field :y :y-field}
;;                  :height :panel-height+50
;;                  :margin {:top 5 :right 5 :bottom 5 :left 5}
;;                  :data :query-preview}]
;;                :base-score 1}

 :scatterplot-nivo {:axes {:x [:and [:measure?] [:not :is-rowcount?]]
                                 ;:color [:and :dimension?
                                 ;        [:or :low-cardinality? :very-low-cardinality?]
                                 ;        [:or :is-string? :is-year? :is-month?]
                                 ;        [:and [:not :is-date?] [:not :is-datetime?]]]
                           :y [:and [:measure?] [:not :is-rowcount?]]}

                    :sql-maps [{:select [:y-field :x-field]  ;; aliasing as original name to lessen confusion?
                                :from [:table]}]
                    :category "nivo"
                    :library-shapes
                    [:nivo-scatterplot
                     {:transformation-map {:transform-select [[:y-field :y] [:x-field :x]]
                                           :fill-gaps? false ;true
                                           :order-nest-by :x
                                           :nest-by ["single"]}
                      :xScale {:type "linear" :min 0 :max "auto"}
                      :yScale {:type "linear" :min 0 :max "auto"}
                      :blendMode "multiply"
                      :axisTop nil
                      :axisRight nil
                      :nodeSize 14 ;; or keyword of size param
                      :axisBottom {:orient "bottom"
                                   :tickSize 5
                                   :tickPadding 5
                                   :tickRotation 0
                                   :legend "weight"
                                   :legendPosition "middle"
                                   :legendOffset 46}
                      :axisLeft {:orient "left"
                                 :tickSize 5
                                 :tickPadding 5
                                 :tickRotation 0
                                 :legend "size"
                                 :legendPosition "middle"
                                 :legendOffset -60}
                      :legends [{:anchor "bottom-right"
                                 :direction "column"
                                 :justify false
                                 :translateX 130
                                 :translateY 0
                                 :itemWidth 100
                                 :itemHeight 12
                                 :itemsSpacing 5
                                 :itemDirection "left-to-right"
                                 :symbolSize 12
                                 :symbolShape "circle"
                                 :effects
                                 {:on "hover" :style {:itemOpacity 1}}}]
                      :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
                      :padding 1
                      :borderRadius 3
                      :width :panel-width+70
                      :theme :theme/nivo-defaults
                      :click {:c :x-field :y :y-field}
                      :height :panel-height+50
                      :margin {:top 5 :right 5 :bottom 45 :left 45}
                      :data :query-preview}]
                    :base-score 1}

 :scatterplot-nivo-color {:axes {:x [:and [:measure?] [:not :is-rowcount?]]
                                 :color [:and :dimension?
                                         [:or :low-cardinality? :very-low-cardinality?]
                                         [:or :is-string? :is-year? :is-month?]
                                         [:and [:not :is-date?] [:not :is-datetime?]]]
                                 :y [:and [:measure?] [:not :is-rowcount?]]}

                          :sql-maps [{:select [:y-field :x-field :color-field]  ;; aliasing as original name to lessen confusion?
                                      :from [:table]}]
                          :category "nivo"
                          :library-shapes
                          [:nivo-scatterplot
                           {:transformation-map {:transform-select [[:y-field :y] [:x-field :x]]
                                                 :fill-gaps? false ;true
                                                 :order-nest-by :x
                                                 :nest-by [:color-field]}
                            :xScale {:type "linear" :min 0 :max "auto"}
                            :yScale {:type "linear" :min 0 :max "auto"}
                            :blendMode "multiply"
                            :axisTop nil
                            :axisRight nil
                            :nodeSize 14 ;; or keyword of size param
                            :axisBottom {:orient "bottom"
                                         :tickSize 5
                                         :tickPadding 5
                                         :tickRotation 0
                                         :legend "weight"
                                         :legendPosition "middle"
                                         :legendOffset 46}
                            :axisLeft {:orient "left"
                                       :tickSize 5
                                       :tickPadding 5
                                       :tickRotation 0
                                       :legend "size"
                                       :legendPosition "middle"
                                       :legendOffset -60}
                            :legends [{:anchor "bottom-right"
                                       :direction "column"
                                       :justify false
                                       :translateX 130
                                       :translateY 0
                                       :itemWidth 100
                                       :itemHeight 12
                                       :itemsSpacing 5
                                       :itemDirection "left-to-right"
                                       :symbolSize 12
                                       :symbolShape "circle"
                                       :effects
                                       {:on "hover" :style {:itemOpacity 1}}}]
                            :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
                            :padding 1
                            :borderRadius 3
                            :width :panel-width+70
                            :theme :theme/nivo-defaults
                            :click {:c :x-field :y :y-field}
                            :height :panel-height+50
                            :margin {:top 5 :right 5 :bottom 45 :left 45}
                            :data :query-preview}]
                          :base-score 1}

 :scatterplot-nivo-size {:axes {:x [:and [:measure?] [:not :is-rowcount?]]
                                :size [:and [:measure?] [:not :is-rowcount?]]
                                :y [:and [:measure?] [:not :is-rowcount?]]}

                         :sql-maps [{:select [:y-field :x-field :size-field]  ;; aliasing as original name to lessen confusion?
                                     :from [:table]}]
                         :category "nivo"
                         :library-shapes
                         [:nivo-scatterplot
                          {:transformation-map {:transform-select [[:y-field :y] [:x-field :x] :size-field]
                                                :fill-gaps? false ;true
                                                :order-nest-by :x
                                                :nest-by ["single"]}
                           :xScale {:type "linear" :min 0 :max "auto"}
                           :yScale {:type "linear" :min 0 :max "auto"}
                           :blendMode "multiply"
                           :axisTop nil
                           :axisRight nil
                           :nodeSize 14 ;; or keyword of size param
                           :axisBottom {:orient "bottom"
                                        :tickSize 5
                                        :tickPadding 5
                                        :tickRotation 0
                                        :legend "weight"
                                        :legendPosition "middle"
                                        :legendOffset 46}
                           :axisLeft {:orient "left"
                                      :tickSize 5
                                      :tickPadding 5
                                      :tickRotation 0
                                      :legend "size"
                                      :legendPosition "middle"
                                      :legendOffset -60}
                           :legends [{:anchor "bottom-right"
                                      :direction "column"
                                      :justify false
                                      :translateX 130
                                      :translateY 0
                                      :itemWidth 100
                                      :itemHeight 12
                                      :itemsSpacing 5
                                      :itemDirection "left-to-right"
                                      :symbolSize 12
                                      :symbolShape "circle"
                                      :effects
                                      {:on "hover" :style {:itemOpacity 1}}}]
                           :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
                           :padding 1
                           :borderRadius 3
                           :width :panel-width+70
                           :theme :theme/nivo-defaults
                           :click {:c :x-field :y :y-field}
                           :height :panel-height+50
                           :margin {:top 5 :right 5 :bottom 45 :left 45}
                           :data :query-preview}]
                         :base-score 1}

 :scatterplot-nivo-color-size {:axes {:x [:and [:measure?] [:not :is-rowcount?]]
                                      :color [:and :dimension?
                                              [:or :low-cardinality? :very-low-cardinality?]
                                              [:or :is-string? :is-year? :is-month?]
                                              [:and [:not :is-date?] [:not :is-datetime?]]]
                                      :size [:and [:measure?] [:not :is-rowcount?]]
                                      :y [:and [:measure?] [:not :is-rowcount?]]}

                               :sql-maps [{:select [:y-field :x-field :size-field :color-field]  ;; aliasing as original name to lessen confusion?
                                           :from [:table]}]
                               :category "nivo"
                               :library-shapes
                               [:nivo-scatterplot
                                {:transformation-map {:transform-select [[:y-field :y] [:x-field :x] :size-field]
                                                      :fill-gaps? false ;true
                                                      :order-nest-by :x
                                                      :nest-by [:color-field]}
                                 :xScale {:type "linear" :min 0 :max "auto"}
                                 :yScale {:type "linear" :min 0 :max "auto"}
                                 :blendMode "multiply"
                                 :axisTop nil
                                 :axisRight nil
                                 :nodeSize :size-field ;; or keyword of size param
                                 :axisBottom {:orient "bottom"
                                              :tickSize 5
                                              :tickPadding 5
                                              :tickRotation 0
                                              :legend "weight"
                                              :legendPosition "middle"
                                              :legendOffset 46}
                                 :axisLeft {:orient "left"
                                            :tickSize 5
                                            :tickPadding 5
                                            :tickRotation 0
                                            :legend "size"
                                            :legendPosition "middle"
                                            :legendOffset -60}
                                 :legends [{:anchor "bottom-right"
                                            :direction "column"
                                            :justify false
                                            :translateX 130
                                            :translateY 0
                                            :itemWidth 100
                                            :itemHeight 12
                                            :itemsSpacing 5
                                            :itemDirection "left-to-right"
                                            :symbolSize 12
                                            :symbolShape "circle"
                                            :effects
                                            {:on "hover" :style {:itemOpacity 1}}}]
                                 :colors :theme/vega-default-color-scheme ;{:scheme "pastel2"}
                                 :padding 1
                                 :borderRadius 3
                                 :width :panel-width+70
                                 :theme :theme/nivo-defaults
                                 :click {:c :x-field :y :y-field}
                                 :height :panel-height+50
                                 :margin {:top 5 :right 5 :bottom 45 :left 45}
                                 :data :query-preview}]
                               :base-score 1}

;;  :naked-scat {:axes {:x [:and [:measure?] [:not :is-rowcount?]]
;;                      :color [:and :dimension?
;;                              [:or :low-cardinality? :very-low-cardinality?]
;;                              [:or :is-string? :is-year? :is-month?]
;;                              [:and [:not :is-date?] [:not :is-datetime?]]]
;;                      ;:size [:and [:measure?] [:not :is-rowcount?]]
;;                      :y [:and [:measure?] [:not :is-rowcount?]]}

;;               :sql-maps [{:select [:y-field :x-field :size-field :color-field]  ;; aliasing as original name to lessen confusion?
;;                           :from [:query-preview]}]
;;               :category "nivo"
;;               :library-shapes []
;;               :base-score 1}

;;  :treemap-nivo-3-levels {:axes {:x1 [:and :dimension?
;;                                      [:or :low-cardinality? :very-low-cardinality?]
;;                                      [:or :is-string? :is-year? :is-month?]
;;                                      [:and [:not :is-date?] [:not :is-datetime?]]]
;;                                 :x2 [:and :dimension?
;;                                      [:or :low-cardinality? :very-low-cardinality?]
;;                                      [:or :is-string? :is-year? :is-month?]
;;                                      [:and [:not :is-date?] [:not :is-datetime?]]]
;;                                 :x3 [:and :dimension?
;;                                      [:or :low-cardinality? :very-low-cardinality?  ]
;;                                      [:or :is-string? :is-year? :is-month?]
;;                                      [:and [:not :is-date?] [:not :is-datetime?]]]
;;                                 :y [:measure?]}

;;                          :sql-maps [{:select [[[:sum :y-field] :y-field] :x1-field :x2-field :x3-field]
;;                                      :from [:table]
;;                                      :group-by [:x1-field :x2-field :x3-field]
;;                                      :order-by [[1 :desc]]}]
;;                          :category "set3"
;;                          :library-shapes
;;                          [:nivo-treemap
;;                           {:orientLabel false
;;                            :labelTextColor "#000000"
;;                            :tile "squarify"
;;                            :identity :name
;;                            :labelSkipSize 12
;;                            :borderColor "#000000"
;;                            :value :y-field
;;                            :enableLabel true
;;                            :width :panel-width+70
;;                            :parentLabelPosition "top"
;;                            :colors {:scheme "nivo"}
;;                            :transformation-map
;;                            {:transform-select [[[:sum :y-field] :y-field]
;;                                                [:x3-field :name]]
;;                             :from [:data]
;;                             :nest-by [:x1-field :x2-field :x3-field]}
;;                            :theme :theme/nivo-defaults
;;                            :leavesOnly false
;;                            :click {:c :x1-field :x :x2-field :y :y-field}
;;                            :label :name
;;                            :parentLabelSize 22
;;                            :parentLabelTextColor "#ffffff"
;;                            :enableParentLabel true
;;                            :parentLabel "id"
;;                            :height :panel-height+50
;;                            :margin {:top 15 :right 5 :bottom 15 :left 15}
;;                            :data :query-preview}]
;;                          :base-score 1}

 :treemap-nivo-2-levels {:axes {:x1 [:and :dimension?
                                     [:or :low-cardinality? :very-low-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                                :x2 [:and :dimension?
                                     [:or :low-cardinality? :very-low-cardinality?]
                                     [:or :is-string? :is-year? :is-month?]
                                     [:and [:not :is-date?] [:not :is-datetime?]]]
                            ;;     :x3 [:and :dimension?
                            ;;          :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                            ;;           ;[:or :is-string? :is-year? :is-month?]
                            ;;          [:and [:not :is-date?] [:not :is-datetime?]]]
                                :y [:measure?]}

                         :sql-maps [{:select [[[:sum :y-field] :y-field] :x1-field :x2-field]
                                     :from [:table]
                                     :group-by [:x1-field :x2-field]
                                     :order-by [[1 :desc]]}]
                         :category "set3"
                         :library-shapes
                         [:nivo-treemap
                          {:orientLabel false
                           :labelTextColor "#000000"
                           :tile "squarify"
                           :identity :name
                           :labelSkipSize 12
                           :borderColor "#000000"
                           :value :y-field
                           :enableLabel true
                           :width :panel-width+70
                           :parentLabelPosition "top"
                           :colors {:scheme "nivo"}
                           :transformation-map
                           {:transform-select [[[:sum :y-field] :y-field]
                                               [:x2-field :name]]
                            :from [:data]
                            :nest-by [:x1-field :x2-field]}
                           :theme :theme/nivo-defaults
                           :leavesOnly false
                           :click {:c :x1-field :x :x2-field :y :y-field}
                           :label :name
                           :parentLabelSize 22
                           :parentLabelTextColor "#ffffff"
                           :enableParentLabel true
                           :parentLabel "id"
                           :height :panel-height+50
                           :margin {:top 15 :right 5 :bottom 15 :left 15}
                           :data :query-preview}]
                         :base-score 1}


 :drop-down-filter  {:axes {:dim [:and :dimension?
                                  :is-string?
                                  :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                  [:and [:not :is-date?] [:not :is-datetime?]]]}
                     :h 2 :w 6
                     :sql-maps [{:select [[:dim-field :id] [:dim-field :label]]
                                 :from [:table]
                                 :group-by [:dim-field]
                                 :order-by [:dim-field]}

                            ;;      {:vselect
                            ;;       [:box :size "auto"
                            ;;      ;:height :panel-height-px 
                            ;;        :height :panel-height+50-px
                            ;;        :align :center
                            ;;        :justify :center
                            ;;        :attr
                            ;;        {:on-click [:set-vsql-parameter :dim-field :dim-field]} :style
                            ;;        {:border [:if [:= :dim-field :panel-key/dim-field]
                            ;;                  "4px solid orange" "4px solid #ffffff04"]
                            ;;         :color [:if [:= :dim-field :panel-key/dim-field]
                            ;;                 "#ffffff" "inherit"]
                            ;;         :cursor "pointer"
                            ;;         :font-size "33px"}
                            ;;        :child [:string :dim-field]]
                            ;;       :from :query-preview}
                                ]

                   ;:conditionals {:testcc [:= 1 1]}

                     :library-shapes
                     ;;  [:h-box :size "auto" :align :center :justify :center
                     ;; ;:width :panel-width-px
                     ;;   :width :panel-width+80-px
                     ;;   :gap "10px" :children :query-preview-2]

                     [:dropdown
                      {:choices :query-preview
                       :width :panel-width+80-px
                       :style {:padding-top "8px"}
                       :model :panel-key/dim-field ;[:atom :panel-key/dim-field] ;(reagent/atom v)
                       :field :dim-field}]

                     :base-score 1}
 


;;  :compound-trend-2 {:axes {:x [:and :dimension?
;;                                [:or :looks-like-date? :looks-like-datetime?
;;                                 :is-date? :is-datetime?]]
;;                            :y [:measure?]}
;;                     :w 8
;;                     :h 6
;;                     :selected-view :grid
;;                     :sql-maps [{:select [[[[:sum :y-field]] :agg] :x-field]
;;                                 :from [:table]
;;                                 :order-by [[:x-field :desc]]
;;                                 :group-by [:x-field]}
;;                                {:select [[[:max [:round
;;                                                  [:raw
;;                                                   ["(100 * ((" :query-preview/agg.0
;;                                                    ".0 - " :query-preview/agg.1
;;                                                    ".0) / " :query-preview/agg.0
;;                                                    ".0))"]] 2]] :diff]]}]

;;                     :conditionals {:up-or-down?
;;                                    [:> :query-preview/agg.0
;;                                     :query-preview/agg.1]}

;;                     :library-shapes {:lines [:vega-lite
;;                                              {:layer [{:encoding
;;                                                        {:x {:field :x-field
;;                                                             :type "temporal"
;;                                                             :title nil
;;                                                             :sort "x"}
;;                                                         :y {:aggregate "sum"
;;                                                             :field :agg
;;                                                             :title nil
;;                                                             :scale {:zero false}
;;                                                             :type "quantitative"}
;;                                                         :row {:field nil :legend nil}
;;                                                         :size {:legend nil}
;;                                                         :shape {:legend nil}
;;                                                         :column {:field nil :legend nil}
;;                                                         :color {:scale {:scheme "purples"}
;;                                                                 :legend nil
;;                                                                 :field 1
;;                                                                 :type "ordinal"}}
;;                                                        :mark {:type "line"
;;                                                               :interpolate "monotone"
;;                                                               :line true
;;                                                               :point true
;;                                                               :tooltip {:content "encoding"}}}]
;;                                               :data {:values :query-preview}
;;                                               :config {:view {:stroke "transparent"}
;;                                                        :line {:strokeWidth 3}
;;                                                        :axis {:domainColor "#ffffff22"
;;                                                               :grid true
;;                                                               :font "Lato"
;;                                                               :labelColor "#afafaf"
;;                                                               :titleFont "Lato"
;;                                                               :titleColor "#282828"
;;                                                               :labelFont "Lato"
;;                                                               :domain false
;;                                                               :gridColor "#ffffff22"
;;                                                               :tickColor "#ffffff22"
;;                                                               :axisFont "Lato"}
;;                                                        :legend {:labelFont "Lato"
;;                                                                 :legendFont "Lato"
;;                                                                 :labelColor "#ffffff99"
;;                                                                 :titleColor "#ffffff99"
;;                                                                 :stroke "#ffffff99"
;;                                                                 :titleFont "Lato"}
;;                                                        :header {:labelFont "Lato"
;;                                                                 :titleFont "Lato"
;;                                                                 :titleColor "#ffffff99"}
;;                                                        :mark {:font "Lato"}
;;                                                        :title {:font "Lato"
;;                                                                :subtitleFont "Lato"
;;                                                                :labelFont "Lato"
;;                                                                :titleFont "Lato"
;;                                                                :titleColor "#ffffff99"}}
;;                                               :width :panel-width
;;                                               :height :half-panel-height
;;                                               :padding 4
;;                                               :background "transparent"} {:actions false}]
;;                                      :grid [:layout
;;                                             {:panels
;;                                              {:view/*this-block*.lines
;;                                               {:h 0.5 :w 0.99 :root [0 0.5]}
;;                                               :view/*this-block*.hi2
;;                                               {:h 0.5 :w 0.5 :root [0 0]}
;;                                               :empty-h-730
;;                                               {:h 0.5 :w 0.5 :root [0.5 0]}}}]
;;                                      :hi2 [:box :align :center :justify :center :style
;;                                            {:font-size    "106px"
;;                                             :font-weight  700
;;                                             :padding-top  "6px"
;;                                             :padding-left "14px"
;;                                             :margin-top   "-8px"
;;                                             :color        :theme/editor-outer-rim-color
;;                                             :font-family  :theme/base-font} :child
;;                                            "hi!"]}

;;                     :base-score 1}
 
 :recharts-h-bar {:axes {:x [:or
                             [:and :dimension?
                              ;:reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                              :reasonable-cardinality?
                              ]
                             [:or :looks-like-date? :looks-like-datetime?
                              :is-date? :is-datetime?]]
                         :y [:measure?]}

                  :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
                              :from [:table]
                              :group-by [:x-field]}]
                  
                  :category "recharts"
                  :selected-view :reech
                  :library-shapes {:reech [:> :ResponsiveContainer {:width  "100%"
                                                                    :height :panel-height+50}
                                           [:> :BarChart {:data :query-preview
                                                           :margin {:top 5 :bottom 5
                                                                    :right 30 :left 20}}
                                            ;[:> :CartesianGrid {:strokeDasharray "3 3"}]
                                            [:> :CartesianGrid {:strokeDasharray "1 4" :opacity 0.33}]
                                            ;[:> :Legend]
                                              [:> :Tooltip
                                               {:contentStyle {:backgroundColor "#00000099"
                                                               :border          "none"}
                                                :itemStyle    {:color "#ecf0f1"}
                                                :labelStyle   {:color "#3498db"}}]
                                            [:> :XAxis {:dataKey :x-field}]
                                            [:> :Bar {:dataKey :y-field :stroke "#8884d8" :fill "#8884d8" :on-click [:set-recharts-param>]}]
                                            ;[:> :Line {:type "monotone" :dataKey :uv :stroke "#82ca9d"}]
                                            ]]}
                  :base-score 1}
 
  :recharts-line {:axes {:x [:or
                             [:and :dimension?
                              :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                              ]
                             [:or :looks-like-date? :looks-like-datetime?
                              :is-date? :is-datetime?]]
                         :y [:measure?]}
 
                  :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
                              :from [:table]
                              :group-by [:x-field]}]
 
                  :category "recharts"
                  :selected-view :reech
                  :library-shapes {:reech [:> :ResponsiveContainer {:width  "100%"
                                                                    :height :panel-height+50}
                                           [:> :LineChart {:data :query-preview
                                                          :margin {:top 5 :bottom 5
                                                                   :right 30 :left 20}}
                                             ;[:> :CartesianGrid {:strokeDasharray "3 3"}]
                                            [:> :CartesianGrid {:strokeDasharray "1 4" :opacity 0.33}]
                                            ;[:> :Legend]
                                              [:> :Tooltip
   {:contentStyle {:backgroundColor "#00000099"
                   :border          "none"}
    :itemStyle    {:color "#ecf0f1"}
    :labelStyle   {:color "#3498db"}}]
                                            [:> :XAxis {:dataKey :x-field}]
                                            [:> :Line {:type "monotone" :dataKey :y-field :stroke "#8884d8" :activeDot {:r 8} :on-click [:set-recharts-param>]}]
                                             ;[:> :Line {:type "monotone" :dataKey :uv :stroke "#82ca9d"}]
                                            ]]}
                  :base-score 1}
 
   :recharts-area {:axes {:x [:or
                            [:and :dimension?
                             :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                             ]
                            [:or :looks-like-date? :looks-like-datetime?
                             :is-date? :is-datetime?]]
                        :y [:measure?]}
 
                 :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
                             :from [:table]
                             :group-by [:x-field]}]

                   :h 9 :w 9
                 :category "recharts"
                 :selected-view :reech
                 :library-shapes {:reech [:> :ResponsiveContainer {:width  "100%"
                                                                   :height :panel-height+50}
                                          [:> :AreaChart {:data :query-preview
                                                          :margin {:top 5 :bottom 5
                                                                   :right 30 :left 20}}
                                              ;[:> :CartesianGrid {:strokeDasharray "3 3"}]
                                           [:> :CartesianGrid {:strokeDasharray "1 4" :opacity 0.33}]
                                           ;[:> :Legend]
                                             [:> :Tooltip
   {:contentStyle {:backgroundColor "#00000099"
                   :border          "none"}
    :itemStyle    {:color "#ecf0f1"}
    :labelStyle   {:color "#3498db"}}]
                                           [:> :XAxis {:dataKey :x-field}]
                                           [:> :Area {:type "monotone" :dataKey :y-field :stroke "#8884d8" :activeDot {:r 8} :on-click [:set-recharts-param>]}]
                                              ;[:> :Line {:type "monotone" :dataKey :uv :stroke "#82ca9d"}]
                                           ]]}
                 :base-score 1}

 
 ;; claude generated
;;  :recharts-scatter {:axes {:x [:measure?]
;;                            :y [:measure?]}
 
;;                     :sql-maps [{:select [:x-field :y-field]
;;                                 :from [:table]}]
 
;;                     :category "recharts"
;;                     :selected-view :reech
;;                     :library-shapes {:reech [:> :ResponsiveContainer {:width "100%"
;;                                                                       :height :panel-height+50}
;;                                              [:> :ScatterChart {:margin {:top 20 :right 20
;;                                                                          :bottom 20 :left 20}}
;;                                               [:> :CartesianGrid {:strokeDasharray "3 3"}]
;;                                               [:> :XAxis {:dataKey :x-field :type "number" :name "X Axis"}]
;;                                               [:> :YAxis {:dataKey :y-field :type "number" :name "Y Axis"}]
;;                                               [:> :Tooltip {:cursor {:strokeDasharray "3 3"}}]
;;                                               [:> :Scatter {:name "Data" :data :query-preview
;;                                                             :fill "#8884d8" :on-click [:set-recharts-param>]}]]]}
;;                     :base-score 1}
 
 ;; claude generated
 :recharts-pie {:axes {:segment [:and :dimension?
                                 [:or :low-cardinality? :very-low-cardinality?  ]]
                       :value [:measure?]}
 
                :sql-maps [{:select [[:segment-field :name] [[:sum :value-field] :value]]
                            :from [:table]
                            :group-by [:segment-field]}]
 
                :category "recharts"
                :selected-view :reech
                :library-shapes {:reech [:> :ResponsiveContainer {:width "100%"
                                                                  :height :panel-height+50}
                                         [:> :PieChart {:margin {:top 20 :right 20
                                                                 :bottom 20 :left 20}}
                                          [:> :Pie {:data :query-preview
                                                    :dataKey :value
                                                    :nameKey :name
                                                    :cx "50%"
                                                    :cy "50%"
                                                    :outerRadius 80
                                                    :fill "#8884d8"
                                                    :label true
                                                    :on-click [:set-recharts-param>]}]
                                            [:> :Tooltip
   {:contentStyle {:backgroundColor "#00000099"
                   :border          "none"}
    :itemStyle    {:color "#ecf0f1"}
    :labelStyle   {:color "#3498db"}}]]]}
                :base-score 1}
 
 ;; claude generated
;;  :recharts-stacked-bar {:axes {:x [:dimension?]
;;                                :y [:measure?]
;;                                :stack [:dimension?]}
 
;;                         :sql-maps [{:select [:x-field :y-field :stack-field]
;;                                     :from [:table]
;;                                     :group-by [:x-field :stack-field]}]
 
;;                         :category "recharts"
;;                         :selected-view :reech
;;                         :library-shapes {:reech [:> :ResponsiveContainer {:width "100%"
;;                                                                           :height :panel-height+50}
;;                                                  [:> :BarChart {:data :query-preview
;;                                                                 :margin {:top 20 :right 30
;;                                                                          :left 20 :bottom 5}}
;;                                                   [:> :CartesianGrid {:strokeDasharray "3 3"}]
;;                                                   [:> :XAxis {:dataKey :x-field}]
;;                                                   [:> :YAxis]
;;                                                     [:> :Tooltip
;;    {:contentStyle {:backgroundColor "#00000099"
;;                    :border          "none"}
;;     :itemStyle    {:color "#ecf0f1"}
;;     :labelStyle   {:color "#3498db"}}]
;;                                                   [:> :Legend]
;;                                                   [:> :Bar {:dataKey :y-field
;;                                                             :stackId "a"
;;                                                             :fill "#8884d8"
;;                                                             :on-click [:set-recharts-param>]}]]]}
;;                         :base-score 1}
 


;;  :recharts-line {:w 8
;;                  :h 6
;;                  :selected-view :reech
;;                  :axes {:x [:or :is-date? :looks-like-date? :looks-like-datetime?]
;;                         :color [:and :dimension?
;;                                 [:or :low-cardinality? :very-low-cardinality?]
;;                                 [:or :is-string? :is-year? :is-month?]
;;                                 [:and [:not :is-date?] [:not :is-datetime?]]]
;;                         :y [:measure?]}

;;                  :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field :color-field]  ;; aliasing as original name to lessen confusion?
;;                              :from [:table]
;;                              :group-by [:x-field :color-field]}]
;;                  :category "recharts"
;;                  :library-shapes {:reech [:> :ResponsiveContainer {:width  "100%"
;;                                                                    :height :panel-height+50}
;;                                           [:> :LineChart {:data :query-preview
;;                                                           :margin {:top 5 :right 30 :left 20 :bottom 5}}
;;                                            [:> :CartesianGrid {:strokeDasharray "3 3"}]
;;                                            [:> :Legend]
;;                                            [:> :XAxis {:dataKey :name}]
;;                                            [:> :Line {:type "monotone" :dataKey :pv :stroke "#8884d8" :activeDot {:r 8}}]
;;                                            [:> :Line {:type "monotone" :dataKey :uv :stroke "#82ca9d"}]
;;                                            ]]}
;;                  :base-score 1}

 
 ;;; test claude generated vega-lite
 :heatmap-2d {:axes {:x [:and :dimension?
                         [:or :low-cardinality? :medium-cardinality?]]
                     :y [:and :dimension?
                         [:or :low-cardinality? :medium-cardinality?]]
                     :color [:measure?]}
 
              :sql-maps [{:select [:x-field :y-field [[[:sum :color-field]] :color-field]]
                          :from [:table]
                          :group-by [:x-field :y-field]}]
 
              :library-shapes
              [:vega-lite
               {:layer
                [{:encoding
                  {:x {:field :x-field :type "ordinal"}
                   :y {:field :y-field :type "ordinal"}
                   :color {:field :color-field
                           :type "quantitative"
                           :scale {:scheme "viridis"}}}
                  :mark {:type "rect"
                         :tooltip {:content "encoding"}}}]
                :data {:values :table}} {:actions false}]
              :base-score 1}
 
 :scatter-plot {:axes {:x [:measure?]
                       :y [:measure?]
                       :size [:measure?]
                       :color [:dimension?]}
 
                :sql-maps [{:select [:x-field :y-field :size-field :color-field]
                            :from [:table]}]
 
                :library-shapes
                [:vega-lite
                 {:layer
                  [{:encoding
                    {:x {:field :x-field :type "quantitative"}
                     :y {:field :y-field :type "quantitative"}
                     :size {:field :size-field :type "quantitative"}
                     :color {:field :color-field :type "nominal"
                             :scale {:scheme "category10"}}}
                    :mark {:type "circle"
                           :opacity 0.7
                           :tooltip {:content "encoding"}}}]
                  :data {:values :table}} {:actions false}]
                :base-score 1}
 
 :stacked-area-chart {:axes {:x [:or [:looks-like-date?] [:looks-like-datetime?]
                                 [:is-date?] [:is-datetime?]]
                             :y [:measure?]
                             :color [:and :dimension?
                                     [:or :low-cardinality? :very-low-cardinality?]]}
 
                      :sql-maps [{:select [:x-field [[[:sum :y-field]] :y-field] :color-field]
                                  :from [:table]
                                  :group-by [:x-field :color-field]}]
 
                      :library-shapes
                      [:vega-lite
                       {:layer
                        [{:encoding
                          {:x {:field :x-field :type "temporal"}
                           :y {:field :y-field
                               :type "quantitative"
                               :stack "zero"}
                           :color {:field :color-field
                                   :type "nominal"
                                   :scale {:scheme "category20b"}}}
                          :mark {:type "area"
                                 :tooltip {:content "encoding"}}}]
                        :data {:values :table}} {:actions false}]
                      :base-score 1}
 
;;  :box-plot {:axes {:x [:and :dimension?
;;                        :reasonable-cardinality? ;; [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
;;                        ]
;;                    :y [:measure?]}
 
;;             :sql-maps [{:select [[[[:sum :y-field]] :y-field] :x-field]
;;                         :from [:table]
;;                         :group-by [:x-field]}]
 
;;             :library-shapes
;;             [:vega-lite
;;              {:layer
;;               [{:encoding
;;                 {:x {:field :x-field :type "ordinal"}
;;                  :y {:field :y-field :type "quantitative"}
;;                  :color {:field :x-field :type "nominal"}}
;;                 :mark {:type "boxplot"
;;                        :extent "min-max"
;;                        :tooltip {:content "encoding"}}}]
;;               :data {:values :table}} {:actions false}]
;;             :base-score 1}
 
;;  :code-test {:axes {:x :true?}
            
;;              :sql-maps []
;;              :runner :clojure
            
;;              :library-shapes
;;              (str :x-field (rand-int 123) "!")
;;              :base-score 1}


 }
