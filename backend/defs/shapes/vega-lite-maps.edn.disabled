
{


 :point-map  {:axes {:lat [:geo-lat?]
                     :long [:geo-long?]}
              :sql-maps [{:select-distinct [:lat-field :long-field]
                          :from [:table]}
                         {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long]
                                   [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat]
                                   [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long]
                                   [[:round
                                     [:raw
                                      ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]] 2] :long_diff]
                                   [[:round
                                     [:raw
                                      ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2] :lat_diff]]
                          :from [:table]
                          :where [:and [:<> :lat-field -1] [:<> :lat-field nil]
                                  [:<> :long-field -1] [:<> :long-field nil]]}]

              :conditionals {:country-lines? true
                             :us-counties? false
                             :us-states? false
                             :geo-background? true}

              :library-shapes
              [:box :child
               [:vega-lite
                {:width "container"
                 :height :panel-height+50
                 :autosize "none"
                 :padding {:top 0 :bottom 0 :left 0 :right 0}
                 :params
                 [{:name "tx" :expr "width/2"}
                  {:name "ty" :expr "height/2"}
                  {:name "zoom_precise"
                   :value :query-preview-2/long_diff.0 ;10
                   :bind {:input "range" :min 2 :max 30 :step 0.05}}
                  {:name "centerY"
                   :value :query-preview-2/a_lat.0 ;42.3341695
                   :bind {:input "range"
                          :min :query-preview-2/min_lat.0
                          :max :query-preview-2/max_lat.0
                          :full-min -60
                          :full-max 60
                          :step 0.000001}}
                  {:name "centerX"
                   :value :query-preview-2/a_long.0 ;-71.04841448
                   :bind {:input "range"
                          :min :query-preview-2/min_long.0
                          :max :query-preview-2/max_long.0
                          :full-min -180
                          :full-max 180
                          :step 0.000001}}
                  {:name "baseTileSize" :value 256}
                  {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                  {:name "zoom" :expr "ceil(zoom_precise)"}
                  {:name "tilesCount" :expr "pow(2,zoom)"}
                  {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                  {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                  {:name "basePoint" :expr "invert('projection',[0,0])"}
                  {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                  {:name "di" :expr "floor(dii)"}
                  {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                  {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                  {:name "dj" :expr "floor(djj)"}
                  {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                  {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                 :layer
                 [[:if :condi/geo-background?
                   {:data {:name "tile_list"
                           :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                    :transform
                    [{:calculate "sequence(0,maxTiles)" :as "b"}
                     {:flatten ["b"]}
                     {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                     {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                     {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                    :mark {:type "image"
                           :opacity 0.5
                           :background "#000000"
                           :fill "#000000"
                           :width {:signal "tileSize"}
                           :height {:signal "tileSize"}}
                    :encoding {:x {:field "x"
                                   :type "quantitative"
                                   :scale nil}
                               :y {:field "y"
                                   :type "quantitative"
                                   :scale nil}
                               :url {:field "url" :type "nominal"}}}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]

                  {:data {:values :query-preview}
                         ;:params [{:name "clicked" :select "point"}]
                   :projection {:type "mercator"
                                :scale {:expr "scale"}
                                :center [{:signal "centerX"}
                                         {:signal "centerY"}]
                                :translate [{:signal "tx"}
                                            {:signal "ty"}]}
                   :mark {:type "point"}
                   :encoding
                   {:latitude {:field :lat-field
                               :type "quantitative"}
                    :size {:field nil
                           :type "quantitative"}
                    :color {:field 1
                            :scale {:scheme "darkmulti"}
                            :type "nominal"}
                    :longitude {:field :long-field
                                :type "quantitative"}}
                   :background "transparent"}


                  [:if :condi/us-counties?
                   {:data
                    {:name "us-counties"
                     :url "assets/vega/us-10m.json"
                     :format {:type "topojson"
                              :feature "counties"}}
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}
                    :mark "geoshape"
                    :encoding {:fill {:value "#a500ff22"}
                               :fillOpacity {:value 0.1}
                               :stroke {:value "#FFA50022"}
                               :strokeWidth {:value 2}}
                    :background "transparent"}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]


                  [:if :condi/us-states?
                   {:data
                    {:name "us-states"
                     :url "assets/vega/us-10m.json"
                     :format {:type "topojson"
                              :feature "states"}}
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}
                    :mark "geoshape"
                    :encoding {:fill {:value "#FFA50044"}
                               :fillOpacity {:value 0.1}
                               :stroke {:value "#FFA50044"}
                               :strokeWidth {:value 2}}
                    :background "transparent"}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]


                  [:if :condi/country-lines?
                   {:data
                    {:name "world"
                     :url "assets/vega/world-110m.json"
                     :format {:type "topojson"
                              :feature "countries"}}
                    :mark "geoshape"
                    :encoding {:fill {:value "#FFA500"}
                               :fillOpacity {:value 0.1}
                               :stroke {:value "#FFA500"}
                               :strokeWidth {:value 2}}
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}
                   {:mark "geoshape"
                    :projection {:type "mercator"
                                 :scale {:expr "scale"}
                                 :center [{:signal "centerX"}
                                          {:signal "centerY"}]
                                 :translate [{:signal "tx"}
                                             {:signal "ty"}]}}]]
                 :background "transparent"
                 :config {:view {:stroke "transparent"}}}
                {:actions false}]]
              :base-score 1}


 :point-map-colors {:axes {:lat [:geo-lat?]
                           :long [:geo-long?]
                           :color [:and :dimension?
                                   :medium-cardinality?
                                   :is-string?
                                    ;:reasonable-cardinality? ;;
                                   [:or :low-cardinality? :very-low-cardinality? :medium-cardinality?]
                                   [:and [:not :is-date?] [:not :is-datetime?]]]}
                    :sql-maps [{:select-distinct [:lat-field :long-field :color-field]
                                :from [:table]}
                               {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long]
                                         [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat]
                                         [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long]
                                         [[:round
                                           [:raw
                                            ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]] 2] :long_diff]
                                         [[:round
                                           [:raw
                                            ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2] :lat_diff]]
                                :from [:table]
                                :where [:and [:<> :lat-field -1] [:<> :lat-field nil]
                                        [:<> :long-field -1] [:<> :long-field nil]]}]

                    :conditionals {:country-lines? true
                                   :us-counties? false
                                   :us-states? false
                                   :geo-background? true}

                    :library-shapes
                    [:box :child
                     [:vega-lite
                      {:width "container"
                       :height :panel-height+50
                       :autosize "none"
                       :padding {:top 0 :bottom 0 :left 0 :right 0}
                       :params
                       [{:name "tx" :expr "width/2"}
                        {:name "ty" :expr "height/2"}
                        {:name "zoom_precise"
                         :value :query-preview-2/long_diff.0 ;10
                         :bind {:input "range" :min 2 :max 30 :step 0.05}}
                        {:name "centerY"
                         :value :query-preview-2/a_lat.0 ;42.3341695
                         :bind {:input "range"
                                :min :query-preview-2/min_lat.0
                                :max :query-preview-2/max_lat.0
                                :full-min -60
                                :full-max 60
                                :step 0.000001}}
                        {:name "centerX"
                         :value :query-preview-2/a_long.0 ;-71.04841448
                         :bind {:input "range"
                                :min :query-preview-2/min_long.0
                                :max :query-preview-2/max_long.0
                                :full-min -180
                                :full-max 180
                                :step 0.000001}}
                        {:name "baseTileSize" :value 256}
                        {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                        {:name "zoom" :expr "ceil(zoom_precise)"}
                        {:name "tilesCount" :expr "pow(2,zoom)"}
                        {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                        {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                        {:name "basePoint" :expr "invert('projection',[0,0])"}
                        {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                        {:name "di" :expr "floor(dii)"}
                        {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                        {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                        {:name "dj" :expr "floor(djj)"}
                        {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                        {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                       :layer
                       [[:if :condi/geo-background?
                         {:data {:name "tile_list"
                                 :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                          :transform
                          [{:calculate "sequence(0,maxTiles)" :as "b"}
                           {:flatten ["b"]}
                           {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                           {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                           {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                          :mark {:type "image"
                                 :opacity 0.5
                                 :background "#000000"
                                 :fill "#000000"
                                 :width {:signal "tileSize"}
                                 :height {:signal "tileSize"}}
                          :encoding {:x {:field "x"
                                         :type "quantitative"
                                         :scale nil}
                                     :y {:field "y"
                                         :type "quantitative"
                                         :scale nil}
                                     :url {:field "url" :type "nominal"}}}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]

                        {:data {:values :query-preview}
                         ;:params [{:name "clicked" :select "point"}]
                         :projection {:type "mercator"
                                      :scale {:expr "scale"}
                                      :center [{:signal "centerX"}
                                               {:signal "centerY"}]
                                      :translate [{:signal "tx"}
                                                  {:signal "ty"}]}
                         :mark {:type "point"}
                         :encoding
                         {:latitude {:field :lat-field
                                     :type "quantitative"}
                          :size {:field nil
                                 :type "quantitative"}
                          :color {:field :color-field
                                  :scale {:scheme "darkmulti"}
                                  :type "nominal"}
                          :longitude {:field :long-field
                                      :type "quantitative"}}
                         :background "transparent"}


                        [:if :condi/us-counties?
                         {:data
                          {:name "us-counties"
                           :url "assets/vega/us-10m.json"
                           :format {:type "topojson"
                                    :feature "counties"}}
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}
                          :mark "geoshape"
                          :encoding {:fill {:value "#a500ff22"}
                                     :fillOpacity {:value 0.1}
                                     :stroke {:value "#FFA50022"}
                                     :strokeWidth {:value 2}}
                          :background "transparent"}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]


                        [:if :condi/us-states?
                         {:data
                          {:name "us-states"
                           :url "assets/vega/us-10m.json"
                           :format {:type "topojson"
                                    :feature "states"}}
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}
                          :mark "geoshape"
                          :encoding {:fill {:value "#FFA50044"}
                                     :fillOpacity {:value 0.1}
                                     :stroke {:value "#FFA50044"}
                                     :strokeWidth {:value 2}}
                          :background "transparent"}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]


                        [:if :condi/country-lines?
                         {:data
                          {:name "world"
                           :url "assets/vega/world-110m.json"
                           :format {:type "topojson"
                                    :feature "countries"}}
                          :mark "geoshape"
                          :encoding {:fill {:value "#FFA500"}
                                     :fillOpacity {:value 0.1}
                                     :stroke {:value "#FFA500"}
                                     :strokeWidth {:value 2}}
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}
                         {:mark "geoshape"
                          :projection {:type "mercator"
                                       :scale {:expr "scale"}
                                       :center [{:signal "centerX"}
                                                {:signal "centerY"}]
                                       :translate [{:signal "tx"}
                                                   {:signal "ty"}]}}]]
                       :background "transparent"
                       :config {:view {:stroke "transparent"}}}
                      {:actions false}]]
                    :base-score 1}

 :point-map-freq {:axes {:lat [:geo-lat?]
                         :long [:geo-long?]
                         :color [:measure?]}
                  :sql-maps [{:select [:lat-field :long-field [[:sum :color-field] :color-field]]
                              :from [:table]
                              :group-by [:lat-field :long-field]}
                             {:select [[[:min :long-field] :min-long] [[:max :long-field] :max-long]
                                       [[:min :lat-field] :min-lat] [[:max :lat-field] :max-lat]
                                       [[:avg :lat-field] :a-lat] [[:avg :long-field] :a-long]
                                       [[:round
                                         [:raw
                                          ["(" [:max :long-field] " - " [:min :long-field] ") * 55"]] 2] :long_diff]
                                       [[:round
                                         [:raw
                                          ["(" [:max :lat-field] " - " [:min :lat-field] ") * 55"]] 2] :lat_diff]]
                              :from [:table]
                              :where [:and [:<> :lat-field -1] [:<> :lat-field nil]
                                      [:<> :long-field -1] [:<> :long-field nil]]}]

                  :conditionals {:country-lines? true
                                 :us-counties? false
                                 :us-states? false
                                 :geo-background? true}

                  :library-shapes
                  [:box :child
                   [:vega-lite
                    {:width "container"
                     :height :panel-height+50
                     :autosize "none"
                     :padding {:top 0 :bottom 0 :left 0 :right 0}
                     :params
                     [{:name "tx" :expr "width/2"}
                      {:name "ty" :expr "height/2"}
                      {:name "zoom_precise"
                       :value :query-preview-2/long_diff.0 ;10
                       :bind {:input "range" :min 2 :max 30 :step 0.05}}
                      {:name "centerY"
                       :value :query-preview-2/a_lat.0 ;42.3341695
                       :bind {:input "range"
                              :min :query-preview-2/min_lat.0
                              :max :query-preview-2/max_lat.0
                              :full-min -60
                              :full-max 60
                              :step 0.000001}}
                      {:name "centerX"
                       :value :query-preview-2/a_long.0 ;-71.04841448
                       :bind {:input "range"
                              :min :query-preview-2/min_long.0
                              :max :query-preview-2/max_long.0
                              :full-min -180
                              :full-max 180
                              :step 0.000001}}
                      {:name "baseTileSize" :value 256}
                      {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                      {:name "zoom" :expr "ceil(zoom_precise)"}
                      {:name "tilesCount" :expr "pow(2,zoom)"}
                      {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                      {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                      {:name "basePoint" :expr "invert('projection',[0,0])"}
                      {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                      {:name "di" :expr "floor(dii)"}
                      {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                      {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                      {:name "dj" :expr "floor(djj)"}
                      {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                      {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                     :layer
                     [[:if :condi/geo-background?
                       {:data {:name "tile_list"
                               :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                        :transform
                        [{:calculate "sequence(0,maxTiles)" :as "b"}
                         {:flatten ["b"]}
                         {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                         {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                         {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                        :mark {:type "image"
                               :opacity 0.5
                               :background "#000000"
                               :fill "#000000"
                               :width {:signal "tileSize"}
                               :height {:signal "tileSize"}}
                        :encoding {:x {:field "x"
                                       :type "quantitative"
                                       :scale nil}
                                   :y {:field "y"
                                       :type "quantitative"
                                       :scale nil}
                                   :url {:field "url" :type "nominal"}}}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]

                      {:data {:values :query-preview}
                         ;:params [{:name "clicked" :select "point"}]
                       :projection {:type "mercator"
                                    :scale {:expr "scale"}
                                    :center [{:signal "centerX"}
                                             {:signal "centerY"}]
                                    :translate [{:signal "tx"}
                                                {:signal "ty"}]}
                       :mark {:type "point"}
                       :encoding
                       {:latitude {:field :lat-field
                                   :type "quantitative"}
                        :size {:field nil
                               :type "quantitative"}
                        :color {:field :color-field
                                :scale {:scheme "darkmulti"}
                                :type "quantitative"}
                        :longitude {:field :long-field
                                    :type "quantitative"}}
                       :background "transparent"}


                      [:if :condi/us-counties?
                       {:data
                        {:name "us-counties"
                         :url "assets/vega/us-10m.json"
                         :format {:type "topojson"
                                  :feature "counties"}}
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}
                        :mark "geoshape"
                        :encoding {:fill {:value "#a500ff22"}
                                   :fillOpacity {:value 0.1}
                                   :stroke {:value "#FFA50022"}
                                   :strokeWidth {:value 2}}
                        :background "transparent"}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]


                      [:if :condi/us-states?
                       {:data
                        {:name "us-states"
                         :url "assets/vega/us-10m.json"
                         :format {:type "topojson"
                                  :feature "states"}}
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}
                        :mark "geoshape"
                        :encoding {:fill {:value "#FFA50044"}
                                   :fillOpacity {:value 0.1}
                                   :stroke {:value "#FFA50044"}
                                   :strokeWidth {:value 2}}
                        :background "transparent"}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]


                      [:if :condi/country-lines?
                       {:data
                        {:name "world"
                         :url "assets/vega/world-110m.json"
                         :format {:type "topojson"
                                  :feature "countries"}}
                        :mark "geoshape"
                        :encoding {:fill {:value "#FFA500"}
                                   :fillOpacity {:value 0.1}
                                   :stroke {:value "#FFA500"}
                                   :strokeWidth {:value 2}}
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}
                       {:mark "geoshape"
                        :projection {:type "mercator"
                                     :scale {:expr "scale"}
                                     :center [{:signal "centerX"}
                                              {:signal "centerY"}]
                                     :translate [{:signal "tx"}
                                                 {:signal "ty"}]}}]]
                     :background "transparent"
                     :config {:view {:stroke "transparent"}}}
                    {:actions false}]]
                  :base-score 1}


 :us-states-fips-map-dim {:axes {:state [:fips-state-code?]
                                 :color [:dimension?]}
                          :sql-maps [{:select [:state-field :color-field]
                                      :from [:table]
                                      :group-by [:state-field]}]

                          :conditionals {:country-lines? false
                                         :us-counties? false
                                         :us-states? true
                                         :geo-background? false}

                          :library-shapes
                          [:box :child
                           [:vega-lite
                            {:width "container"
                             :height :panel-height+50
                             :autosize "none"
                             :padding {:top 0 :bottom 0 :left 0 :right 0}
                             :params
                             [{:name "tx" :expr "width/2"}
                              {:name "ty" :expr "height/2"}
                              {:name "zoom_precise"
                               :value 4 ;:query-preview-2/long_diff.0 ;10
                               :bind {:input "range" :min 2 :max 30 :step 0.05}}
                              {:name "centerY"
                               :value 38.76
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                      :min -60
                                      :max 60
                                      :step 0.01}}
                              {:name "centerX"
                               :value -97.17
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                      :min -180
                                      :max 180
                                      :step 0.01}}
                              {:name "baseTileSize" :value 256}
                              {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                              {:name "zoom" :expr "ceil(zoom_precise)"}
                              {:name "tilesCount" :expr "pow(2,zoom)"}
                              {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                              {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                              {:name "basePoint" :expr "invert('projection',[0,0])"}
                              {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                              {:name "di" :expr "floor(dii)"}
                              {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                              {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                              {:name "dj" :expr "floor(djj)"}
                              {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                              {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                             :layer
                             [[:if :condi/geo-background?
                               {:data {:name "tile_list"
                                       :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                :transform
                                [{:calculate "sequence(0,maxTiles)" :as "b"}
                                 {:flatten ["b"]}
                                 {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                 {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                 {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                :mark {:type "image"
                                       :opacity 0.5
                                       :background "#000000"
                                       :fill "#000000"
                                       :width {:signal "tileSize"}
                                       :height {:signal "tileSize"}}
                                :encoding {:x {:field "x"
                                               :type "quantitative"
                                               :scale nil}
                                           :y {:field "y"
                                               :type "quantitative"
                                               :scale nil}
                                           :url {:field "url" :type "nominal"}}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                              [:if :condi/us-counties?
                               {:data
                                {:name "us-counties"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "counties"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :encoding {:fill {:value "#a500ff22"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA50022"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/us-states?
                               {:data
                                {:name "us-states"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "states"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :transform [{:lookup :id
                                             :from {:data {:values :query-preview}
                                                    :key :state-field
                                                    :fields [:state-field
                                                             :color-field]}}]
                                :encoding {:color {:field :color-field
                                                   :type "nominal"
                                                   :scale {:scheme "spectral"}}
                                           :stroke {:value "#FFA50077"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/country-lines?
                               {:data
                                {:name "world"
                                 :url "assets/vega/world-110m.json"
                                 :format {:type "topojson"
                                          :feature "countries"}}
                                :mark "geoshape"
                                :encoding {:fill {:value "#FFA500"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA500"}
                                           :strokeWidth {:value 2}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]]
                             :background "transparent"
                             :config {:view {:stroke "transparent"}}}
                            {:actions false}]]
                          :base-score 1}


 :us-states-fips-map-agg {:axes {:state [:fips-state-code?]
                                 :color [:measure?]}
                          :sql-maps [{:select [:state-field [[:sum :color-field] :color-field]]
                                      :from [:table]
                                      :group-by [:state-field]}]

                          :conditionals {:country-lines? false
                                         :us-counties? false
                                         :us-states? true
                                         :geo-background? false}

                          :library-shapes
                          [:box :child
                           [:vega-lite
                            {:width "container"
                             :height :panel-height+50
                             :autosize "none"
                             :padding {:top 0 :bottom 0 :left 0 :right 0}
                             :params
                             [{:name "tx" :expr "width/2"}
                              {:name "ty" :expr "height/2"}
                              {:name "zoom_precise"
                               :value 4 ;:query-preview-2/long_diff.0 ;10
                               :bind {:input "range" :min 2 :max 30 :step 0.05}}
                              {:name "centerY"
                               :value 38.76
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                      :min -60
                                      :max 60
                                      :step 0.01}}
                              {:name "centerX"
                               :value -97.17
                               :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                      :min -180
                                      :max 180
                                      :step 0.01}}
                              {:name "baseTileSize" :value 256}
                              {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                              {:name "zoom" :expr "ceil(zoom_precise)"}
                              {:name "tilesCount" :expr "pow(2,zoom)"}
                              {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                              {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                              {:name "basePoint" :expr "invert('projection',[0,0])"}
                              {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                              {:name "di" :expr "floor(dii)"}
                              {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                              {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                              {:name "dj" :expr "floor(djj)"}
                              {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                              {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                             :layer
                             [[:if :condi/geo-background?
                               {:data {:name "tile_list"
                                       :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                :transform
                                [{:calculate "sequence(0,maxTiles)" :as "b"}
                                 {:flatten ["b"]}
                                 {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                 {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                 {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                :mark {:type "image"
                                       :opacity 0.5
                                       :background "#000000"
                                       :fill "#000000"
                                       :width {:signal "tileSize"}
                                       :height {:signal "tileSize"}}
                                :encoding {:x {:field "x"
                                               :type "quantitative"
                                               :scale nil}
                                           :y {:field "y"
                                               :type "quantitative"
                                               :scale nil}
                                           :url {:field "url" :type "nominal"}}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                              [:if :condi/us-counties?
                               {:data
                                {:name "us-counties"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "counties"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :encoding {:fill {:value "#a500ff22"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA50022"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/us-states?
                               {:data
                                {:name "us-states"
                                 :url "assets/vega/us-10m.json"
                                 :format {:type "topojson"
                                          :feature "states"}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}
                                :mark "geoshape"
                                :transform [{:lookup :id
                                             :from {:data {:values :query-preview}
                                                    :key :state-field
                                                    :fields [:state-field
                                                             :color-field]}}]
                                :encoding {:color {:field :color-field
                                                   :type "quantitative"
                                                   :scale {:scheme "spectral"}}
                                           :stroke {:value "#FFA50077"}
                                           :strokeWidth {:value 2}}
                                :background "transparent"}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]


                              [:if :condi/country-lines?
                               {:data
                                {:name "world"
                                 :url "assets/vega/world-110m.json"
                                 :format {:type "topojson"
                                          :feature "countries"}}
                                :mark "geoshape"
                                :encoding {:fill {:value "#FFA500"}
                                           :fillOpacity {:value 0.1}
                                           :stroke {:value "#FFA500"}
                                           :strokeWidth {:value 2}}
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}
                               {:mark "geoshape"
                                :projection {:type "mercator"
                                             :scale {:expr "scale"}
                                             :center [{:signal "centerX"}
                                                      {:signal "centerY"}]
                                             :translate [{:signal "tx"}
                                                         {:signal "ty"}]}}]]
                             :background "transparent"
                             :config {:view {:stroke "transparent"}}}
                            {:actions false}]]
                          :base-score 1}


 :us-counties-fips-map-dim {:axes {:county [:fips-county-code?]
                                   :color [:dimension?]}
                            :sql-maps [{:select [:county-field :color-field]
                                        :from [:table]
                                        :group-by [:county-field]}]

                            :conditionals {:country-lines? false
                                           :us-counties? true
                                           :us-states? false
                                           :geo-background? false}

                            :library-shapes
                            [:box :child
                             [:vega-lite
                              {:width "container"
                               :height :panel-height+50
                               :autosize "none"
                               :padding {:top 0 :bottom 0 :left 0 :right 0}
                               :params
                               [{:name "tx" :expr "width/2"}
                                {:name "ty" :expr "height/2"}
                                {:name "zoom_precise"
                                 :value 4 ;:query-preview-2/long_diff.0 ;10
                                 :bind {:input "range" :min 2 :max 30 :step 0.05}}
                                {:name "centerY"
                                 :value 38.76
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                        :min -60
                                        :max 60
                                        :step 0.01}}
                                {:name "centerX"
                                 :value -97.17
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                        :min -180
                                        :max 180
                                        :step 0.01}}
                                {:name "baseTileSize" :value 256}
                                {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                                {:name "zoom" :expr "ceil(zoom_precise)"}
                                {:name "tilesCount" :expr "pow(2,zoom)"}
                                {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                                {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                                {:name "basePoint" :expr "invert('projection',[0,0])"}
                                {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                                {:name "di" :expr "floor(dii)"}
                                {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                                {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                                {:name "dj" :expr "floor(djj)"}
                                {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                                {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                               :layer
                               [[:if :condi/geo-background?
                                 {:data {:name "tile_list"
                                         :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                  :transform
                                  [{:calculate "sequence(0,maxTiles)" :as "b"}
                                   {:flatten ["b"]}
                                   {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                   {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                   {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                  :mark {:type "image"
                                         :opacity 0.5
                                         :background "#000000"
                                         :fill "#000000"
                                         :width {:signal "tileSize"}
                                         :height {:signal "tileSize"}}
                                  :encoding {:x {:field "x"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :y {:field "y"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :url {:field "url" :type "nominal"}}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                                [:if :condi/us-counties?
                                 {:data
                                  {:name "us-counties"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "counties"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :transform [{:lookup :id
                                               :from {:data {:values :query-preview}
                                                      :key :county-field
                                                      :fields [:county-field
                                                               :color-field]}}]
                                  :encoding {:color {:field :color-field
                                                     :type "nominal"
                                                     :scale {:scheme "spectral"}}
                                             :stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/us-states?
                                 {:data
                                  {:name "us-states"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "states"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :encoding {:stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/country-lines?
                                 {:data
                                  {:name "world"
                                   :url "assets/vega/world-110m.json"
                                   :format {:type "topojson"
                                            :feature "countries"}}
                                  :mark "geoshape"
                                  :encoding {:fill {:value "#FFA500"}
                                             :fillOpacity {:value 0.1}
                                             :stroke {:value "#FFA500"}
                                             :strokeWidth {:value 2}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]]
                               :background "transparent"
                               :config {:view {:stroke "transparent"}}}
                              {:actions false}]]
                            :base-score 1}


 :us-counties-fips-map-agg {:axes {:county [:fips-county-code?]
                                   :color [:measure?]}
                            :sql-maps [{:select [:county-field [[:sum :color-field] :color-field]]
                                        :from [:table]
                                        :group-by [:county-field]}]

                            :conditionals {:country-lines? false
                                           :us-counties? true
                                           :us-states? false
                                           :geo-background? false}

                            :library-shapes
                            [:box :child
                             [:vega-lite
                              {:width "container"
                               :height :panel-height+50
                               :autosize "none"
                               :padding {:top 0 :bottom 0 :left 0 :right 0}
                               :params
                               [{:name "tx" :expr "width/2"}
                                {:name "ty" :expr "height/2"}
                                {:name "zoom_precise"
                                 :value 4 ;:query-preview-2/long_diff.0 ;10
                                 :bind {:input "range" :min 2 :max 30 :step 0.05}}
                                {:name "centerY"
                                 :value 38.76
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_lat.0
                                      ;:max :query-preview-2/max_lat.0
                                        :min -60
                                        :max 60
                                        :step 0.01}}
                                {:name "centerX"
                                 :value -97.17
                                 :bind {:input "range"
                                      ;:min :query-preview-2/min_long.0
                                      ;:max :query-preview-2/max_long.0
                                        :min -180
                                        :max 180
                                        :step 0.01}}
                                {:name "baseTileSize" :value 256}
                                {:name "tileUrl" :value "https://a.tile.openstreetmap.org/"}
                                {:name "zoom" :expr "ceil(zoom_precise)"}
                                {:name "tilesCount" :expr "pow(2,zoom)"}
                                {:name "tileSize" :expr "baseTileSize*pow(2,zoom_precise-zoom)"}
                                {:name "maxTiles" :expr "ceil(max(height,width)/tileSize +1)"}
                                {:name "basePoint" :expr "invert('projection',[0,0])"}
                                {:name "dii" :expr "((basePoint[0]+180)/360*tilesCount)"}
                                {:name "di" :expr "floor(dii)"}
                                {:name "dx" :expr "round((floor(dii)-dii)*tileSize)"}
                                {:name "djj" :expr "((1-log(tan(basePoint[1]*PI/180) + 1/cos(basePoint[1]*PI/180))/PI)/2 *tilesCount)"}
                                {:name "dj" :expr "floor(djj)"}
                                {:name "dy" :expr "round((floor(djj)-djj)*tileSize)"}
                                {:name "scale" :expr "baseTileSize * pow(2,zoom_precise) / (2 * PI)"}]

                               :layer
                               [[:if :condi/geo-background?
                                 {:data {:name "tile_list"
                                         :sequence {:start 0 :stop {:signal "maxTiles"} :as "a"}}
                                  :transform
                                  [{:calculate "sequence(0,maxTiles)" :as "b"}
                                   {:flatten ["b"]}
                                   {:calculate "tileUrl+zoom+'/'+(datum.a+di+tilesCount)%tilesCount+'/'+((datum.b+dj))+'.png'" :as "url"}
                                   {:calculate "(datum.a * tileSize + dx)+(tileSize/2)" :as "x"}
                                   {:calculate "(datum.b * tileSize + dy)+(tileSize/2)" :as "y"}]
                                  :mark {:type "image"
                                         :opacity 0.5
                                         :background "#000000"
                                         :fill "#000000"
                                         :width {:signal "tileSize"}
                                         :height {:signal "tileSize"}}
                                  :encoding {:x {:field "x"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :y {:field "y"
                                                 :type "quantitative"
                                                 :scale nil}
                                             :url {:field "url" :type "nominal"}}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]

                     ;;       {:data {:values :query-preview}
                     ;;     ;:params [{:name "clicked" :select "point"}]
                     ;;        :projection {:type "mercator"
                     ;;                     :scale {:expr "scale"}
                     ;;                     :center [{:signal "centerX"}
                     ;;                              {:signal "centerY"}]
                     ;;                     :translate [{:signal "tx"}
                     ;;                                 {:signal "ty"}]}
                     ;;        :mark {:type "point"}
                     ;;        :encoding
                     ;;        {:latitude {:field :lat-field
                     ;;                    :type "quantitative"}
                     ;;         :size {:field nil
                     ;;                :type "quantitative"}
                     ;;         :color {:field 1
                     ;;                 :scale {:scheme "darkmulti"}
                     ;;                 :type "nominal"}
                     ;;         :longitude {:field :long-field
                     ;;                     :type "quantitative"}}
                     ;;        :background "transparent"}


                                [:if :condi/us-counties?
                                 {:data
                                  {:name "us-counties"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "counties"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :transform [{:lookup :id
                                               :from {:data {:values :query-preview}
                                                      :key :county-field
                                                      :fields [:county-field
                                                               :color-field]}}]
                                  :encoding {:color {:field :color-field
                                                     :type "nominal"
                                                     :scale {:scheme "spectral"}}
                                             :stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/us-states?
                                 {:data
                                  {:name "us-states"
                                   :url "assets/vega/us-10m.json"
                                   :format {:type "topojson"
                                            :feature "states"}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}
                                  :mark "geoshape"
                                  :encoding {:stroke {:value "#FFA50077"}
                                             :strokeWidth {:value 2}}
                                  :background "transparent"}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]


                                [:if :condi/country-lines?
                                 {:data
                                  {:name "world"
                                   :url "assets/vega/world-110m.json"
                                   :format {:type "topojson"
                                            :feature "countries"}}
                                  :mark "geoshape"
                                  :encoding {:fill {:value "#FFA500"}
                                             :fillOpacity {:value 0.1}
                                             :stroke {:value "#FFA500"}
                                             :strokeWidth {:value 2}}
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}
                                 {:mark "geoshape"
                                  :projection {:type "mercator"
                                               :scale {:expr "scale"}
                                               :center [{:signal "centerX"}
                                                        {:signal "centerY"}]
                                               :translate [{:signal "tx"}
                                                           {:signal "ty"}]}}]]
                               :background "transparent"
                               :config {:view {:stroke "transparent"}}}
                              {:actions false}]]
                            :base-score 1}



 }
